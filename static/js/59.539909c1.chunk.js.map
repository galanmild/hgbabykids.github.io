{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js","views/apps/roles-permissions/roles/columns.js","views/apps/roles-permissions/roles/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason","renderClient","row","avatar","className","img","width","height","initials","content","fullName","color","avatarColor","statusObj","active","inactive","columns","sortable","minWidth","sortField","selector","cell","to","onClick","store","email","role_name","roleObj","subscriber","class","icon","User","maintainer","Database","editor","Edit2","author","Settings","admin","Slack","Icon","size","renderRole","currentPlan","billing","pill","BootstrapCheckbox","forwardRef","props","ref","type","CustomHeader","plan","handlePlanChange","handlePerPage","rowsPerPage","handleFilter","searchTerm","useTranslation","t","useContext","AbilityContext","xl","htmlFor","onChange","style","e","target","Table","useDispatch","useSelector","useState","setPlan","sort","setSort","setSearchTerm","currentPage","setCurrentPage","setRowsPerPage","sortColumn","setSortColumn","useEffect","getAllData","role","q","page","perPage","noHeader","subHeader","pagination","responsive","selectableRows","paginationServer","onSort","column","sortDirection","filters","isFiltered","some","k","allData","slice","dataToRender","sortIcon","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRowsComponent","subHeaderComponent","val","parseInt","currentTarget"],"mappings":"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","file":"static/js/59.539909c1.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Role\" ////\r\nexport const storeName = \"apps_role\" ////\r\nexport const endpointName = \"api/role\" ////\r\n\r\nexport const serverSideGrid = false ////\r\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    data[\"name\"] = getState()[storeName].selectedData.name\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const resetData = createAsyncThunk(\r\n  `${endpointName}/resetData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          state.selectedData = {\r\n            value: action.payload.data[0].id,\r\n            label: `${action.payload.data[0].name}`\r\n          }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      ///RESET\r\n      .addCase(resetData.rejected, (state) => {\r\n        state.data = []\r\n        state.dataSummary = []\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataRole } from \"../../role/store\"\r\n\r\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\r\n//   // console.log(getState().users.status)\r\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\r\n//   // console.log(response.data.data)\r\n//   return response.data.data\r\n// })\r\nexport const getSummaryData = createAsyncThunk(\r\n  \"appUsers/getSummaryData\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\r\n  Object.keys(params).forEach((key) => {\r\n    if (params[key] === null || params[key] === \"\") {\r\n      delete params[key]\r\n    }\r\n  })\r\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\r\n    params\r\n  })\r\n  return {\r\n    params,\r\n    data: response.data.data,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\r\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\r\n  // console.log(response)\r\n  return response.data.data\r\n})\r\n\r\nexport const addUser = createAsyncThunk(\r\n  \"appUsers/addUser\",\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(resetDataRole({}))\r\n      // return response.data\r\n      return user\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"appUsers/updateUser\",\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id\r\n    delete data.id\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.put(\r\n        `/api/user/${id}`,\r\n        data\r\n      )\r\n      dispatch(getUser(id))\r\n      dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.errors)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n  \"appUsers/deleteUser\",\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.delete(\r\n        `/api/user/${id}`\r\n      )\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataEmployee = createAsyncThunk(\r\n  \"appUsers/getDataEmployee\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      totalPages: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const appUsersSlice = createSlice({\r\n  name: \"appUsers\",\r\n  initialState: {\r\n    crudTitle: \"User\",\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n    params: {},\r\n\r\n    // EMPLOYEE\r\n    status_employee: fetchStatus,\r\n    isLoading_employee: false,\r\n    error_employee: \"\" | null,\r\n    data_employee: [],\r\n    total_employee: 1,\r\n    params_employee: {},\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n    selectedUser: null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getData.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.totalPages\r\n      })\r\n      .addCase(getData.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataEmployee.pending, (state) => {\r\n        state.status_employee = \"loading\"\r\n        state.isLoading_employee = true\r\n      })\r\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status_employee = \"succeeded\"\r\n        state.isLoading_employee = false\r\n        state.data_employee = action.payload.data\r\n        state.params_employee = action.payload.params\r\n        state.total_employee = action.payload.totalPages\r\n      })\r\n      .addCase(getDataEmployee.rejected, (state, action) => {\r\n        state.status_employee = \"failed\"\r\n        state.isLoading_employee = false\r\n        state.error_employee = action.error.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(updateUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        if (typeof action.payload === \"object\") {\r\n          state.errorAddEdit = JSON.stringify(action.payload)\r\n        } else {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(addUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(addUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(addUser.rejected, (state, action) => {\r\n        console.log(action)\r\n\r\n        if (action.payload.errors) {\r\n          state.errorAddEdit = Object.values(action.payload.errors)\r\n        } else if (action.payload.error_reason) {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        // console.log(action)\r\n        state.errorDelete = action.payload.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getUser.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n        state.selectedUser = null\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = action.payload\r\n      })\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = null\r\n        state.errorDetail = action.error.message\r\n      })\r\n  }\r\n})\r\n\r\nexport default appUsersSlice.reducer\r\n","// ** React Imports\r\nimport { Link } from \"react-router-dom\"\r\n\r\n// ** Custom Components\r\nimport Avatar from \"@components/avatar\"\r\n\r\n// ** Store & Actions\r\nimport { store } from \"@store/store\"\r\nimport { getUser } from \"@src/views/apps/user/store\"\r\n\r\n// ** Icons Imports\r\nimport { Slack, User, Settings, Database, Edit2, Eye } from \"react-feather\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Badge } from \"reactstrap\"\r\n\r\n// ** Renders Client Columns\r\nconst renderClient = (row) => {\r\n  if (row.avatar.length) {\r\n    return <Avatar className=\"me-1\" img={row.avatar} width=\"32\" height=\"32\" />\r\n  } else {\r\n    return (\r\n      <Avatar\r\n        initials\r\n        className=\"me-1\"\r\n        content={row.fullName || \"John Doe\"}\r\n        color={row.avatarColor || \"light-primary\"}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\n// ** Renders Role Columns\r\nconst renderRole = (row) => {\r\n  const roleObj = {\r\n    subscriber: {\r\n      class: \"text-primary\",\r\n      icon: User\r\n    },\r\n    maintainer: {\r\n      class: \"text-success\",\r\n      icon: Database\r\n    },\r\n    editor: {\r\n      class: \"text-info\",\r\n      icon: Edit2\r\n    },\r\n    author: {\r\n      class: \"text-warning\",\r\n      icon: Settings\r\n    },\r\n    admin: {\r\n      class: \"text-danger\",\r\n      icon: Slack\r\n    }\r\n  }\r\n\r\n  const Icon = roleObj[row.role_name] ? roleObj[row.role_name].icon : Edit2\r\n\r\n  return (\r\n    <span className=\"text-truncate text-capitalize align-middle\">\r\n      <Icon\r\n        size={18}\r\n        className={`${\r\n          roleObj[row.role_name] ? roleObj[row.role_name].class : \"\"\r\n        } me-50`}\r\n      />\r\n      {row.role_name}\r\n    </span>\r\n  )\r\n}\r\n\r\nconst statusObj = {\r\n  pending: \"light-warning\",\r\n  active: \"light-success\",\r\n  inactive: \"light-secondary\"\r\n}\r\n\r\nexport const columns = [\r\n  {\r\n    name: \"Name\",\r\n    sortable: true,\r\n    minWidth: \"297px\",\r\n    sortField: \"fullName\",\r\n    selector: (row) => row.fullName,\r\n    cell: (row) => (\r\n      <div className=\"d-flex justify-content-left align-items-center\">\r\n        {renderClient(row)}\r\n        <div className=\"d-flex flex-column\">\r\n          <Link\r\n            to={`/apps/user/view/${row.id}`}\r\n            className=\"user_name text-truncate text-body\"\r\n            onClick={() => store.dispatch(getUser(row.id))}\r\n          >\r\n            <span className=\"fw-bold\">{row.fullName}</span>\r\n          </Link>\r\n          <small className=\"text-truncate text-muted mb-0\">{row.email}</small>\r\n        </div>\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    name: \"Role\",\r\n    sortable: true,\r\n    minWidth: \"172px\",\r\n    sortField: \"role\",\r\n    selector: (row) => row.role_name,\r\n    cell: (row) => renderRole(row)\r\n  },\r\n  {\r\n    name: \"Plan\",\r\n    sortable: true,\r\n    minWidth: \"138px\",\r\n    sortField: \"currentPlan\",\r\n    selector: (row) => row.currentPlan,\r\n    cell: (row) => <span className=\"text-capitalize\">{row.currentPlan}</span>\r\n  },\r\n  {\r\n    name: \"Billing\",\r\n    sortable: true,\r\n    minWidth: \"230px\",\r\n    sortField: \"billing\",\r\n    selector: (row) => row.billing,\r\n    sortField: \"billing\",\r\n    selector: (row) => row.billing,\r\n    cell: (row) => <span className=\"text-capitalize\">{row.billing}</span>\r\n  },\r\n  {\r\n    name: \"Status\",\r\n    sortable: true,\r\n    minWidth: \"138px\",\r\n    sortField: \"status\",\r\n    selector: (row) => row.status,\r\n    cell: (row) => (\r\n      <Badge className=\"text-capitalize\" color={statusObj[row.status]} pill>\r\n        {row.status}\r\n      </Badge>\r\n    )\r\n  },\r\n  {\r\n    name: \"Actions\",\r\n    minWidth: \"100px\",\r\n    cell: (row) => (\r\n      <Link to={`/apps/user/view/${row.id}`}>\r\n        <Eye className=\"font-medium-3 text-body\" />\r\n      </Link>\r\n    )\r\n  }\r\n]\r\n","// ** React Imports\r\nimport { useState, useEffect, forwardRef } from \"react\"\r\n\r\n// ** Table Columns\r\nimport { columns } from \"./columns\"\r\n\r\n// ** Store & Actions\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getData } from \"@src/views/apps/user/store\"\r\n\r\n// ** Third Party Components\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { ChevronDown } from \"react-feather\"\r\nimport DataTable from \"react-data-table-component\"\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, Input, Row, Col } from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\n// ** Styles\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  plan,\r\n  handlePlanChange,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"6\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">Show</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">Entries</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"6\"\r\n          className=\"d-flex align-items-sm-center justify-content-lg-end justify-content-start flex-lg-nowrap flex-wrap flex-sm-row flex-column pe-lg-1 p-0 mt-lg-0 mt-1\"\r\n        >\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              Search:\r\n            </label>\r\n            <Input\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          <Input\r\n            value={plan}\r\n            type=\"select\"\r\n            style={{ width: \"10rem\" }}\r\n            onChange={(e) => handlePlanChange(e.target.value)}\r\n          >\r\n            <option value=\"\">Select Role</option>\r\n            <option value=\"basic\">Basic</option>\r\n            <option value=\"company\">Company</option>\r\n            <option value=\"enterprise\">Enterprise</option>\r\n            <option value=\"team\">Team</option>\r\n          </Input>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Table = () => {\r\n  // ** Store Vars\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n\r\n  // ** States\r\n  const [plan, setPlan] = useState(\"\")\r\n  const [sort, setSort] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [sortColumn, setSortColumn] = useState(\"id\")\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    dispatch(getAllData())\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: \"\",\r\n        sortColumn,\r\n        status: \"\",\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }, [dispatch, store.data.length])\r\n\r\n  // ** Function in get data on page change\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: \"\",\r\n        status: \"\",\r\n        sortColumn,\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        perPage: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  // ** Function in get data on rows per page\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: \"\",\r\n        sortColumn,\r\n        status: \"\",\r\n        q: searchTerm,\r\n        perPage: value,\r\n        currentPlan: plan,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  // ** Function in get data on search query change\r\n  const handleFilter = (val) => {\r\n    setSearchTerm(val)\r\n    dispatch(\r\n      getData({\r\n        q: val,\r\n        sort,\r\n        role: \"\",\r\n        sortColumn,\r\n        status: \"\",\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handlePlanChange = (val) => {\r\n    setPlan(val)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: val,\r\n        sortColumn,\r\n        status: \"\",\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  // ** Custom Pagination\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  // ** Table data to render\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      q: searchTerm\r\n    }\r\n\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n\r\n    if (store.data.length > 0) {\r\n      return store.data\r\n    } else if (store.data.length === 0 && isFiltered) {\r\n      return []\r\n    } else {\r\n      return store.allData.slice(0, rowsPerPage)\r\n    }\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSort(sortDirection)\r\n    setSortColumn(column.sortField)\r\n    dispatch(\r\n      getData({\r\n        sort,\r\n        role: \"\",\r\n        sortColumn,\r\n        status: \"\",\r\n        q: searchTerm,\r\n        currentPlan: plan,\r\n        page: currentPage,\r\n        perPage: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n        <DataTable\r\n          noHeader\r\n          subHeader\r\n          pagination\r\n          responsive\r\n          selectableRows\r\n          paginationServer\r\n          columns={columns}\r\n          onSort={handleSort}\r\n          data={dataToRender()}\r\n          sortIcon={<ChevronDown />}\r\n          paginationComponent={CustomPagination}\r\n          selectableRowsComponent={BootstrapCheckbox}\r\n          className=\"react-dataTable\"\r\n          subHeaderComponent={\r\n            <CustomHeader\r\n              plan={plan}\r\n              searchTerm={searchTerm}\r\n              rowsPerPage={rowsPerPage}\r\n              handleFilter={handleFilter}\r\n              handlePerPage={handlePerPage}\r\n              handlePlanChange={handlePlanChange}\r\n            />\r\n          }\r\n        />\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Table\r\n"],"sourceRoot":""}