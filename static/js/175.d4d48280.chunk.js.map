{"version":3,"sources":["shared/public_pages/index.js"],"names":["PublicPage","useSkin","skin","useTranslation","t","useNavigate","useState","pageHtmlStr","setPageHtmlStr","themeSelected","setThemeSelected","folderReplacements","fetchHtmlFile","a","fetch","process","response","text","html","map","folder","console","log","replaceAll","error","useEffect","dangerouslySetInnerHTML","__html"],"mappings":"uPAuFeA,UA7EI,WAEAC,cAATC,KACMC,cAANC,EACSC,cAFjB,IAGA,EAA0CC,mBAAS,cAAnD,mBACA,GADA,UACkCA,mBAAS,OAA3C,mBACA,GADA,UACsCA,mBAAS,KAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAS,SAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KACMC,EAAqB,CAAC,UAAW,UAAW,YAE5CC,EAAa,uCAAG,8BAAAC,EAAA,+EAGKC,MAAM,GAAD,OACvBC,GADuB,oBACWN,EADX,gBAHV,cAGZO,EAHY,gBAMDA,EAASC,OANR,OAMdC,EANc,OAOAA,EAClBP,EAAmBQ,KAAI,SAACC,GACtBC,QAAQC,IAAIF,GACZF,EAAOA,EAAKK,WAAL,YAAqBH,GAArB,0BAAkDA,OAM3DC,QAAQC,IAAIJ,GACZV,EAAeU,GAjBG,kDAmBlBG,QAAQG,MAAM,2BAAd,MAnBkB,0DAAH,qDA+BnB,OARAC,qBAAU,WAIRf,EAAiB,SACjBE,MACC,IAECL,EACK,sBAAMmB,wBAAyB,CAAEC,OAAQpB,KAczC","file":"static/js/175.d4d48280.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { Button, Form, Input, Row, Col } from \"reactstrap\"\r\n\r\nimport { useNavigate } from \"react-router-dom\"\r\n// ** Custom Hooks\r\nimport { useSkin } from \"@hooks/useSkin\"\r\nimport { useTranslation } from \"react-i18next\"\r\n// ** Styles\r\nimport \"@styles/base/pages/page-misc.scss\"\r\n\r\nconst PublicPage = () => {\r\n  // ** Hooks\r\n  const { skin } = useSkin()\r\n  const { t } = useTranslation()\r\n  const navigate = useNavigate()\r\n  const [componentName, setComponentName] = useState(\"Component1\")\r\n  const [Component, setComponent] = useState(null)\r\n  const [pageHtmlStr, setPageHtmlStr] = useState(\"\")\r\n  const [themeSelected, setThemeSelected] = useState(\"naxos\")\r\n  const folderReplacements = [\"assets/\", \"images/\", \"preview/\"]\r\n\r\n  const fetchHtmlFile = async () => {\r\n    try {\r\n      // const response = await fetch(`${process.env.PUBLIC_URL}/${match.params.page}.html`);\r\n      const response = await fetch(\r\n        `${process.env.PUBLIC_URL}/website/${themeSelected}/index.html`\r\n      )\r\n      let html = await response.text()\r\n      let newPageHtml = html\r\n      folderReplacements.map((folder) => {\r\n        console.log(folder)\r\n        html = html.replaceAll(`=\"${folder}`, `=\"website/naxos/${folder}`)\r\n      })\r\n      // let newPageHtml = html\r\n      //   ?.replaceAll(\"assets/\", `website/naxos/assets/`)\r\n      //   .replaceAll(\"images/\", `website/naxos/images/`)\r\n      //   .replaceAll(\"preview/\", `website/naxos/preview/`)\r\n      console.log(html)\r\n      setPageHtmlStr(html)\r\n    } catch (error) {\r\n      console.error(\"Error loading HTML file:\", error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // import(`./${componentName}`).then((module) => {\r\n    //   setComponent(module.default)\r\n    // })\r\n    setThemeSelected(\"naxos\")\r\n    fetchHtmlFile()\r\n  }, [])\r\n\r\n  if (pageHtmlStr) {\r\n    return <html dangerouslySetInnerHTML={{ __html: pageHtmlStr }}></html>\r\n    // return (\r\n    //   <iframe\r\n    //     width={100}\r\n    //     height={100}\r\n    //     style={{\r\n    //       width: \"100%\",\r\n    //       height: \"100%\"\r\n    //     }}\r\n    //     title=\"Dynamic HTML\"\r\n    //     srcDoc={pageHtmlStr}\r\n    //   />\r\n    // )\r\n  } else {\r\n    return <div>Public Page...</div>\r\n  }\r\n\r\n  return <Component />\r\n\r\n  // return (\r\n  //   <div className=\"misc-wrapper\">\r\n  //     <div className=\"misc-inner p-2 p-sm-3\">\r\n  //       <div className=\"w-100 text-center\">\r\n  //         <h2 className=\"mb-1\">{t(\"Under Maintenance\")} ðŸ› </h2>\r\n  //         <p className=\"mb-3\">\r\n  //           {t(\r\n  //             \" Sorry for the inconvenience but we're performing some maintenance at the moment\"\r\n  //           )}\r\n  //         </p>\r\n  //       </div>\r\n  //     </div>\r\n  //   </div>\r\n  // )\r\n}\r\nexport default PublicPage\r\n"],"sourceRoot":""}