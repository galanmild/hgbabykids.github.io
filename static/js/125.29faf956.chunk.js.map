{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/unit/modal/index.js","views/apps/unit/Tree.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","keys","sort","reduce","obj","key","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","onSubmit","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","icon","depth","postData","console","log","md","xs","for","defaultValue","name","render","invalid","code","outline","onClick","MySwal","withReactContent","Swal","List","searchString","sidebarOpen","setSidebarOpen","ability","AbilityContext","setLoading","showModal","setShowModal","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleDelete","a","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","useEffect","dataNested","isLoadingNested","getAlwaysGrid","getDataList","height","marginLeft","marginRight","marginTop","treeData","onChange","tree","setDataListNested","canDrag","searchMethod","node","searchQuery","toLowerCase","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontSize","is_app_header","fontWeight","attributes","logo","src","buttons","can","sessionStorage","getItem","Ripple","e","size","placement","target","disableEdit","rowData","preventDefault","detailFromGrid","setDataById","disableDelete","children"],"mappings":"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","file":"static/js/125.29faf956.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload?.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      data[\"depth\"] = currentData.depth + 1\r\n      data[\"parent_id\"] = currentData.id\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" ? (\r\n              <p>\r\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\r\n                dulu akun anda.\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Name\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Code\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.code ?? \"\"}\r\n                  control={control}\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"code\"\r\n                      invalid={errors.code && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport { Fragment, useState, useEffect, useContext } from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  setDataListNested,\r\n  putData\r\n} from \"./store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Edit2, Trash2, Plus } from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport { Card, Button, UncontrolledTooltip, CardText } from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Avatar from \"@components/avatar\"\r\n\r\nconst List = (searchString) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row.id)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    // console.log(tree)\r\n    dispatch(setDataListNested(tree))\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(nextParentNode)\r\n    const data = {\r\n      name: node.name,\r\n      id: node.id,\r\n      parent_id: nextParentNode.id\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.name\r\n    delete data[\"name\"]\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    return (\r\n      searchQuery &&\r\n      node.name.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  useEffect(() => {\r\n    // console.log(store)\r\n    if (\r\n      (store.dataNested.length === 0 && !store.isLoadingNested) ||\r\n      getAlwaysGrid\r\n    ) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.dataNested.length > 0])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoadingNested} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: 1000,\r\n                marginLeft: 20,\r\n                marginRight: 20,\r\n                marginTop: 40\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.dataNested}\r\n                onChange={handleChange}\r\n                // onMoveNode={onMoveNode}\r\n                // canDrag={eventCanDragNode}\r\n                canDrag={false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString.searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={10}\r\n                generateNodeProps={({ node, path }) => ({\r\n                  style: {\r\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                  },\r\n                  title: (\r\n                    <div className=\"d-flex justify-content-left align-items-center\">\r\n                      {\r\n                        node?.attributes?.logo && (\r\n                          <img\r\n                            className=\"me-1\"\r\n                            src={node.attributes.logo}\r\n                            // width=\"60\"\r\n                            height=\"25\"\r\n                          />\r\n                        )\r\n                        // : (\r\n                        //   <Avatar\r\n                        //     initials\r\n                        //     className=\"me-1\"\r\n                        //     color={\"light-primary\"}\r\n                        //     content={node.name || \"\"}\r\n                        //   />\r\n                        // )\r\n                      }\r\n                      <div className=\"d-flex flex-column\">\r\n                        <span className=\"fw-bolder\">\r\n                          {/* {node.code}  */}\r\n                          {node.name}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ),\r\n                  buttons: [\r\n                    ability.can(\r\n                      \"post\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-primary\"\r\n                          id=\"btn-add-child\"\r\n                          onClick={(e) => {\r\n                            toggleSidebar(node)\r\n                          }}\r\n                        >\r\n                          <Plus size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-add-child\"\r\n                        >\r\n                          {t(\"Add Child\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"update\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !node.is_app_header &&\r\n                    !node.disableEdit ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-info\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(node)\r\n                          }}\r\n                        >\r\n                          <Edit2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Edit\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"delete\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !node.disableDelete &&\r\n                    node?.children?.length === 0 ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          id=\"btn-delete\"\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-danger\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(node.id)\r\n                          }}\r\n                        >\r\n                          <Trash2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-delete\"\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null\r\n                  ]\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}