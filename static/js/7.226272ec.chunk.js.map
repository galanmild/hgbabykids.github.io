{"version":3,"sources":["views/apps/app/store/index.js","views/apps/unit_app/store/index.js","views/apps/unit_app/modal/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","storeApp","apps_app","storeUnit","units","useState","colors","useContext","ThemeColors","setLoadingText","idApp","setIdApp","unitOptions","setUnitOptions","unitOptionsSelected","setUnitOptionsSelected","useForm","control","setError","handleSubmit","errors","handleReset","useEffect","getDataListApp","filter","el","id_app","x","id_unit","isOpen","toggle","className","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","domain","render","invalid","theme","selectThemeColors","onChange","options","classnames","classNamePrefix","isClearable","closeMenuOnSelect","e","log","description","outline","onClick"],"mappings":"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","file":"static/js/7.226272ec.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"App\" ////\r\nexport const storeName = \"apps_app\" ////\r\nexport const endpointName = \"api/app\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = false ////\r\nexport const getApiAfterPost = false ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  // {\r\n  //   columnName: \"Name\", //// Title Of Column\r\n  //   fieldName: \"name\" //// name of field from api\r\n  // },\r\n  // {\r\n  //   columnName: \"Code\",\r\n  //   fieldName: \"code\"\r\n  // }\r\n  // {\r\n  //   columnName: \"Created Date\",\r\n  //   fieldName: \"created_date\",\r\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      } else {\r\n        dispatch(pushCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      } else {\r\n        dispatch(putCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const pushCurrentdata = createAsyncThunk(\r\n  `${endpointName}/pushCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putCurrentdata = createAsyncThunk(\r\n  `${endpointName}/putCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateCurrentdata = createAsyncThunk(\r\n  `${endpointName}/updateCurrentdata`,\r\n  async (putData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return putData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          // state.selectedData = action.payload.data[0]\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action.payload.data)\r\n        // console.log(state.data)\r\n        state.data.unshift(action.payload.data)\r\n      })\r\n\r\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload.data[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\r\n        )\r\n        // console.log(state.data[objIndex])\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"is_uploading\"] = null\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex] = action.payload.data\r\n        }\r\n      })\r\n\r\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\r\n        )\r\n        // console.log(objIndex)\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\r\n        }\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Unit Domain\" ////\r\nexport const storeName = \"apps_unit_app\" ////\r\nexport const endpointName = \"api/unit_app\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  // {\r\n  //   columnName: \"Domain\", //// Title Of Column\r\n  //   fieldName: \"domain\" //// name of field from api\r\n  // }\r\n  // {\r\n  //   columnName: \"App Name\",\r\n  //   fieldName: \"attributes.app_name_alias\"\r\n  //   // fieldName2: \"app_name_alias\"\r\n  // },\r\n  // {\r\n  //   columnName: \"App\",\r\n  //   fieldName: \"app_name\"\r\n  // },\r\n  // {\r\n  //   columnName: \"Unit Name\",\r\n  //   fieldName: \"unit_name\"\r\n  // }\r\n  // {\r\n  //   columnName: \"Created Date\",\r\n  //   fieldName: \"created_date\",\r\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          // state.selectedData = action.payload.data[0]\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.selectedData = action.payload\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n        // console.log(state.selectedData)\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\nimport { getDataList as getDataListApp } from \"../../app/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const storeUnit = useSelector((state) => state.units)\r\n  const [selectedData, setSelectedData] = useState(store.selectedData)\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [idApp, setIdApp] = useState(null)\r\n  const [unitOptions, setUnitOptions] = useState([])\r\n  const [unitOptionsSelected, setUnitOptionsSelected] = useState({})\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    data[\"id_unit\"] = unitOptionsSelected.value\r\n    data[\"id_app\"] = idApp.value\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      // console.log(unitOptionsSelected)\r\n      data[\"id_unit\"] = unitOptionsSelected\r\n      data[\"id_app\"] = idApp\r\n      delete data[\"description\"]\r\n      // console.log(data)\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(data)).then((res) => {\r\n        //\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeUnit = (e) => {\r\n    console.log(e)\r\n    setUnitOptionsSelected(e.value)\r\n    // setUnitOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (storeApp.data.length === 0 || !storeApp.isLoading) {\r\n      dispatch(getDataListApp({}))\r\n    }\r\n\r\n    setIdApp(\r\n      storeApp.dataDropdown.filter(\r\n        (el) => el.value === store.selectedData?.id_app\r\n      )\r\n    )\r\n    const unitOptions = storeUnit.dataDropdown.filter((x) => x.value !== \"\")\r\n    setUnitOptions(unitOptions)\r\n    setUnitOptionsSelected(\r\n      unitOptions.filter((el) => el.value === store.selectedData?.id_unit)\r\n    )\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"domain\">\r\n                  {t(\"Domain Address\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.domain ?? \"\"}\r\n                  control={control}\r\n                  id=\"domain\"\r\n                  name=\"domain\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.domain\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"domain\"\r\n                      invalid={errors.domain && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_app\">\r\n                  {t(\"App\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_app\"\r\n                  theme={selectThemeColors}\r\n                  defaultValue={storeApp.dataDropdown.filter(\r\n                    (el) => el.value === selectedData?.id_app\r\n                  )}\r\n                  onChange={(data) => {\r\n                    setIdApp(data.value)\r\n                  }}\r\n                  options={storeApp.dataDropdown}\r\n                  className={classnames(\"react-select\", {\r\n                    \"is-invalid\": idApp === null\r\n                  })}\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_unit\">\r\n                  {t(\"Unit\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_unit\"\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  closeMenuOnSelect={true}\r\n                  defaultValue={storeUnit.dataDropdown.filter(\r\n                    (el) => el.value === selectedData?.id_unit\r\n                  )}\r\n                  onChange={(data) => {\r\n                    handleChangeUnit(data)\r\n                  }}\r\n                  options={unitOptions}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.domain\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      type=\"textarea\"\r\n                      id=\"description\"\r\n                      invalid={errors.description && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n"],"sourceRoot":""}