{"version":3,"sources":["views/apps/role/store/index.js","views/apps/role/modal/index.js","views/apps/role/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","sort","reduce","obj","handleReset","isOpen","toggle","blocking","loader","onSubmit","storeData","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","render","invalid","description","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","htmlFor","onChange","width","can","sessionStorage","getItem","e","target","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","countSelectedCopy","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","columns","center","sortable","sortField","selector","row","cell","Ripple","preventDefault","size","placement","tableColumns","useMemo","column","minWidth","right","sx","bgcolor","dark","light","animation","height","useEffect","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget"],"mappings":"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","file":"static/js/67.7bfbec84.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Role\" ////\r\nexport const storeName = \"apps_role\" ////\r\nexport const endpointName = \"api/role\" ////\r\n\r\nexport const serverSideGrid = false ////\r\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    data[\"name\"] = getState()[storeName].selectedData.name\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const resetData = createAsyncThunk(\r\n  `${endpointName}/resetData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          state.selectedData = {\r\n            value: action.payload.data[0].id,\r\n            label: `${action.payload.data[0].name}`\r\n          }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      ///RESET\r\n      .addCase(resetData.rejected, (state) => {\r\n        state.data = []\r\n        state.dataSummary = []\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable multiline-ternary */\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport \"moment/locale/id\"\r\nimport { Fragment, useContext, useState } from \"react\"\r\nimport { Controller, useForm } from \"react-hook-form\"\r\nimport toast from \"react-hot-toast\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport {\r\n  Button,\r\n  CardText,\r\n  Col,\r\n  Form,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\"\r\nimport {\r\n  getDataById,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  storeName\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n  const onChangeTgl1 = (event) => {\r\n    setTgl1(event)\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Name\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.description\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"description\"\r\n                      invalid={errors.description && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  Fragment,\r\n  forwardRef,\r\n  useCallback,\r\n  useContext,\r\n  useEffect,\r\n  useMemo,\r\n  useState\r\n} from \"react\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport {\r\n  ChevronDown,\r\n  Edit2,\r\n  File,\r\n  FileText,\r\n  Grid,\r\n  Printer,\r\n  Share,\r\n  Trash2\r\n} from \"react-feather\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport {\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  detailFromGrid,\r\n  getAlwaysGrid,\r\n  getDataById,\r\n  getDataList,\r\n  pageTitle,\r\n  setDataById,\r\n  storeName\r\n} from \"./store\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  Col,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n  DropdownToggle,\r\n  Input,\r\n  Row,\r\n  UncontrolledDropdown,\r\n  UncontrolledTooltip\r\n} from \"reactstrap\"\r\n\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { Loader, NoDataDisplay } from \"@src/shared/CommonComponents\"\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      name: t(\"Name\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"name\",\r\n      selector: (row) => row.name,\r\n      cell: (row) => row.name\r\n    },\r\n    {\r\n      name: t(\"Description\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"description\",\r\n      selector: (row) => row.description,\r\n      cell: (row) => row.description\r\n    },\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <div className=\"column-action text-center\">\r\n          {ability.can(\r\n            \"delete\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                id=\"btn-delete\"\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-danger\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleDelete(row.id)\r\n                }}\r\n              >\r\n                <Trash2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-delete\">\r\n                {t(\"Delete\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n\r\n          {ability.can(\r\n            \"update\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-info\"\r\n                id=\"btn-edit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleEdit(row)\r\n                }}\r\n              >\r\n                <Edit2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                {t(\"Edit\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: column.name,\r\n            center: column.center,\r\n            sortable: false,\r\n            minWidth: column.minWidth,\r\n            width: column.width,\r\n            right: column.right,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                // variant={column.name === \"Actions\" ? \"circular\" : \"rectangular\"}\r\n                // sx={{ bgcolor: \"#eef2f8\" }}\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: column.name,\r\n            center: column.center,\r\n            sortable: column.sortable,\r\n            minWidth: column.minWidth,\r\n            width: column.width,\r\n            sortField: column.sortField,\r\n            right: column.right,\r\n            selector: column.selector,\r\n            cell: column.cell\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}