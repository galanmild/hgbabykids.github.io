{"version":3,"sources":["views/pages/authentication/register-multi-steps/steps/EmailVerification.js"],"names":["ToastContent","x","name","message","className","size","color","icon","onClick","toast","dismiss","id","ToastErrorContent","defaultValues","address","firstName","EmailVerification","stepper","t","useTranslation","useSkin","skin","useState","block","setBlock","setErrorInfo","setSuccessInfo","otp","setOtp","useForm","handleSubmit","control","setError","formState","errors","blocking","loader","onSubmit","data","every","value","params","parseInt","join","replaceAll","register_token","sessionStorage","getItem","useJwt","registerOtp","then","res","removeItem","setItem","next","catch","err","messageError","includes","response","error_reason","map","index","md","xs","type","maxLength","onChange","e","newOtp","target","nextInput","document","getElementById","focus","handleInputChange","onKeyDown","key","prevInput","handleKeyDown","style","width","height","textAlign","fontSize","fontWeight","outline","previous"],"mappings":"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","file":"static/js/160.0a8f7f26.chunk.js","sourcesContent":["import { useState, Fragment } from \"react\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { AlertCircle, ChevronLeft, Navigation, X, Check } from \"react-feather\"\r\nimport { Form, Input, Row, Col, Button } from \"reactstrap\"\r\n\r\nimport { useTranslation } from \"react-i18next\"\r\nimport toast from \"react-hot-toast\"\r\nimport Avatar from \"@components/avatar\"\r\nimport Spinner from \"@components/spinner/Fallback-spinner\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport { useSkin } from \"@hooks/useSkin\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\nconst ToastContent = ({ x, name, message }) => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div className=\"me-1\">\r\n        <Avatar size=\"sm\" color=\"info\" icon={<Navigation size={12} />} />\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h6>{name}</h6>\r\n          <X\r\n            size={12}\r\n            className=\"cursor-pointer\"\r\n            onClick={() => toast.dismiss(x.id)}\r\n          />\r\n        </div>\r\n        <span>{message}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ToastErrorContent = ({ x, name, message }) => {\r\n  return (\r\n    <div className=\"d-flex\">\r\n      <div className=\"me-1\">\r\n        <Avatar size=\"sm\" color=\"danger\" icon={<AlertCircle size={12} />} />\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"d-flex justify-content-between\">\r\n          <h6>{name}</h6>\r\n          <X\r\n            size={12}\r\n            className=\"cursor-pointer\"\r\n            onClick={() => toast.dismiss(x.id)}\r\n          />\r\n        </div>\r\n        <span>{message}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst defaultValues = {\r\n  address: \"\",\r\n  firstName: \"\"\r\n}\r\n\r\nconst EmailVerification = ({ stepper }) => {\r\n  const { t } = useTranslation()\r\n  const { skin } = useSkin()\r\n  const [block, setBlock] = useState(false)\r\n  const [errorInfo, setErrorInfo] = useState(null)\r\n  const [successInfo, setSuccessInfo] = useState(null)\r\n  const [otp, setOtp] = useState([\"\", \"\", \"\", \"\"])\r\n\r\n  // ** Hooks\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues\r\n  })\r\n\r\n  const handleInputChange = (e, index) => {\r\n    const newOtp = [...otp]\r\n    newOtp[index] = e.target.value\r\n\r\n    // Move focus to the next input box if there's an entered value\r\n    if (e.target.value !== \"\" && index < 3) {\r\n      const nextInput = document.getElementById(`otpInput${index + 1}`)\r\n      if (nextInput) {\r\n        nextInput.focus()\r\n      }\r\n    }\r\n\r\n    setOtp(newOtp)\r\n  }\r\n\r\n  const handleKeyDown = (e, index) => {\r\n    if (e.key === \"Backspace\" && index > 0 && otp[index] === \"\") {\r\n      const newOtp = [...otp]\r\n      newOtp[index - 1] = \"\"\r\n      setOtp(newOtp)\r\n\r\n      const prevInput = document.getElementById(`otpInput${index - 1}`)\r\n      if (prevInput) {\r\n        prevInput.focus()\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (otp?.every((value) => value !== \"\")) {\r\n      const params = {\r\n        otp: parseInt(otp.join()?.replaceAll(\",\", \"\")),\r\n        register_token: sessionStorage.getItem(\"register_token\")\r\n      }\r\n      setBlock(true)\r\n      useJwt\r\n        .registerOtp(params)\r\n        .then((res) => {\r\n          const data = res.data\r\n          setBlock(false)\r\n          setSuccessInfo(data?.message)\r\n          sessionStorage.removeItem(\"register_token\")\r\n          sessionStorage.setItem(\"register_token_msg\", data?.message)\r\n          toast((x) => (\r\n            <ToastContent\r\n              x={x}\r\n              name={t(\"Successfully\")}\r\n              message={data?.message}\r\n            />\r\n          ))\r\n          stepper.next()\r\n        })\r\n        .catch((err) => {\r\n          setBlock(false)\r\n          let messageError = `${t(\r\n            \"Failed. Please check your email and password and make sure your account is registered correctly. Contact our support team if needed.\"\r\n          )}`\r\n          if (\r\n            [\"email_taken\", \"username_taken\"].includes(\r\n              err.response?.data?.error_reason\r\n            )\r\n          ) {\r\n            messageError = err.response?.data?.message\r\n          }\r\n          setErrorInfo(messageError)\r\n          toast((x) => (\r\n            <ToastErrorContent\r\n              x={x}\r\n              name={t(\"Register Failed\")}\r\n              message={messageError}\r\n            />\r\n          ))\r\n        })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <UILoader blocking={block} loader={<Spinner />}>\r\n      <Fragment>\r\n        <div className=\"content-header mb-2\">\r\n          <h2 className=\"fw-bolder mb-75\">{t(\"Email Verification\")}</h2>\r\n          <span>\r\n            {t(\"Enter the OTP code that we have sent to your email\")}.\r\n          </span>\r\n        </div>\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Row>\r\n            {otp.map((value, index) => (\r\n              <Col md=\"2\" xs=\"3\" className=\"mb-1\">\r\n                <Input\r\n                  key={index}\r\n                  id={`otpInput${index}`}\r\n                  type=\"text\"\r\n                  maxLength=\"1\"\r\n                  value={value}\r\n                  onChange={(e) => handleInputChange(e, index)}\r\n                  onKeyDown={(e) => handleKeyDown(e, index)}\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"50px\",\r\n                    textAlign: \"center\",\r\n                    fontSize: \"25px\",\r\n                    fontWeight: 600\r\n                  }}\r\n                />\r\n              </Col>\r\n            ))}\r\n            <Col md=\"12\" className=\"mb-1\">\r\n              <span\r\n                style={{\r\n                  fontSize: \"smaller\",\r\n                  color: \"#999999\"\r\n                }}\r\n              >\r\n                {t(\r\n                  \"This OTP code has an expiration date. If your code is outdated, then repeat the registration process\"\r\n                )}\r\n                .\r\n              </span>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\"d-flex justify-content-between mt-2\">\r\n            <Button\r\n              color=\"secondary\"\r\n              className=\"btn-prev\"\r\n              outline\r\n              onClick={() => stepper.previous()}\r\n            >\r\n              <ChevronLeft\r\n                size={14}\r\n                className=\"align-middle me-sm-25 me-0\"\r\n              ></ChevronLeft>\r\n              <span className=\"align-middle d-sm-inline-block d-none\">\r\n                {t(\"Previous\")}\r\n              </span>\r\n            </Button>\r\n            {otp?.every((value) => value !== \"\") && (\r\n              <Button type=\"submit\" color=\"success\" className=\"btn-next\">\r\n                <span className=\"align-middle d-sm-inline-block d-none\">\r\n                  {t(\"Submit\")}\r\n                </span>\r\n                <Check size={14} className=\"align-middle ms-sm-25 ms-0\"></Check>\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Form>\r\n      </Fragment>\r\n    </UILoader>\r\n  )\r\n}\r\n\r\nexport default EmailVerification\r\n"],"sourceRoot":""}