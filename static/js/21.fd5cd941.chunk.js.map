{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason"],"mappings":"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","file":"static/js/21.fd5cd941.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Role\" ////\r\nexport const storeName = \"apps_role\" ////\r\nexport const endpointName = \"api/role\" ////\r\n\r\nexport const serverSideGrid = false ////\r\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    data[\"name\"] = getState()[storeName].selectedData.name\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const resetData = createAsyncThunk(\r\n  `${endpointName}/resetData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          state.selectedData = {\r\n            value: action.payload.data[0].id,\r\n            label: `${action.payload.data[0].name}`\r\n          }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      ///RESET\r\n      .addCase(resetData.rejected, (state) => {\r\n        state.data = []\r\n        state.dataSummary = []\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataRole } from \"../../role/store\"\r\n\r\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\r\n//   // console.log(getState().users.status)\r\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\r\n//   // console.log(response.data.data)\r\n//   return response.data.data\r\n// })\r\nexport const getSummaryData = createAsyncThunk(\r\n  \"appUsers/getSummaryData\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\r\n  Object.keys(params).forEach((key) => {\r\n    if (params[key] === null || params[key] === \"\") {\r\n      delete params[key]\r\n    }\r\n  })\r\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\r\n    params\r\n  })\r\n  return {\r\n    params,\r\n    data: response.data.data,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\r\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\r\n  // console.log(response)\r\n  return response.data.data\r\n})\r\n\r\nexport const addUser = createAsyncThunk(\r\n  \"appUsers/addUser\",\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(resetDataRole({}))\r\n      // return response.data\r\n      return user\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"appUsers/updateUser\",\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id\r\n    delete data.id\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.put(\r\n        `/api/user/${id}`,\r\n        data\r\n      )\r\n      dispatch(getUser(id))\r\n      dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.errors)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n  \"appUsers/deleteUser\",\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.delete(\r\n        `/api/user/${id}`\r\n      )\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataEmployee = createAsyncThunk(\r\n  \"appUsers/getDataEmployee\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      totalPages: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const appUsersSlice = createSlice({\r\n  name: \"appUsers\",\r\n  initialState: {\r\n    crudTitle: \"User\",\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n    params: {},\r\n\r\n    // EMPLOYEE\r\n    status_employee: fetchStatus,\r\n    isLoading_employee: false,\r\n    error_employee: \"\" | null,\r\n    data_employee: [],\r\n    total_employee: 1,\r\n    params_employee: {},\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n    selectedUser: null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getData.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.totalPages\r\n      })\r\n      .addCase(getData.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataEmployee.pending, (state) => {\r\n        state.status_employee = \"loading\"\r\n        state.isLoading_employee = true\r\n      })\r\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status_employee = \"succeeded\"\r\n        state.isLoading_employee = false\r\n        state.data_employee = action.payload.data\r\n        state.params_employee = action.payload.params\r\n        state.total_employee = action.payload.totalPages\r\n      })\r\n      .addCase(getDataEmployee.rejected, (state, action) => {\r\n        state.status_employee = \"failed\"\r\n        state.isLoading_employee = false\r\n        state.error_employee = action.error.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(updateUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        if (typeof action.payload === \"object\") {\r\n          state.errorAddEdit = JSON.stringify(action.payload)\r\n        } else {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(addUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(addUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(addUser.rejected, (state, action) => {\r\n        console.log(action)\r\n\r\n        if (action.payload.errors) {\r\n          state.errorAddEdit = Object.values(action.payload.errors)\r\n        } else if (action.payload.error_reason) {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        // console.log(action)\r\n        state.errorDelete = action.payload.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getUser.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n        state.selectedUser = null\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = action.payload\r\n      })\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = null\r\n        state.errorDetail = action.error.message\r\n      })\r\n  }\r\n})\r\n\r\nexport default appUsersSlice.reducer\r\n"],"sourceRoot":""}