{"version":3,"sources":["../node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js","views/apps/menu/modal/index.js","views/apps/menu/Table.js"],"names":["_excluded","getStyleValue","value","parseInt","styles","visibility","position","overflow","height","top","left","transform","isEmpty","obj","undefined","Object","keys","length","outerHeightStyle","TextareaAutosize","React","props","forwardedRef","onChange","maxRows","minRows","style","other","_objectWithoutPropertiesLoose","isControlled","current","inputRef","handleRef","useForkRef","shadowRef","renders","state","setState","getUpdatedState","input","computedStyle","ownerWindow","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","updateState","prevState","newState","syncHeight","resizeObserver","handleResize","debounce","ReactDOM","syncHeightWithFlushSync","containerWindow","addEventListener","ResizeObserver","observe","clear","removeEventListener","disconnect","useEnhancedEffect","_jsxs","children","_jsx","_extends","event","ref","rows","className","readOnly","tabIndex","CustomLabel","htmlFor","size","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","id","useParams","dispatch","useDispatch","store","useSelector","storeName","colors","useContext","ThemeColors","useState","setLoadingText","useForm","control","setError","setValue","getValues","handleSubmit","errors","is_separator","isSeparator","setIsSeparator","iconCategory","setIconCategory","icon","setIcon","canvasPlacement","setCanvasPlacement","canvasOpen","setCanvasOpen","toggleCanvasStart","toggleCanvasBottom","setIconBefore","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","title","onSubmit","data","parent_id","id_app","values","every","field","putData","then","res","meta","requestStatus","toast","success","color","main","iconTheme","primary","getDataById","error","payload","message","danger","key","type","is_app_header","postData","md","xs","for","defaultValue","selectedData","name","render","invalid","val","target","Ripple","outline","onClick","renderIcon","marginTop","defaultChecked","checked","changeSeparator","dataDropdown","filter","el","theme","selectThemeColors","isDisabled","options","map","item","label","classnames","classNamePrefix","routePath","description","direction","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","can","sessionStorage","getItem","e","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","a","countSelectedCopy","deleteSelectedRowData","debounceFn","useCallback","inputValue","getDataList","search","page","handleRowSelected","columns","center","sortable","sortField","selector","row","cell","preventDefault","placement","rowData","detailFromGrid","setDataById","tableColumns","useMemo","isLoading","column","sx","bgcolor","dark","light","animation","useEffect","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","currentTarget"],"mappings":"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","file":"static/js/13.43361cd1.chunk.js","sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflow;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n      onChange,\n      maxRows,\n      minRows = 1,\n      style,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({\n    outerHeightStyle: 0\n  });\n  const getUpdatedState = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0\n      };\n    }\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = inputShallow.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState;\n    // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (renders.current === 20) {\n        console.error(['MUI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n      }\n    }\n    return prevState;\n  };\n  const syncHeight = React.useCallback(() => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n  const syncHeightWithFlushSync = () => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n\n    // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n    ReactDOM.flushSync(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0;\n\n      // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n      if (inputRef.current) {\n        syncHeightWithFlushSync();\n      }\n    });\n    let resizeObserver;\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    containerWindow.addEventListener('resize', handleResize);\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(input);\n    }\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n  const handleChange = event => {\n    renders.current = 0;\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: _extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : undefined\n      }, style)\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        paddingTop: 0,\n        paddingBottom: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport { Check, X } from \"react-feather\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Offcanvas,\r\n  OffcanvasHeader,\r\n  OffcanvasBody,\r\n  InputGroup\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport classnames from \"classnames\"\r\nimport { TextareaAutosize } from \"@mui/material\"\r\nimport { renderIcon } from \"../store/my_menu\"\r\nimport IconsFeather from \"../icons/feather\"\r\nimport IconsMaterial from \"../icons/material\"\r\n\r\nconst CustomLabel = ({ htmlFor }) => {\r\n  return (\r\n    <Label className=\"form-check-label\" htmlFor={htmlFor}>\r\n      <span className=\"switch-icon-left\">\r\n        <Check size={14} />\r\n      </span>\r\n      <span className=\"switch-icon-right\">\r\n        <X size={14} />\r\n      </span>\r\n    </Label>\r\n  )\r\n}\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    getValues,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const [isSeparator, setIsSeparator] = useState(currentData.is_separator)\r\n  const [iconCategory, setIconCategory] = useState(\"feather\")\r\n  const [icon, setIcon] = useState(currentData?.icon)\r\n\r\n  const [canvasPlacement, setCanvasPlacement] = useState(\"start\")\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const toggleCanvasStart = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"start\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBottom = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"bottom\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const setIconBefore = (icon) => {\r\n    setValue(\"icon\", icon)\r\n    setIcon(icon)\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    // if (formState === \"edit\") {\r\n    //   const storeData = { ...sortedObject(store.selectedData) }\r\n    //   delete storeData[\"id\"]\r\n    //   for (let key in storeData) {\r\n    //     if (!(key in data)) delete storeData[key]\r\n    //   }\r\n    //   // console.log(JSON.stringify(sortedObject(storeData)))\r\n    //   // console.log(JSON.stringify(sortedObject(data)))\r\n    //   return (\r\n    //     JSON.stringify(sortedObject(storeData)) !==\r\n    //     JSON.stringify(sortedObject(data))\r\n    //   )\r\n    // } else {\r\n    //   return true\r\n    // }\r\n\r\n    return true\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    // console.log(data)\r\n    data[\"is_separator\"] = isSeparator\r\n    data[\"icon\"] = icon\r\n    // console.log(data)\r\n    if (data.parent_id) {\r\n      if (data.parent_id.value >= 9000) {\r\n        data[\"id_app\"] = data.parent_id.id_app\r\n        data[\"parent_id\"] = null\r\n      } else {\r\n        data[\"parent_id\"] = data.parent_id.value\r\n      }\r\n    }\r\n    // console.log(data)\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null\r\n        }) ||\r\n        data[\"parent_id\"] === null\r\n      ) {\r\n        if (!isSeparator && data[\"routePath\"] === \"\") {\r\n          for (const key in data) {\r\n            if (data[key] !== null && data[key]?.length === 0) {\r\n              setError(key, {\r\n                type: \"manual\"\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n          dispatch(putData(data)).then((res) => {\r\n            // console.log(res)\r\n            if (res.meta.requestStatus === \"fulfilled\") {\r\n              setShow(!show)\r\n              toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.success.main,\r\n                  border: `1px solid ${colors.success.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.success.main\r\n                }\r\n              })\r\n              if (detailPage) {\r\n                dispatch(getDataById(id))\r\n              }\r\n            } else if (res.meta.requestStatus === \"rejected\") {\r\n              toast.error(res.payload.message, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.danger.main,\r\n                  border: `1px solid ${colors.danger.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.danger.main\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    // console.log(data)\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null\r\n      })\r\n    ) {\r\n      if (!isSeparator && data[\"routePath\"] === \"\") {\r\n        for (const key in data) {\r\n          if (data[key] !== null && data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n\r\n        // console.log(currentData, data)\r\n\r\n        if (!currentData.is_app_header) {\r\n          data[\"parent_id\"] = currentData.id\r\n        } else {\r\n          data[\"parent_id\"] = null\r\n        }\r\n\r\n        data[\"id_app\"] = currentData.id_app\r\n        data[\"is_separator\"] = isSeparator\r\n        data[\"icon\"] = icon\r\n        // console.log(data)\r\n\r\n        dispatch(postData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const changeSeparator = (data) => {\r\n    // console.log(data.target.checked)\r\n    setIsSeparator(data.target.checked)\r\n    if (data.target.checked) {\r\n    }\r\n  }\r\n\r\n  // const changeParentId = (data) => {\r\n  //   console.log(data)\r\n\r\n  //   if (data.is_app_header) {\r\n  //     setValue(\"parent_id\", { value: null })\r\n  //   } else {\r\n  //     setValue(\"parent_id\", data)\r\n  //   }\r\n\r\n  //   // if (data?.routePath) {\r\n  //   //   setValue(\"parent_id\", data.id)\r\n  //   //   setValue(\"routePath\", `${data?.routePath}/`)\r\n  //   // }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(store.dataDropdown)\r\n  // }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" && (\r\n              <p className=\"mb-1\">\r\n                {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"title\">\r\n                  {t(\"Title\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.title ?? \"\"}\r\n                  control={control}\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.title\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"title\"\r\n                      invalid={errors.title && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={4} xs={8} className=\"text-center\">\r\n                  <Label className=\"form-label\" for=\"icon\">\r\n                    {t(\"Icon\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <div>\r\n                    {/* <Button.Ripple\r\n                      className=\"btn-icon\"\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={toggleCanvasBottom}\r\n                    >\r\n                      {renderIcon(icon, \"14\")}\r\n                    </Button.Ripple> */}\r\n                  </div>\r\n                  <Controller\r\n                    defaultValue={store.selectedData?.icon ?? \"\"}\r\n                    control={control}\r\n                    id=\"icon\"\r\n                    name=\"icon\"\r\n                    render={({ field }) => (\r\n                      <InputGroup>\r\n                        <Input\r\n                          {...field}\r\n                          className={\r\n                            errors.icon\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control\"\r\n                          }\r\n                          onChange={(event) => {\r\n                            const val = event.target.value\r\n                            field.onChange(val)\r\n                            setIcon(val)\r\n                          }}\r\n                          id=\"icon\"\r\n                          invalid={errors.icon && true}\r\n                        />\r\n                        <Button.Ripple\r\n                          className=\"btn-icon\"\r\n                          outline\r\n                          color=\"secondary\"\r\n                          onClick={toggleCanvasBottom}\r\n                        >\r\n                          {renderIcon(\r\n                            getValues()[\"icon\"] ??\r\n                              icon ??\r\n                              \"material:highlight_alt\",\r\n                            \"fw-bold\",\r\n                            16\r\n                          )}\r\n                        </Button.Ripple>\r\n                      </InputGroup>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              )}\r\n\r\n              <Col className=\" d-grid justify-content-center\" md={2} xs={4}>\r\n                <Label className=\"form-label\" for=\"is_separator\">\r\n                  {t(\"Separator\")}\r\n                </Label>\r\n                <div\r\n                  style={{ marginTop: \"4px\" }}\r\n                  className=\"form-switch form-check-primary mx-auto\"\r\n                >\r\n                  <Input\r\n                    type=\"switch\"\r\n                    defaultChecked={isSeparator}\r\n                    onChange={(data) => {\r\n                      changeSeparator(data)\r\n                    }}\r\n                    id=\"icon-primary\"\r\n                    name=\"icon-primary\"\r\n                  />\r\n                  <CustomLabel htmlFor=\"icon-primary\" />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"parent_id\">\r\n                  {t(\"Parent Menu\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={\r\n                    store.dataDropdown.filter(\r\n                      (el) =>\r\n                        el.value ===\r\n                        (formState === \"edit\"\r\n                          ? currentData?.parent_id\r\n                          : currentData?.id)\r\n                    ) ?? \"\"\r\n                  }\r\n                  control={control}\r\n                  id=\"parent_id\"\r\n                  name=\"parent_id\"\r\n                  render={({ field }) => (\r\n                    <Select\r\n                      {...field}\r\n                      id=\"parent_id\"\r\n                      theme={selectThemeColors}\r\n                      defaultValue={store.dataDropdown.filter(\r\n                        (el) =>\r\n                          el.value ===\r\n                          (formState === \"edit\"\r\n                            ? currentData?.parent_id\r\n                            : currentData?.id)\r\n                      )}\r\n                      // onChange={(data) => {\r\n                      //   changeParentId(data)\r\n                      // }}\r\n                      isDisabled={formState === \"add\"}\r\n                      options={store.dataDropdown\r\n                        .filter((el) => el.value !== store.selectedData?.id)\r\n                        .map((item) => ({\r\n                          ...item,\r\n                          // id_app: item.id_app,\r\n                          label: t(item.title)\r\n                        }))}\r\n                      className={classnames(\"react-select\", {\r\n                        \"is-invalid\": store.selectedData?.parent_id === null\r\n                      })}\r\n                      classNamePrefix=\"select\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={6} xs={12}>\r\n                  <Label className=\"form-label\" for=\"subject\">\r\n                    {t(\"Route Path\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Controller\r\n                    defaultValue={store.selectedData?.routePath ?? \"\"}\r\n                    control={control}\r\n                    id=\"routePath\"\r\n                    name=\"routePath\"\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        className={\r\n                          errors.routePath\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control\"\r\n                        }\r\n                        id=\"routePath\"\r\n                        invalid={errors.routePath && true}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <TextareaAutosize\r\n                      {...field}\r\n                      className=\"form-control\"\r\n                      id=\"description\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n\r\n      <Offcanvas\r\n        direction={canvasPlacement}\r\n        isOpen={canvasOpen}\r\n        toggle={toggleCanvasStart}\r\n      >\r\n        <OffcanvasHeader className=\"mb-1 mt-1 me-1\" toggle={toggleCanvasStart}>\r\n          {t(\"Select\")} {t(\"Icon\")}\r\n          <Button.Ripple\r\n            className=\"ms-2 me-2\"\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"feather\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"feather\")\r\n            }}\r\n          >\r\n            Feather Icon\r\n          </Button.Ripple>\r\n          <Button.Ripple\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"material\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"material\")\r\n            }}\r\n          >\r\n            Material Icon\r\n          </Button.Ripple>\r\n        </OffcanvasHeader>\r\n        <OffcanvasBody\r\n          className={classnames({\r\n            \"my-auto mx-0 flex-grow-0\":\r\n              canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n          })}\r\n        >\r\n          {iconCategory === \"feather\" ? (\r\n            <IconsFeather\r\n              setIcon={setIconBefore}\r\n              setCanvasOpen={setCanvasOpen}\r\n            />\r\n          ) : (\r\n            // <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\r\n            <IconsMaterial\r\n              setIcon={setIconBefore}\r\n              setCanvasOpen={setCanvasOpen}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={toggleCanvasStart}\r\n            className={classnames({\r\n              \"mb-1\": canvasPlacement === \"start\" || canvasPlacement === \"end\",\r\n              \"me-1\": canvasPlacement === \"top\" || canvasPlacement === \"bottom\"\r\n            })}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={toggleCanvasStart}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(null)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    // console.log(\"handlePagination\")\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    // console.log(\"handlePerPage\")\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    // console.log(\"handleSort\")\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    // console.log(column.sortField, sortDirection)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n  /////PAGINATION SERVERSIDE\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      name: t(\"Title\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"title\",\r\n      selector: (row) => row.title,\r\n      cell: (row) => row.title\r\n    },\r\n    {\r\n      name: t(\"Description\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"description\",\r\n      selector: (row) => row.description,\r\n      cell: (row) => row.description\r\n    },\r\n    {\r\n      name: t(\"Route Path\"),\r\n      center: false,\r\n      sortable: true,\r\n      // minWidth: \"400px\",\r\n      sortField: \"routePath\",\r\n      selector: (row) => row.routePath,\r\n      cell: (row) => row.routePath\r\n    },\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <div className=\"column-action text-center\">\r\n          {ability.can(\r\n            \"delete\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                id=\"btn-delete\"\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-danger\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleDelete(row.id)\r\n                }}\r\n              >\r\n                <Trash2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-delete\">\r\n                {t(\"Delete\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n\r\n          {ability.can(\r\n            \"update\",\r\n            sessionStorage.getItem(\"current_page_perm\")\r\n          ) ? (\r\n            <>\r\n              <Button.Ripple\r\n                className=\"btn-icon rounded-circle\"\r\n                color=\"flat-info\"\r\n                id=\"btn-edit\"\r\n                onClick={(e) => {\r\n                  e.preventDefault()\r\n                  handleEdit(row)\r\n                }}\r\n              >\r\n                <Edit2 size={16} />\r\n              </Button.Ripple>\r\n              <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                {t(\"Edit\")}\r\n              </UncontrolledTooltip>\r\n            </>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}