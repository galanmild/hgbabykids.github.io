{"version":3,"sources":["assets/images/portrait/small/avatar-s-7.jpg","views/dashboard/widgets/WidgetLeaveNeedApproval.js"],"names":["params","pagination","clickable","autoplay","delay","disableOnInteraction","WidgetLeaveNeedApproval","t","useTranslation","store","useSelector","state","dynamicStore","dispatch","dynamic_temp_state","useDispatch","colors","useContext","ThemeColors","useState","loadingPostPut","setLoadingPostPut","loadingDelete","setLoadingDelete","loadingText","setLoadingText","storeName","endpointName","useEffect","pageData","data","length","isLoading","getDataList","baseUrl","errorToast","res","errorFieldsMsg","payload","error","errors","errorFields","errorx","toast","message","style","padding","color","danger","main","border","iconTheme","primary","putDataToApi","id","putDataWidget","then","meta","requestStatus","xxx","success","x","xx","setTimeout","getDataListMyActivity","catch","calendarStrings","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","lg","xs","minHeight","className","tag","blocking","loader","pill","map","row","imgClassName","img","Employee_PhotoPath","require","default","imgHeight","imgWidth","Employee_Name","Employee_EmployeeIdNumber","LeaveName","Reason","calendar","StartDate","EndDate","Ripple","size","type","onClick","e","preventDefault","Id_LeaveState"],"mappings":"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","file":"static/js/137.0e1a01d5.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-s-7.ba3f6823.jpg\";","import Avatar from \"@components/avatar\"\r\nimport AvatarGroup from \"@components/avatar-group\"\r\nimport { Calendar, MapPin, Video } from \"react-feather\"\r\nimport {\r\n  Col,\r\n  Card,\r\n  CardTitle,\r\n  CardBody,\r\n  CardText,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Spinner,\r\n  Badge\r\n} from \"reactstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport illustration from \"@src/assets/images/illustration/email.svg\"\r\nimport { Fragment, useEffect, useMemo, useContext, useState } from \"react\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Moment from \"react-moment\"\r\nimport \"moment-timezone\"\r\nimport \"moment/locale/id\"\r\nimport { putDataWidget, getDataList } from \"@src/shared/dynamic_pages/store\"\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\"\r\nimport EventAvailableOutlinedIcon from \"@mui/icons-material/EventAvailableOutlined\"\r\nimport toast from \"react-hot-toast\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { getDataList as getDataListMyActivity } from \"@src/views/my-info/store/my_activities\"\r\nimport InsertInvitationOutlinedIcon from \"@mui/icons-material/InsertInvitationOutlined\"\r\n\r\nimport profileImg from \"@src/assets/images/portrait/small/avatar-s-7.jpg\"\r\n\r\nconst params = {\r\n  // navigation: true\r\n  pagination: {\r\n    clickable: true\r\n  },\r\n  autoplay: {\r\n    delay: 10000,\r\n    disableOnInteraction: false\r\n  }\r\n}\r\n\r\nconst WidgetLeaveNeedApproval = () => {\r\n  const { t } = useTranslation()\r\n  // const store = useSelector((state) => state[storeName])\r\n  const store = useSelector((state) => state.dynamicStore)\r\n  const dynamicTempState = useSelector((state) => state.dynamic_temp_state)\r\n  const dispatch = useDispatch()\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingPostPut, setLoadingPostPut] = useState(false)\r\n  const [loadingDelete, setLoadingDelete] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n\r\n  const storeName = \"Leave_needApproval\"\r\n  const endpointName = \"Leave/await\"\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !store.pageData[storeName] ||\r\n      (store.pageData[storeName]?.data?.length === 0 &&\r\n        !store.pageData[storeName]?.isLoading)\r\n    ) {\r\n      dispatch(\r\n        getDataList({\r\n          storeName: storeName,\r\n          endpointName: endpointName,\r\n          baseUrl: \"hr\"\r\n        })\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const errorToast = (res) => {\r\n    let errorFieldsMsg = \"\"\r\n    if (res?.payload?.error?.errors) {\r\n      const errorFields = res?.payload?.error?.errors\r\n      for (let errorx in res?.payload?.error?.errors) {\r\n        errorFieldsMsg = `${errorFieldsMsg} - ${errorFields[errorx]}\\n`\r\n        // console.log(errorx, errorFields[errorx])\r\n      }\r\n    }\r\n    return toast.error(\r\n      `${res.payload?.error?.message} \\n \\n ${errorFieldsMsg}`,\r\n      {\r\n        style: {\r\n          padding: \"16px\",\r\n          color: colors.danger.main,\r\n          border: `1px solid ${colors.danger.main}`\r\n        },\r\n        iconTheme: {\r\n          primary: colors.danger.main\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  const putDataToApi = (data) => {\r\n    setLoadingText(\"Confirming Leave Request\")\r\n    data[\"storeName\"] = storeName\r\n    data[\"endpointName\"] = `Leave/${data.id}`\r\n    data[\"baseUrl\"] = \"hr\"\r\n    delete data.id\r\n    // data[\"callback_page\"] = window.location.href\r\n    dispatch(putDataWidget(data))\r\n      .then((res) => {\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          dispatch(\r\n            getDataList({\r\n              storeName: storeName,\r\n              endpointName: endpointName,\r\n              baseUrl: \"hr\"\r\n            })\r\n          )\r\n            .then((xxx) => {\r\n              toast.success(`${t(\"Successfully Confirming Leave Request\")}}`, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.success.main,\r\n                  border: `1px solid ${colors.success.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.success.main\r\n                }\r\n              })\r\n            })\r\n            .then((x) => {\r\n              setLoadingPostPut(false)\r\n              setLoadingDelete(false)\r\n            })\r\n            .then((xx) => {\r\n              dispatch(\r\n                getDataList({\r\n                  storeName: \"hr_leave\",\r\n                  endpointName: \"Leave\",\r\n                  baseUrl: \"hr\"\r\n                })\r\n              )\r\n              setTimeout(() => {\r\n                dispatch(getDataListMyActivity({}))\r\n              }, 8000)\r\n            })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          errorToast(res)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.error(error)\r\n        setLoadingPostPut(false)\r\n        errorToast(error)\r\n      })\r\n  }\r\n\r\n  const calendarStrings = {\r\n    lastDay: \"[Yesterday]\",\r\n    sameDay: \"[Today]\",\r\n    nextDay: \"[Tomorrow]\",\r\n    lastWeek: \"[last] dddd\",\r\n    nextWeek: \"dddd\",\r\n    sameElse: \"L\"\r\n  }\r\n\r\n  return store.pageData[storeName]?.isLoading ? (\r\n    <Col lg=\"12\" xs=\"12\">\r\n      <Card style={{ minHeight: \"200px\" }}>\r\n        <CardHeader>\r\n          <div className=\"d-flex align-items-center\">\r\n            <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n            <CardTitle tag=\"h4\">{t(\"Leave Need Approval\")}</CardTitle>\r\n          </div>\r\n        </CardHeader>\r\n        <UILoader blocking={true} loader={<Loader />}>\r\n          <CardBody></CardBody>\r\n        </UILoader>\r\n      </Card>\r\n    </Col>\r\n  ) : store.pageData[storeName]?.data?.length > 0 ? (\r\n    <Col lg=\"12\" xs=\"12\">\r\n      <Card>\r\n        <CardHeader>\r\n          <div className=\"d-flex align-items-center\">\r\n            <InsertInvitationOutlinedIcon className=\"user-timeline-title-icon me-1\" />\r\n            <CardTitle tag=\"h4\">{t(\"Leave Need Approval\")}</CardTitle>\r\n            {store.pageData[storeName]?.data?.length > 1 && (\r\n              <Badge className=\"ms-1\" tag=\"div\" color=\"danger\" pill>\r\n                {store.pageData[storeName]?.data?.length}\r\n              </Badge>\r\n            )}\r\n          </div>\r\n        </CardHeader>\r\n\r\n        <CardBody className=\"px-0 pb-0\">\r\n          <Swiper {...params}>\r\n            {store.pageData[storeName]?.data.map((row) => {\r\n              return (\r\n                <SwiperSlide key={`swiper_${row.id}`}>\r\n                  <Card className=\"card-apply-job mb-0\">\r\n                    <CardBody>\r\n                      <div className=\"d-flex justify-content-between align-items-center mb-1\">\r\n                        <div className=\"d-flex align-items-center\">\r\n                          <Avatar\r\n                            imgClassName=\"rounded\"\r\n                            className=\"me-75\"\r\n                            img={\r\n                              row?.Employee_PhotoPath ??\r\n                              require(\"@src/assets/images/avatars/avatar-blank.png\")\r\n                                .default\r\n                            }\r\n                            imgHeight=\"42\"\r\n                            imgWidth=\"42\"\r\n                          />\r\n                          <div className=\"my-auto\">\r\n                            <h6 className=\"mb-0\">{`${row?.Employee_Name}`}</h6>\r\n                            <small className=\"text-muted\">\r\n                              {row?.Employee_EmployeeIdNumber}\r\n                            </small>\r\n                          </div>\r\n                        </div>\r\n                        <Badge color=\"light-primary\" pill>\r\n                          {row?.LeaveName}\r\n                        </Badge>\r\n                      </div>\r\n                      <h5 className=\"apply-job-title\">\r\n                        {t(\r\n                          \"New request for leave from staff that needs to be confirmed.\"\r\n                        )}\r\n                      </h5>\r\n                      <CardText className=\"mb-2\">\r\n                        {t(\"Reason\")} : {row?.Reason}.\r\n                      </CardText>\r\n                      <div className=\"apply-job-package bg-light-primary rounded\">\r\n                        <div>\r\n                          <sup className=\"text-body\">\r\n                            <small>{t(\"period\")} </small>\r\n                          </sup>\r\n                          <h2 className=\"d-inline me-25\">\r\n                            {\r\n                              <Moment calendar={calendarStrings}>\r\n                                {row?.StartDate}\r\n                              </Moment>\r\n                            }{\" \"}\r\n                            <sub className=\"text-body\">\r\n                              <small> {t(\"until\")}</small>\r\n                            </sub>{\" \"}\r\n                            {\r\n                              <Moment calendar={calendarStrings}>\r\n                                {row?.EndDate}\r\n                              </Moment>\r\n                            }\r\n                          </h2>\r\n                          {/* <sub className=\"text-body\">\r\n                              <small>/ month</small>\r\n                            </sub> */}\r\n                        </div>\r\n                        {/* <Badge color=\"light-primary\" pill>\r\n                            Full Time\r\n                          </Badge> */}\r\n                      </div>\r\n                      <div className=\"text-end\">\r\n                        {!loadingPostPut &&\r\n                          (!loadingDelete ? (\r\n                            <Button.Ripple\r\n                              color=\"flat-danger me-1\"\r\n                              onClick={(e) => {\r\n                                e.preventDefault()\r\n                                setLoadingDelete(true)\r\n                                putDataToApi({\r\n                                  id: row?.id,\r\n                                  Id_LeaveState: \"3\"\r\n                                })\r\n                              }}\r\n                            >\r\n                              {t(\"Decline\")}\r\n                            </Button.Ripple>\r\n                          ) : (\r\n                            <Button.Ripple color=\"flat-danger me-1\">\r\n                              <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\r\n                              <span className=\"ms-50\">{loadingText}</span>\r\n                            </Button.Ripple>\r\n                          ))}\r\n\r\n                        {!loadingDelete &&\r\n                          (!loadingPostPut ? (\r\n                            <Button.Ripple\r\n                              onClick={(e) => {\r\n                                e.preventDefault()\r\n                                setLoadingPostPut(true)\r\n                                putDataToApi({\r\n                                  id: row?.id,\r\n                                  Id_LeaveState: \"2\"\r\n                                })\r\n                              }}\r\n                              color=\"gradient-primary\"\r\n                            >\r\n                              {t(\"Confirm\")}\r\n                            </Button.Ripple>\r\n                          ) : (\r\n                            <Button.Ripple color=\"gradient-primary\">\r\n                              <Spinner color=\"white\" size=\"sm\" type=\"grow\" />\r\n                              <span className=\"ms-50\">{loadingText}</span>\r\n                            </Button.Ripple>\r\n                          ))}\r\n                      </div>\r\n                    </CardBody>\r\n                  </Card>\r\n                </SwiperSlide>\r\n              )\r\n            })}\r\n          </Swiper>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  ) : null\r\n}\r\n\r\nexport default WidgetLeaveNeedApproval\r\n"],"sourceRoot":""}