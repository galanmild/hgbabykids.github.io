{"version":3,"sources":["views/apps/endpoint/store/index.js","views/apps/endpoint/modal/index.js","views/apps/endpoint/Tree.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","isTreeLayout","dynamicColumns","columnName","fieldName","minWidth","dynamicColumnsFilter","filterLabel","dynamicForm","fieldLabel","type","required","datafromStore","extraCrud","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","setDataList","rowData","rejectWithValue","getDataById","id","resetSelectedData","a","postData","user","dispatch","getState","post","resetData","putData","selectedData","notReload","put","deleteData","delete","deleteSelectedRowData","setDataById","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","map","item","value","label","title","ModalAddEdit","show","setShow","formState","setFormState","currentData","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","allStore","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","Loader","errors","className","handleReset","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","i","path_name","replaceAll","MyComponent","lazy","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","x","lookupMode_isM2MDefValFromGrid","defaultValue","onChange","e","target","length","isOpen","toggle","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","fallback","textAlign","outline","onClick","MySwal","withReactContent","Swal","List","searchString","sidebarOpen","setSidebarOpen","ability","AbilityContext","setLoading","showModal","setShowModal","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","handleDelete","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","updateDataToApi","nameMsg","removeDefaultValue","dataTree","mainArray","parse","iter","Array","isArray","children","height","margin","treeData","onMoveNode","node","nextParentNode","prevPath","prevTreeIndex","nextPath","nextTreeIndex","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontSize","fontWeight","paddingLeft","buttons","can","sessionStorage","getItem","Ripple","size","placement","preventDefault","hidden","disabled","defaultChecked","checked","handleChangeLookupMode"],"mappings":"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","file":"static/js/121.a7800fd3.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Endpoint\" ////\r\nexport const storeName = \"apps_endpoint\" ////\r\nexport const endpointName = \"api/endpoint\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\nexport const disabledAction = []\r\nexport const isManyToManyGrid = true\r\nexport const storeToRefreshAfterAll = []\r\nexport const isTreeLayout = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  {\r\n    columnName: \"Url\",\r\n    fieldName: \"url_path\",\r\n    minWidth: \"350px\"\r\n  }\r\n  // {\r\n  //   columnName: \"App\",\r\n  //   fieldName: \"app_name\",\r\n  //   minWidth: \"120px\"\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"App\",\r\n    fieldName: \"id_app\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = [\r\n  {\r\n    fieldName: \"url_path\",\r\n    fieldLabel: \"Url\",\r\n    type: \"text\",\r\n    required: true\r\n  },\r\n  {\r\n    fieldName: \"id_app\",\r\n    fieldLabel: \"App\",\r\n    type: \"dropdown\",\r\n    required: true,\r\n    datafromStore: \"app\"\r\n  }\r\n]\r\n\r\nexport const extraCrud = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    // console.log(params)\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataList = createAsyncThunk(\r\n  `${endpointName}/setDataList`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    // Object.keys(data).forEach((key) => {\r\n    //   if (data[key] === null || data[key] === \"\") {\r\n    //     delete data[key]\r\n    //   }\r\n    // })\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    const notReload = data[\"notReload\"]\r\n    if (notReload) delete data[\"notReload\"]\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut && !notReload) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    dynamicColumns,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n        state.dataDropdown = action.payload.data.map((item) => ({\r\n          value: item.id,\r\n          label: item.title\r\n        }))\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataList.rejected, (state, action) => {\r\n        state.data = action.payload\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable brace-style */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    // formDatasError[fieldName] = false\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n    //   return el.type === \"dropdown\" || el.type === \"table\"\r\n    // })\r\n\r\n    const dynamicFormRelation = dynamicForm\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n\r\n      ////////////INPUT - DROPDOWN\r\n      if (\r\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\r\n        dynamicFormRelation[i][\"type\"] === \"table\"\r\n      ) {\r\n        const MyComponent = lazy(() => import(`../../${path_name}`))\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <MyComponent\r\n              key={`dynInput_${fieldName}`}\r\n              lookupMode={true}\r\n              lookupMode_fieldName={fieldName}\r\n              lookupMode_dropdown={\r\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\r\n              }\r\n              lookupMode_isMulti={\r\n                dynamicFormRelation[i].isMultiSelection ?? false\r\n              }\r\n              lookupMode_onChange={handleChangeInputs}\r\n              lookupMode_defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              lookupMode_isM2MDefValFromGrid={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n              }\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      ////////////INPUT - TEXT\r\n      else {\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <Input\r\n              key={`dynInput_${fieldName}`}\r\n              defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              onChange={(e) =>\r\n                handleChangeInputs(\r\n                  e.target.value,\r\n                  fieldName,\r\n                  dynamicFormRelation[i].isMultiSelection ?? false\r\n                )\r\n              }\r\n              // className={\r\n              //   !formDatasError[fieldName]\r\n              //     ? \"form-control is-invalid\"\r\n              //     : \"form-control\"\r\n              // }\r\n              id={`dynInput_${fieldName}`}\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            <p className=\"mb-1\">\r\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n            </p>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  if (item.type === \"table\") {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"dynamicForm_input\"\r\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"\"\r\n                                : \"dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <div\r\n                        className={\r\n                          !formDatasError[item.fieldName]\r\n                            ? \"\"\r\n                            : \"dynamicForm_input_invalid\"\r\n                        }\r\n                      >\r\n                        {dynamicComponents[`${path_name}_comp`]}\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  Component\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  putData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square,\r\n  Plus\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst List = ({\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row.id)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    dispatch(setDataList(tree))\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    let mainArray = JSON.parse(JSON.stringify(store.data))\r\n    mainArray.forEach(function iter(a) {\r\n      if (a.id === id) {\r\n        a.checked = e.target.checked\r\n      }\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    handleChange(mainArray)\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(nextParentNode)\r\n    const data = {\r\n      id: node.id,\r\n      title: node.title,\r\n      parent_id: nextParentNode.is_app_header ? null : nextParentNode.id\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.title\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    return (\r\n      searchQuery &&\r\n      node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    mainArray.forEach(function iter(a) {\r\n      if (data.includes(a.id)) {\r\n        a[\"checked\"] = true\r\n        a[\"hidden\"] = true\r\n      }\r\n      // console.log(a.id, !data.includes(a.id))\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    // console.log(data)\r\n    // console.log(mainArray)\r\n    dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({})).then((x) => {\r\n        // console.log(lookupMode_isM2MDefValFromGrid)\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    // console.log(lookupMode_isM2MDefValFromGrid)\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: !lookupMode ? 800 : 350,\r\n                margin: !lookupMode ? 20 : 10\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.data}\r\n                onChange={handleChange}\r\n                onMoveNode={!lookupMode ? onMoveNode : null}\r\n                canDrag={!lookupMode ? eventCanDragNode : false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={4}\r\n                generateNodeProps={({ node, path }) => ({\r\n                  style: {\r\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                  },\r\n                  title: node.icon ? (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          paddingLeft: node.is_app_header ? 0 : 10,\r\n                          fontWeight: node.is_app_header ? `bold` : 400\r\n                        }}\r\n                      >\r\n                        {node.title}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <div\r\n                      style={{ fontWeight: node.is_app_header ? `bold` : 400 }}\r\n                    >\r\n                      {node.title}\r\n                    </div>\r\n                  ),\r\n                  buttons: [\r\n                    ability.can(\r\n                      \"post\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) && !lookupMode ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-primary\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            toggleSidebar(node)\r\n                          }}\r\n                        >\r\n                          <Plus size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Add Child\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"update\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-info\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(node)\r\n                          }}\r\n                        >\r\n                          <Edit2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Edit\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"delete\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          id=\"btn-delete\"\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-danger\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(node.id)\r\n                          }}\r\n                        >\r\n                          <Trash2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-delete\"\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    lookupMode && !node.is_app_header ? (\r\n                      <div\r\n                        className={\r\n                          node.hidden\r\n                            ? \"form-check form-check-secondary\"\r\n                            : \"form-check form-check-primary\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          disabled={node.hidden}\r\n                          defaultChecked={node.checked}\r\n                          onChange={(e) =>\r\n                            handleChangeLookupMode(\r\n                              e,\r\n                              node.id,\r\n                              lookupMode_fieldName,\r\n                              lookupMode_isMulti\r\n                            )\r\n                          }\r\n                          type=\"checkbox\"\r\n                          id={`checkbox-${node.id}`}\r\n                        />\r\n                      </div>\r\n                    ) : null\r\n                  ]\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}