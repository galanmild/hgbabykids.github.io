{"version":3,"sources":["views/apps/role/store/index.js","views/apps/user/store/index.js","views/apps/user/modal/index.js","views/apps/roles-permissions/store/role.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","getSummaryData","createAsyncThunk","params","a","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","postData","user","dispatch","getState","post","resetDataActivity","putData","selectedData","name","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","resetData","StoreSlice","createSlice","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","getData","totalPages","getUser","addUser","users","resetDataRole","updateUser","errors","deleteUser","getDataEmployee","hrAxiosInterceptor","appUsersSlice","crudTitle","status_employee","isLoading_employee","error_employee","data_employee","total_employee","params_employee","selectedUser","JSON","stringify","console","log","values","error_reason","withReactContent","Swal","ModalAddEdit","show","setShow","useState","unitOptionsSelected","setUnitOptionsSelected","idRole","setIdRole","employeeOptionsSelected","setEmployeeOptionsSelected","setFormEdited","t","useTranslation","useParams","useDispatch","store","useSelector","storeUnit","units","storeRole","roles","colors","useContext","ThemeColors","setSelectedUser","useForm","defaultValues","username","phone","reset","control","setError","handleSubmit","formState","Loader","className","useEffect","getUnits","id_employee","filter","el","FirstName","LastName","id_role","isOpen","toggle","blocking","loader","onSubmit","unitOptionsSelect","member_of","formEdited","countChanges","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","type","icon","md","xs","for","defaultValue","render","placeholder","invalid","disabled","email","theme","selectThemeColors","onChange","options","classnames","classNamePrefix","isClearable","e","Array","isArray","x","closeMenuOnSelect","isMulti","outline","onClick","addRole","role","updateRole","deleteRole","rolesSlice","selected","selectRole","actions"],"mappings":"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","file":"static/js/1.43016a39.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataActivity } from \"../../../my-info/store/my_activities\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Role\" ////\r\nexport const storeName = \"apps_role\" ////\r\nexport const endpointName = \"api/role\" ////\r\n\r\nexport const serverSideGrid = false ////\r\nexport const detailFromGrid = false //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    data[\"name\"] = getState()[storeName].selectedData.name\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetDataActivity({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const resetData = createAsyncThunk(\r\n  `${endpointName}/resetData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          state.selectedData = {\r\n            value: action.payload.data[0].id,\r\n            label: `${action.payload.data[0].name}`\r\n          }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      ///RESET\r\n      .addCase(resetData.rejected, (state) => {\r\n        state.data = []\r\n        state.dataSummary = []\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { resetData as resetDataRole } from \"../../role/store\"\r\n\r\n// export const getAllData = createAsyncThunk(\"appUsers/getAllData\", async () => {\r\n//   // console.log(getState().users.status)\r\n//   const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\")\r\n//   // console.log(response.data.data)\r\n//   return response.data.data\r\n// })\r\nexport const getSummaryData = createAsyncThunk(\r\n  \"appUsers/getSummaryData\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user/summary\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getData = createAsyncThunk(\"appUsers/getData\", async (params) => {\r\n  Object.keys(params).forEach((key) => {\r\n    if (params[key] === null || params[key] === \"\") {\r\n      delete params[key]\r\n    }\r\n  })\r\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/user\", {\r\n    params\r\n  })\r\n  return {\r\n    params,\r\n    data: response.data.data,\r\n    totalPages: response.data.total\r\n  }\r\n})\r\n\r\nexport const getUser = createAsyncThunk(\"appUsers/getUser\", async (id) => {\r\n  const response = await useJwt.ssoAxiosInterceptor.get(`/api/user/${id}`)\r\n  // console.log(response)\r\n  return response.data.data\r\n})\r\n\r\nexport const addUser = createAsyncThunk(\r\n  \"appUsers/addUser\",\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.post(\"/api/user\", user)\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(resetDataRole({}))\r\n      // return response.data\r\n      return user\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"appUsers/updateUser\",\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = data.id\r\n    delete data.id\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.put(\r\n        `/api/user/${id}`,\r\n        data\r\n      )\r\n      dispatch(getUser(id))\r\n      dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data.errors)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n  \"appUsers/deleteUser\",\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await useJwt.ssoAxiosInterceptor.delete(\r\n        `/api/user/${id}`\r\n      )\r\n      await dispatch(getData(getState().users.params))\r\n      dispatch(getSummaryData({}))\r\n      dispatch(resetDataRole({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataEmployee = createAsyncThunk(\r\n  \"appUsers/getDataEmployee\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.hrAxiosInterceptor.get(\"/Employee\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      totalPages: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const appUsersSlice = createSlice({\r\n  name: \"appUsers\",\r\n  initialState: {\r\n    crudTitle: \"User\",\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n    params: {},\r\n\r\n    // EMPLOYEE\r\n    status_employee: fetchStatus,\r\n    isLoading_employee: false,\r\n    error_employee: \"\" | null,\r\n    data_employee: [],\r\n    total_employee: 1,\r\n    params_employee: {},\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n    selectedUser: null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getData.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.totalPages\r\n      })\r\n      .addCase(getData.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataEmployee.pending, (state) => {\r\n        state.status_employee = \"loading\"\r\n        state.isLoading_employee = true\r\n      })\r\n      .addCase(getDataEmployee.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status_employee = \"succeeded\"\r\n        state.isLoading_employee = false\r\n        state.data_employee = action.payload.data\r\n        state.params_employee = action.payload.params\r\n        state.total_employee = action.payload.totalPages\r\n      })\r\n      .addCase(getDataEmployee.rejected, (state, action) => {\r\n        state.status_employee = \"failed\"\r\n        state.isLoading_employee = false\r\n        state.error_employee = action.error.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(updateUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        if (typeof action.payload === \"object\") {\r\n          state.errorAddEdit = JSON.stringify(action.payload)\r\n        } else {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(addUser.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(addUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(addUser.rejected, (state, action) => {\r\n        console.log(action)\r\n\r\n        if (action.payload.errors) {\r\n          state.errorAddEdit = Object.values(action.payload.errors)\r\n        } else if (action.payload.error_reason) {\r\n          state.errorAddEdit = action.payload.message\r\n        }\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        // console.log(action)\r\n        state.errorDelete = action.payload.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getUser.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n        state.selectedUser = null\r\n      })\r\n      .addCase(getUser.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = action.payload\r\n      })\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedUser = null\r\n        state.errorDetail = action.error.message\r\n      })\r\n  }\r\n})\r\n\r\nexport default appUsersSlice.reducer\r\n","import { useState, Fragment, useContext, useEffect } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  CardBody,\r\n  Button,\r\n  Badge,\r\n  Modal,\r\n  Input,\r\n  Label,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport Moment from \"moment\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\n\r\nimport Swal from \"sweetalert2\"\r\nimport Select from \"react-select\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { updateUser, getUser, getDataEmployee } from \"../store\"\r\nimport { getUnits } from \"../../unit/store\"\r\nimport { getData } from \"../../roles-permissions/store/role\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst ModalAddEdit = ({ show, setShow, detailPage }) => {\r\n  const [unitOptions, setUnitOptions] = useState([])\r\n  const [unitOptionsSelected, setUnitOptionsSelected] = useState([])\r\n  const [idRole, setIdRole] = useState(null)\r\n  const [employeeOptionsSelected, setEmployeeOptionsSelected] = useState([])\r\n  const [formEdited, setFormEdited] = useState(false)\r\n  const { t } = useTranslation()\r\n  // const [id, setId] = useState(null)\r\n  let { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state.users)\r\n  const storeUnit = useSelector((state) => state.units)\r\n  const storeRole = useSelector((state) => state.roles)\r\n  const { colors } = useContext(ThemeColors)\r\n  const [selectedUser, setSelectedUser] = useState(store.selectedUser)\r\n  const {\r\n    reset,\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({\r\n    defaultValues: {\r\n      username: selectedUser?.username,\r\n      name: selectedUser?.name,\r\n      phone: selectedUser?.phone ?? \"\"\r\n    }\r\n  })\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1 text-white\">\r\n          {t(\"Please Wait\")}...\r\n        </CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const handleChangeUnit = (e) => {\r\n    // console.log(e)\r\n    setUnitOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\r\n    // console.log(unitOptionsSelected)\r\n  }\r\n\r\n  const handleChangeEmployee = (e) => {\r\n    // console.log(e)\r\n    setEmployeeOptionsSelected(Array.isArray(e) ? e.map((x) => x.value) : [])\r\n    // console.log(unitOptionsSelected)\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    // console.log(data)\r\n\r\n    const unitOptionsSelect =\r\n      selectedUser.member_of !== null\r\n        ? selectedUser?.member_of.map((item) => ({\r\n            value: item.id,\r\n            label: item.name\r\n          }))\r\n        : []\r\n\r\n    // console.log(unitOptionsSelect)\r\n    // console.log(unitOptionsSelected)\r\n    const formEdited =\r\n      selectedUser.name !== data.name ||\r\n      selectedUser.username !== data.username ||\r\n      (selectedUser.phone ?? \"\") !== data.phone ||\r\n      JSON.stringify(unitOptionsSelect) !==\r\n        JSON.stringify(unitOptionsSelected) ||\r\n      idRole !== selectedUser.id_role\r\n    setFormEdited(true)\r\n    return formEdited\r\n  }\r\n\r\n  const onSubmit = (data) => {\r\n    if (countChanges(data)) {\r\n      // console.log(countChanges(data))\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field.length > 0 || field === \"\"\r\n        })\r\n      ) {\r\n        if (data.phone === \"\") {\r\n          delete data.phone\r\n        }\r\n\r\n        data[\"id\"] = id ?? selectedUser.id\r\n        data[\"id_role\"] = idRole\r\n        data[\"id_employee\"] = employeeOptionsSelected?.id\r\n        data[\"member_of\"] = unitOptionsSelected\r\n        dispatch(updateUser(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated Data\")}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getUser(id))\r\n            }\r\n\r\n            // setUnitOptionsSelected(\r\n            //   selectedUser.member_of.map((item) => ({\r\n            //     value: item.id,\r\n            //     label: item.name\r\n            //   }))\r\n            // )\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(JSON.stringify(res.payload), {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    reset({\r\n      username: selectedUser?.username,\r\n      name: selectedUser?.name\r\n    })\r\n  }\r\n\r\n  // ** Get data on mount\r\n  useEffect(() => {\r\n    // const { id } = useParams()\r\n    // console.log(this.props.match.params.id)\r\n    // if (!id) {\r\n    //   id = idRow\r\n    // }\r\n    setSelectedUser(store.selectedUser)\r\n    if (storeUnit.data.length === 0 && !storeUnit.isLoading) {\r\n      dispatch(getUnits())\r\n      setSelectedUser(store.selectedUser)\r\n    }\r\n\r\n    if (storeRole?.data.length === 0 && !storeRole.isLoading) {\r\n      dispatch(getData())\r\n    }\r\n\r\n    if (store?.data_employee.length === 0 && !store.isLoading_employee) {\r\n      dispatch(\r\n        getDataEmployee({\r\n          length: 200\r\n        })\r\n      )\r\n      if (store.data_employee && selectedUser?.id_employee) {\r\n        setEmployeeOptionsSelected(\r\n          store.data_employee\r\n            .filter((el) => el.id === selectedUser?.id_employee)\r\n            .map((item) => ({\r\n              value: item.id,\r\n              label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n            }))\r\n        )\r\n      }\r\n    }\r\n\r\n    // console.log(storeUnit.data)\r\n    // console.log(unitOptions)\r\n    // console.log(unitOptionsSelected)\r\n\r\n    setIdRole(selectedUser?.id_role)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => setShow(!show)}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={\r\n          (store.isLoadingAddEdit || store.isLoadingDetail) &&\r\n          !store.selectedUser\r\n        }\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => setShow(!show)}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h1 className=\"mb-1\">\r\n              {t(\"Edit\")} {t(\"User Information\")}\r\n            </h1>\r\n            <p>{t(\"Updating user details will receive a privacy audit.\")}</p>\r\n          </div>\r\n          <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Full Name\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"name\"\r\n                      placeholder=\"John\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"username\">\r\n                  {t(\"Username\")}:\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      id=\"username\"\r\n                      placeholder=\"john.doe.007\"\r\n                      invalid={errors.username && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"email\">\r\n                  {t(\"Email\")}:\r\n                </Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  id=\"email\"\r\n                  disabled\r\n                  defaultValue={selectedUser?.email}\r\n                  placeholder=\"example@domain.com\"\r\n                />\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"phone\">\r\n                  {t(\"Contact\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue=\"\"\r\n                  control={control}\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      value={selectedUser?.phone || \"\"}\r\n                      id=\"phone\"\r\n                      placeholder=\"+62 813 940 10XX X\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_role\">\r\n                  {t(\"Role\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_role\"\r\n                  theme={selectThemeColors}\r\n                  defaultValue={storeRole.data\r\n                    .filter((el) => el.id === selectedUser?.id_role)\r\n                    .map((item) => ({\r\n                      value: item.id,\r\n                      label: item.name\r\n                    }))}\r\n                  onChange={(data) => {\r\n                    setIdRole(data.value)\r\n                  }}\r\n                  options={storeRole.data.map((item) => ({\r\n                    value: item.id,\r\n                    label: item.name\r\n                  }))}\r\n                  className={classnames(\"react-select\", {\r\n                    \"is-invalid\": idRole === null\r\n                  })}\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_employee\">\r\n                  {t(\"Employee\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"id_employee\"\r\n                  isClearable={true}\r\n                  isLoading={store.isLoading_employee}\r\n                  theme={selectThemeColors}\r\n                  defaultValue={\r\n                    store.data_employee\r\n                      .filter((el) => el.id === selectedUser?.id_employee)\r\n                      .map((item) => ({\r\n                        value: item.id,\r\n                        label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n                      })) ?? \"\"\r\n                  }\r\n                  onChange={(data) => {\r\n                    handleChangeEmployee(data)\r\n                  }}\r\n                  options={store.data_employee.map((item) => ({\r\n                    value: item.id,\r\n                    label: `${item.FirstName} ${item?.LastName ?? \"\"}`\r\n                  }))}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"member_of\">\r\n                  {t(\"Unit\")}\r\n                </Label>\r\n                <Select\r\n                  id=\"member_of\"\r\n                  isClearable={false}\r\n                  theme={selectThemeColors}\r\n                  closeMenuOnSelect={false}\r\n                  defaultValue={\r\n                    store.selectedUser?.member_of\r\n                      ? store.selectedUser?.member_of.map((item) => ({\r\n                          value: item.id,\r\n                          label: item.name\r\n                        }))\r\n                      : []\r\n                  }\r\n                  onChange={(data) => {\r\n                    handleChangeUnit(data)\r\n                  }}\r\n                  isMulti\r\n                  options={storeUnit.data\r\n                    .map((item) => ({\r\n                      value: item.id,\r\n                      label: item.name\r\n                    }))\r\n                    .filter((x) => x.value !== \"\")}\r\n                  className=\"react-select\"\r\n                  classNamePrefix=\"select\"\r\n                />\r\n              </Col>\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","// ** Redux Imports\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\nexport const getData = createAsyncThunk(\"role/getData\", async (params) => {\r\n  const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role\", {\r\n    params\r\n  })\r\n  return {\r\n    data: response.data.data\r\n  }\r\n})\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  \"role/getSummaryData\",\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await useJwt.ssoAxiosInterceptor.get(\"/api/role/summary\", {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const addRole = createAsyncThunk(\r\n  \"roles/addRole\",\r\n  async (role, { dispatch, getState }) => {\r\n    await useJwt.ssoAxiosInterceptor.post(\"/api/role\", { role })\r\n    await dispatch(getData(getState().roles.params))\r\n    return role\r\n  }\r\n)\r\n\r\nexport const updateRole = createAsyncThunk(\r\n  \"roles/updateRole\",\r\n  async ({ id, name }, { dispatch, getState }) => {\r\n    await useJwt.ssoAxiosInterceptor.post(\"/apps/roles/update-role\", {\r\n      id,\r\n      name\r\n    })\r\n    await dispatch(getData(getState().roles.params))\r\n    return { id, name }\r\n  }\r\n)\r\n\r\nexport const deleteRole = createAsyncThunk(\r\n  \"roles/deleteRole\",\r\n  async (id, { dispatch, getState }) => {\r\n    await useJwt.ssoAxiosInterceptor.delete(\"/apps/roles/delete\", { id })\r\n    await dispatch(getData(getState().roles.params))\r\n    return id\r\n  }\r\n)\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\nexport const rolesSlice = createSlice({\r\n  name: \"roles\",\r\n  initialState: {\r\n    crudTitle: \"Roles\",\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n\r\n    selected: null\r\n  },\r\n  reducers: {\r\n    selectRole: (state, action) => {\r\n      if (action.payload === null) {\r\n        state.selected = null\r\n      } else {\r\n        state.selected = action.payload\r\n      }\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///ALL\r\n      .addCase(getData.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getData.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        state.data = action.payload.data\r\n      })\r\n      .addCase(getData.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.message\r\n      })\r\n\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n  }\r\n})\r\n\r\nexport const { selectRole } = rolesSlice.actions\r\n\r\nexport default rolesSlice.reducer\r\n"],"sourceRoot":""}