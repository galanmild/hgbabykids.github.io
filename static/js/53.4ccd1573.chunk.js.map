{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/permission/store/index.js","views/apps/permission/modal/index.js","views/apps/permission/Form.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","keys","forEach","key","get","response","data","getDataList","total","getDataById","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","label","title","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","setLoadingText","sortedObject","unordered","sort","reduce","obj","handleReset","isOpen","toggle","className","blocking","loader","updateDataToApi","storeData","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","setError","type","icon","postDataToApi","FormAddEdit","useForm","control","handleSubmit","errors","onSubmit","md","xs","for","defaultValue","render","invalid","description","subject","outline","onClick"],"mappings":"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","file":"static/js/53.4ccd1573.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Permission\" ////\r\nexport const storeName = \"apps_permission\" ////\r\nexport const endpointName = \"api/permission\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = []\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"Role\",\r\n    fieldName: \"id_role\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const extraCrud = [\r\n  {\r\n    crudName: \"permission_menu\",\r\n    crudLabel: \"Permission to Menu\"\r\n  },\r\n  {\r\n    crudName: \"permission_endpoint\",\r\n    crudLabel: \"Permission to Endpoint\"\r\n    // crudDescription: \"Permission to Endpoint\"\r\n  }\r\n]\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.title,\r\n            post: false,\r\n            put: false,\r\n            delete: false,\r\n            get: false\r\n          }))\r\n          // state.selectedData = {\r\n          //   value: action.payload.data[0].id,\r\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\r\n          // }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport FormAddEdit from \"../Form\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  // const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  // const {\r\n  //   control,\r\n  //   setError,\r\n  //   handleSubmit,\r\n  //   formState: { errors }\r\n  // } = useForm({})\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    dispatch(resetSelectedData())\r\n    setFormState(\"add\")\r\n    return setShow(false)\r\n  }\r\n\r\n  return !detailPage ? (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <FormAddEdit\r\n            formState={formState}\r\n            updateDataToApi={updateDataToApi}\r\n            postDataToApi={postDataToApi}\r\n            handleReset={handleReset}\r\n          />\r\n          {/* <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"title\">\r\n                  {t(\"Title\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.title ?? \"\"}\r\n                  control={control}\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.title\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"title\"\r\n                      invalid={errors.title && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.description\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"description\"\r\n                      invalid={errors.description && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"subject\">\r\n                  {t(\"Subject\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.subject ?? \"\"}\r\n                  control={control}\r\n                  id=\"subject\"\r\n                  name=\"subject\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.subject\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"subject\"\r\n                      invalid={errors.subject && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form> */}\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  ) : null\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"./store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst FormAddEdit = ({\r\n  formState,\r\n  updateDataToApi,\r\n  postDataToApi,\r\n  handleReset\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={\r\n        formState === \"edit\"\r\n          ? handleSubmit(updateDataToApi)\r\n          : handleSubmit(postDataToApi)\r\n      }\r\n    >\r\n      <Row className=\"gy-1 pt-75\">\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"title\">\r\n            {t(\"Title\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.title ?? \"\"}\r\n            control={control}\r\n            id=\"title\"\r\n            name=\"title\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.title ? \"form-control is-invalid\" : \"form-control\"\r\n                }\r\n                id=\"title\"\r\n                invalid={errors.title && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"description\">\r\n            {t(\"Description\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.description ?? \"\"}\r\n            control={control}\r\n            id=\"description\"\r\n            name=\"description\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.description\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"description\"\r\n                invalid={errors.description && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"subject\">\r\n            {t(\"Subject\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.subject ?? \"\"}\r\n            control={control}\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.subject ? \"form-control is-invalid\" : \"form-control\"\r\n                }\r\n                id=\"subject\"\r\n                invalid={errors.subject && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n          <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n            {t(\"Submit\")}\r\n          </Button>\r\n          <Button type=\"reset\" color=\"secondary\" outline onClick={handleReset}>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormAddEdit\r\n"],"sourceRoot":""}