{"version":3,"sources":["views/apps/app/store/index.js","views/apps/permission_menu/store/index.js","views/apps/permission_menu/modal/index.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","columnName","fieldName","dynamicColumnsFilter","filterLabel","fieldLabel","type","isM2MDefValFromGrid","isMultiSelection","required","log","ModalAddEdit","show","setShow","formState","setFormState","t","useTranslation","useParams","colors","useContext","ThemeColors","useState","setLoadingText","useDispatch","allStore","useSelector","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","handleReset","errors","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","filter","el","i","path_name","replaceAll","MyComponent","lazy","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","x","lookupMode_isM2MDefValFromGrid","isOpen","toggle","className","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","for","fallback","textAlign","outline","onClick"],"mappings":"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","file":"static/js/6.71380c88.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"App\" ////\r\nexport const storeName = \"apps_app\" ////\r\nexport const endpointName = \"api/app\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = false ////\r\nexport const getApiAfterPost = false ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  // {\r\n  //   columnName: \"Name\", //// Title Of Column\r\n  //   fieldName: \"name\" //// name of field from api\r\n  // },\r\n  // {\r\n  //   columnName: \"Code\",\r\n  //   fieldName: \"code\"\r\n  // }\r\n  // {\r\n  //   columnName: \"Created Date\",\r\n  //   fieldName: \"created_date\",\r\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      } else {\r\n        dispatch(pushCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      } else {\r\n        dispatch(putCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const pushCurrentdata = createAsyncThunk(\r\n  `${endpointName}/pushCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putCurrentdata = createAsyncThunk(\r\n  `${endpointName}/putCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateCurrentdata = createAsyncThunk(\r\n  `${endpointName}/updateCurrentdata`,\r\n  async (putData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return putData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          // state.selectedData = action.payload.data[0]\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action.payload.data)\r\n        // console.log(state.data)\r\n        state.data.unshift(action.payload.data)\r\n      })\r\n\r\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload.data[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\r\n        )\r\n        // console.log(state.data[objIndex])\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"is_uploading\"] = null\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex] = action.payload.data\r\n        }\r\n      })\r\n\r\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\r\n        )\r\n        // console.log(objIndex)\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\r\n        }\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nimport { formControlLabelClasses } from \"@mui/material\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Menu Permission\" ////\r\nexport const storeName = \"apps_permission_menu\" ////\r\nexport const endpointName = \"api/permission_menu\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = false //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const disabledAction = [\"update\"]\r\nexport const isManyToManyGrid = true\r\nexport const storeToRefreshAfterAll = [\"apps_permission\"]\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  {\r\n    columnName: \"Menu\",\r\n    fieldName: \"menu_title\"\r\n  },\r\n  {\r\n    columnName: \"App\",\r\n    fieldName: \"app_name\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"App\",\r\n    fieldName: \"id_app\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = [\r\n  {\r\n    fieldName: \"id_menu\",\r\n    fieldLabel: \"Menu\",\r\n    type: \"table\",\r\n    isM2MDefValFromGrid: true,\r\n    isMultiSelection: true,\r\n    required: true\r\n  },\r\n  {\r\n    fieldName: \"id_permission\",\r\n    fieldLabel: \"Permission\",\r\n    type: \"dropdown\",\r\n    required: true\r\n  }\r\n]\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\" || !params[key]) {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (storeToRefreshAfterAll !== null) {\r\n          console.log(getState()[storeToRefreshAfterAll])\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        // state.data = []\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(\"herr\")\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.selectedData = action.payload\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n        // console.log(state.selectedData)\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport store, {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\nimport { getDataList as getDataListApp } from \"../../app/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport classnames from \"classnames\"\r\n// import List from \"../../menu\"\r\n// import {List as PermissionComponent} from \"../../permission\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n      return el.type === \"dropdown\" || el.type === \"table\"\r\n    })\r\n\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n      const MyComponent = lazy(() => import(`../../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={dynamicFormRelation[i][\"type\"] === \"dropdown\"}\r\n          lookupMode_isMulti={dynamicFormRelation[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={\r\n          allStore[storeName].isLoadingAddEdit ||\r\n          allStore[storeName].isLoadingDetail\r\n        }\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <Label className=\"form-label\" for={item.fieldName}>\r\n                        {t(item.fieldLabel ?? \"\")}\r\n                      </Label>\r\n                      <Suspense fallback={<div>Loading...</div>}>\r\n                        <div\r\n                          className={\r\n                            !formDatasError[item.fieldName]\r\n                              ? \"dynamicForm_input\"\r\n                              : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                          }\r\n                        >\r\n                          {dynamicComponents[`${path_name}_comp`]}\r\n                          {item?.isM2MDefValFromGrid &&\r\n                            formDatas[item.fieldName] && (\r\n                              <div\r\n                                style={{ textAlign: \"right\" }}\r\n                                className=\"text-primary\"\r\n                              >\r\n                                {formDatas[item.fieldName]?.length}{\" \"}\r\n                                {t(item.fieldLabel)} {t(\"Selected\")}\r\n                              </div>\r\n                            )}\r\n                        </div>\r\n                      </Suspense>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              {/* <Col md={12} xs={12}>\r\n                <List lookupMode={true} lookupMode_isMulti={true} />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"id_permission\">\r\n                  {t(\"Permission\")}\r\n                </Label>\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicComponents[\"permission_comp\"]}\r\n                </Suspense>\r\n              </Col> */}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n"],"sourceRoot":""}