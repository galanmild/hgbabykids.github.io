{"version":3,"sources":["views/apps/permission/store/index.js","views/apps/permission_endpoint/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","title","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","className","type","CustomHeader","store","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","lookupMode","lookupMode_defaultFilter","t","useTranslation","ability","useContext","AbilityContext","useDispatch","allState","useSelector","invoices","getUserData","useEffect","getDataListPermission","xl","htmlFor","onChange","style","width","can","sessionStorage","getItem","color","onClick","e","target","index","List","filtersCustomAdd","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","lookupMode_isM2MDefValFromGrid","storeApp","apps_app","colors","ThemeColors","useState","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","filtersCustom","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","handleEdit","then","getDataListApp","res","meta","requestStatus","toast","padding","danger","main","border","iconTheme","primary","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","success","countSelectedCopy","values","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","columns","column","columnName","sortField","center","sortable","selector","row","cell","field","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","disabledAction","tableColumns","useMemo","sx","bgcolor","dark","light","animation","height","blocking","loader","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","par_name","show","setShow"],"mappings":"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","file":"static/js/14.9789d525.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Permission\" ////\r\nexport const storeName = \"apps_permission\" ////\r\nexport const endpointName = \"api/permission\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = []\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"Role\",\r\n    fieldName: \"id_role\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const extraCrud = [\r\n  {\r\n    crudName: \"permission_menu\",\r\n    crudLabel: \"Permission to Menu\"\r\n  },\r\n  {\r\n    crudName: \"permission_endpoint\",\r\n    crudLabel: \"Permission to Endpoint\"\r\n    // crudDescription: \"Permission to Endpoint\"\r\n  }\r\n]\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.title,\r\n            post: false,\r\n            put: false,\r\n            delete: false,\r\n            get: false\r\n          }))\r\n          // state.selectedData = {\r\n          //   value: action.payload.data[0].id,\r\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\r\n          // }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  disabledAction\r\n} from \"./store\"\r\n\r\nimport { getDataList as getDataListApp } from \"../app/store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\n\r\nimport { getDataList as getDataListPermission } from \"../permission/store\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected,\r\n  handleFiltersChange,\r\n  lookupMode,\r\n  lookupMode_defaultFilter\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  ////FILTER\r\n  const allState = useSelector((state) => state)\r\n\r\n  useEffect(() => {\r\n    if (\r\n      allState[\"apps_permission\"].data.length === 0 ||\r\n      !allState[\"apps_permission\"].isLoading\r\n    ) {\r\n      // console.log(dispatch({ type: \"api/permission/getDataList\", payload: {} }))\r\n      dispatch(getDataListPermission({}))\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          {!lookupMode && (\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n          {!lookupMode_defaultFilter ? (\r\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                // value={role}\r\n                onChange={(e) =>\r\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\r\n                }\r\n              >\r\n                <option value=\"\">\r\n                  {t(\"Select\")} {t(\"Permission\")}\r\n                </option>\r\n                {allState[\"apps_permission\"].data.map((item, index) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  filtersCustomAdd,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_dropdown,\r\n  lookupMode_isMulti,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  lookupMode_isM2MDefValFromGrid,\r\n  lookupMode_defaultFilter\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n\r\n  const [filtersCustom, setFiltersCustom] = useState(\r\n    lookupMode_defaultFilter ?? {}\r\n  )\r\n\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\r\n          dispatch(getDataListApp({})).then((res) => {\r\n            setLoading(false)\r\n            setShowModal(true)\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleFiltersChange = (value, par_name) => {\r\n    // console.log(event)\r\n    // console.log(par_name)\r\n    filtersCustom[par_name] = parseInt(value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    // {\r\n    //   name: t(\"App Name\"),\r\n    //   sortField: \"attributes\",\r\n    //   center: false,\r\n    //   sortable: true,\r\n    //   selector: (row) => row.attributes,\r\n    //   cell: (row) => row.attributes\r\n    // },\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          disabledAction={disabledAction}\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) =>\r\n              column.name === \"Actions\" ? (\r\n                <>\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    className=\"ms-2 me-1\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                </>\r\n              ) : (\r\n                <Skeleton\r\n                  sx={{ bgcolor: colors.dark.light }}\r\n                  animation=\"wave\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                />\r\n              )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      store.data.length === 0 ||\r\n      (!store.isLoading && getAlwaysGrid) ||\r\n      lookupMode_defaultFilter\r\n    ) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          ...filtersCustom\r\n        })\r\n      )\r\n    }\r\n    // console.log(lookupMode_defaultFilter)\r\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                  handleFiltersChange={handleFiltersChange}\r\n                  lookupMode={lookupMode}\r\n                  lookupMode_defaultFilter={lookupMode_defaultFilter}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}