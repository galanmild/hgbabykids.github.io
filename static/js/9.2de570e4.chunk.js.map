{"version":3,"sources":["views/apps/permission/store/index.js","views/apps/app/store/index.js","views/apps/endpoint/store/index.js","views/apps/endpoint/modal/index.js","views/apps/endpoint/Table.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","extraCrud","crudName","crudLabel","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","resetData","putData","selectedData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","error","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","title","pushCurrentdata","console","putCurrentdata","newData","updateCurrentdata","unshift","objIndex","current","findIndex","obj","parseInt","disabledAction","isManyToManyGrid","storeToRefreshAfterAll","isTreeLayout","columnName","minWidth","fieldLabel","type","required","datafromStore","setDataList","notReload","ModalAddEdit","show","setShow","formState","setFormState","currentData","t","useTranslation","useParams","useDispatch","store","useSelector","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","allStore","dynamicComponents","setDynamicComponents","formDatas","formDatasError","setFormDatasError","useForm","setError","control","handleSubmit","Loader","errors","className","handleReset","handleChangeInputs","isMulti","index","indexOf","splice","push","useEffect","componentsImport","dynamicFormRelation","i","path_name","replaceAll","MyComponent","lazy","for","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","isMultiSelection","lookupMode_onChange","lookupMode_defaultValue","isM2MDefValFromGrid","x","lookupMode_isM2MDefValFromGrid","defaultValue","onChange","e","target","isOpen","toggle","blocking","loader","onSubmit","storeData","sortedObject","JSON","stringify","countChanges","values","every","field","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","danger","icon","errorFields","assign","includes","md","xs","fallback","textAlign","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","handleFiltersChange","filtersCustomAdd","searchString","ability","AbilityContext","dynamicFilterComponents","setDynamicFilterComponents","dynamicFilterDatas","invoices","getUserData","xl","htmlFor","width","can","sessionStorage","getItem","List","storeApp","apps_app","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","filtersCustom","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","getDataListApp","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","countSelectedCopy","debounceFn","useCallback","debounce","inputValue","search","page","handleRowSelected","s","columns","column","sortField","center","sortable","selector","row","cell","dataFormat","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","app_logo","img","height","imgHeight","imgWidth","initials","content","app_name","tableColumns","useMemo","sx","bgcolor","dark","light","animation","removeDefaultValue","dataTree","parse","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","currentTarget","par_name"],"mappings":"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","file":"static/js/9.2de570e4.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Permission\" ////\r\nexport const storeName = \"apps_permission\" ////\r\nexport const endpointName = \"api/permission\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = []\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"Role\",\r\n    fieldName: \"id_role\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const extraCrud = [\r\n  {\r\n    crudName: \"permission_menu\",\r\n    crudLabel: \"Permission to Menu\"\r\n  },\r\n  {\r\n    crudName: \"permission_endpoint\",\r\n    crudLabel: \"Permission to Endpoint\"\r\n    // crudDescription: \"Permission to Endpoint\"\r\n  }\r\n]\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.title,\r\n            post: false,\r\n            put: false,\r\n            delete: false,\r\n            get: false\r\n          }))\r\n          // state.selectedData = {\r\n          //   value: action.payload.data[0].id,\r\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\r\n          // }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"App\" ////\r\nexport const storeName = \"apps_app\" ////\r\nexport const endpointName = \"api/app\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = false ////\r\nexport const getApiAfterPost = false ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  // {\r\n  //   columnName: \"Name\", //// Title Of Column\r\n  //   fieldName: \"name\" //// name of field from api\r\n  // },\r\n  // {\r\n  //   columnName: \"Code\",\r\n  //   fieldName: \"code\"\r\n  // }\r\n  // {\r\n  //   columnName: \"Created Date\",\r\n  //   fieldName: \"created_date\",\r\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      } else {\r\n        dispatch(pushCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      } else {\r\n        dispatch(putCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const pushCurrentdata = createAsyncThunk(\r\n  `${endpointName}/pushCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putCurrentdata = createAsyncThunk(\r\n  `${endpointName}/putCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateCurrentdata = createAsyncThunk(\r\n  `${endpointName}/updateCurrentdata`,\r\n  async (putData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return putData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          // state.selectedData = action.payload.data[0]\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action.payload.data)\r\n        // console.log(state.data)\r\n        state.data.unshift(action.payload.data)\r\n      })\r\n\r\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload.data[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\r\n        )\r\n        // console.log(state.data[objIndex])\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"is_uploading\"] = null\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex] = action.payload.data\r\n        }\r\n      })\r\n\r\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\r\n        )\r\n        // console.log(objIndex)\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\r\n        }\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\n\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Endpoint\" ////\r\nexport const storeName = \"apps_endpoint\" ////\r\nexport const endpointName = \"api/endpoint\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\nexport const disabledAction = []\r\nexport const isManyToManyGrid = true\r\nexport const storeToRefreshAfterAll = []\r\nexport const isTreeLayout = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  {\r\n    columnName: \"Url\",\r\n    fieldName: \"url_path\",\r\n    minWidth: \"350px\"\r\n  }\r\n  // {\r\n  //   columnName: \"App\",\r\n  //   fieldName: \"app_name\",\r\n  //   minWidth: \"120px\"\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"App\",\r\n    fieldName: \"id_app\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = [\r\n  {\r\n    fieldName: \"url_path\",\r\n    fieldLabel: \"Url\",\r\n    type: \"text\",\r\n    required: true\r\n  },\r\n  {\r\n    fieldName: \"id_app\",\r\n    fieldLabel: \"App\",\r\n    type: \"dropdown\",\r\n    required: true,\r\n    datafromStore: \"app\"\r\n  }\r\n]\r\n\r\nexport const extraCrud = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    // console.log(params)\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataList = createAsyncThunk(\r\n  `${endpointName}/setDataList`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    // Object.keys(data).forEach((key) => {\r\n    //   if (data[key] === null || data[key] === \"\") {\r\n    //     delete data[key]\r\n    //   }\r\n    // })\r\n    const id = data.id ?? getState()[storeName].selectedData.id\r\n    const notReload = data[\"notReload\"]\r\n    if (notReload) delete data[\"notReload\"]\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut && !notReload) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    pageTitle,\r\n    dynamicColumns,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        state.data = action.payload.data\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n        state.dataDropdown = action.payload.data.map((item) => ({\r\n          value: item.id,\r\n          label: item.title\r\n        }))\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataList.rejected, (state, action) => {\r\n        state.data = action.payload\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable brace-style */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  dynamicForm\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n  const [formDatas, setFormDatas] = useState({})\r\n  const [formDatasError, setFormDatasError] = useState({})\r\n\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(allStore[storeName].selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = () => {\r\n    if (countChanges(formDatas)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = () => {\r\n    if (\r\n      Object.values(formDatas).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(formDatas)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      // console.log(\"ERORR\")\r\n      // console.log(formDatas)\r\n      let errorFields = Object.assign({}, formDatasError)\r\n      for (let key in formDatas) {\r\n        // console.log(key, formDatas[key])\r\n        if (formDatas[key] === null || formDatas[key]?.length === 0) {\r\n          errorFields[key] = true\r\n        }\r\n      }\r\n      // console.log(errorFields)\r\n      setFormDatasError(errorFields)\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    // console.log(value, fieldName, isMulti)\r\n    if (isMulti) {\r\n      if (formDatas[fieldName]) {\r\n        const index = formDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          formDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          formDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        formDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      formDatas[fieldName] = value\r\n    }\r\n    // formDatasError[fieldName] = false\r\n    setFormDatasError({ ...formDatasError, [fieldName]: false })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    // const dynamicFormRelation = dynamicForm.filter(function (el) {\r\n    //   return el.type === \"dropdown\" || el.type === \"table\"\r\n    // })\r\n\r\n    const dynamicFormRelation = dynamicForm\r\n    for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n      const fieldName = dynamicFormRelation[i][\"fieldName\"]\r\n      const fieldLabel = dynamicFormRelation[i][\"fieldLabel\"]\r\n      const path_name = dynamicFormRelation[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      formDatas[fieldName] = null\r\n      formDatasError[fieldName] = false\r\n\r\n      ////////////INPUT - DROPDOWN\r\n      if (\r\n        dynamicFormRelation[i][\"type\"] === \"dropdown\" ||\r\n        dynamicFormRelation[i][\"type\"] === \"table\"\r\n      ) {\r\n        const MyComponent = lazy(() => import(`../../${path_name}`))\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <MyComponent\r\n              key={`dynInput_${fieldName}`}\r\n              lookupMode={true}\r\n              lookupMode_fieldName={fieldName}\r\n              lookupMode_dropdown={\r\n                dynamicFormRelation[i][\"type\"] === \"dropdown\"\r\n              }\r\n              lookupMode_isMulti={\r\n                dynamicFormRelation[i].isMultiSelection ?? false\r\n              }\r\n              lookupMode_onChange={handleChangeInputs}\r\n              lookupMode_defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              lookupMode_isM2MDefValFromGrid={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid ?? false\r\n              }\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      ////////////INPUT - TEXT\r\n      else {\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <Label className=\"form-label\" for={fieldName}>\r\n              {t(fieldLabel ?? \"\")}\r\n            </Label>\r\n            <Input\r\n              key={`dynInput_${fieldName}`}\r\n              defaultValue={\r\n                dynamicFormRelation[i]?.isM2MDefValFromGrid\r\n                  ? allStore[storeName].data.map((x) => x[fieldName])\r\n                  : allStore[storeName]?.selectedData\r\n                  ? allStore[storeName].selectedData[fieldName]\r\n                  : \"\"\r\n              }\r\n              onChange={(e) =>\r\n                handleChangeInputs(\r\n                  e.target.value,\r\n                  fieldName,\r\n                  dynamicFormRelation[i].isMultiSelection ?? false\r\n                )\r\n              }\r\n              // className={\r\n              //   !formDatasError[fieldName]\r\n              //     ? \"form-control is-invalid\"\r\n              //     : \"form-control\"\r\n              // }\r\n              id={`dynInput_${fieldName}`}\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n    }\r\n\r\n    setDynamicComponents(componentsImport)\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            <p className=\"mb-1\">\r\n              {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n            </p>\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              {dynamicForm.map((item, index) => {\r\n                const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n                if ([\"dropdown\", \"table\"].includes(item.type)) {\r\n                  if (item.type === \"table\") {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"dynamicForm_input\"\r\n                                : \"dynamicForm_input dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  } else {\r\n                    return (\r\n                      <Col key={path_name} md={12} xs={12}>\r\n                        <Suspense fallback={<div>Loading...</div>}>\r\n                          <div\r\n                            className={\r\n                              !formDatasError[item.fieldName]\r\n                                ? \"\"\r\n                                : \"dynamicForm_input_invalid\"\r\n                            }\r\n                          >\r\n                            {dynamicComponents[`${path_name}_comp`]}\r\n                            {item?.isM2MDefValFromGrid &&\r\n                              formDatas[item.fieldName] && (\r\n                                <div\r\n                                  style={{ textAlign: \"right\" }}\r\n                                  className=\"text-primary\"\r\n                                >\r\n                                  {formDatas[item.fieldName]?.length}{\" \"}\r\n                                  {t(item.fieldLabel)} {t(\"Selected\")}\r\n                                </div>\r\n                              )}\r\n                          </div>\r\n                        </Suspense>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                } else {\r\n                  return (\r\n                    <Col key={path_name} md={12} xs={12}>\r\n                      <div\r\n                        className={\r\n                          !formDatasError[item.fieldName]\r\n                            ? \"\"\r\n                            : \"dynamicForm_input_invalid\"\r\n                        }\r\n                      >\r\n                        {dynamicComponents[`${path_name}_comp`]}\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  disabledAction,\r\n  dynamicColumnsFilter,\r\n  setDataList\r\n} from \"./store\"\r\n\r\nimport { getDataList as getDataListApp } from \"../app/store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\n\r\nimport { getDataList as getDataListPermission } from \"../permission/store\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport Avatar from \"@components/avatar\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected,\r\n  handleFiltersChange,\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const dispatch = useDispatch()\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicFilterComponents, setDynamicFilterComponents] = useState({})\r\n  const [dynamicFilterDatas, setDynamicFilterDatas] = useState({})\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  const handleChangeInputs = (value, fieldName, isMulti = false) => {\r\n    fieldName = `filter_${fieldName}`\r\n    if (isMulti) {\r\n      if (dynamicFilterDatas[fieldName]) {\r\n        const index = dynamicFilterDatas[fieldName].indexOf(value)\r\n        if (index !== -1) {\r\n          dynamicFilterDatas[fieldName].splice(index, 1)\r\n        } else {\r\n          dynamicFilterDatas[fieldName].push(value)\r\n        }\r\n      } else {\r\n        dynamicFilterDatas[fieldName] = [value]\r\n      }\r\n    } else {\r\n      dynamicFilterDatas[fieldName] = value\r\n    }\r\n    return handleFiltersChange(dynamicFilterDatas[fieldName], fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // DYNAMIC IMPORT COMPONENTS\r\n    let componentsImport = {}\r\n    for (let i = 0; i < dynamicColumnsFilter.length; i++) {\r\n      const fieldName = dynamicColumnsFilter[i][\"fieldName\"]\r\n      const path_name = dynamicColumnsFilter[i][\"fieldName\"].replaceAll(\r\n        \"id_\",\r\n        \"\"\r\n      )\r\n\r\n      dynamicFilterDatas[`filter_${fieldName}`] = null\r\n      const MyComponent = lazy(() => import(`../${path_name}`))\r\n      componentsImport[`${path_name}_comp`] = (\r\n        <MyComponent\r\n          lookupMode={true}\r\n          lookupMode_fieldName={fieldName}\r\n          lookupMode_dropdown={true}\r\n          lookupMode_isMulti={dynamicColumnsFilter[i].isMultiSelection ?? false}\r\n          lookupMode_onChange={handleChangeInputs}\r\n          lookupMode_defaultValue={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid\r\n              ? allStore[storeName].data.map((x) => x[fieldName])\r\n              : allStore[storeName]?.selectedData\r\n              ? allStore[storeName].selectedData[fieldName]\r\n              : \"\"\r\n          }\r\n          lookupMode_isM2MDefValFromGrid={\r\n            dynamicColumnsFilter[i]?.isM2MDefValFromGrid ?? false\r\n          }\r\n        />\r\n      )\r\n    }\r\n\r\n    setDynamicFilterComponents(componentsImport)\r\n  }, [dispatch, dynamicFilterDatas])\r\n\r\n  return (\r\n    <div\r\n      className={`invoice-list-table-header w-100 ms-50 mb-75 ${\r\n        !lookupMode ? \"mt-2 me-1\" : \"\"\r\n      }`}\r\n    >\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          {!lookupMode && (\r\n            <div className=\"d-flex align-items-center w-100\">\r\n              <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n              <Input\r\n                className=\"mx-50\"\r\n                type=\"select\"\r\n                id=\"rows-per-page\"\r\n                value={rowsPerPage}\r\n                onChange={handlePerPage}\r\n                style={{ width: \"5rem\" }}\r\n              >\r\n                <option value=\"10\">10</option>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"50\">50</option>\r\n              </Input>\r\n              <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n            </div>\r\n          )}\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className={`d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column p-0 mt-xl-0 mt-1 ${\r\n            !lookupMode ? \"pe-xl-1\" : \"\"\r\n          }`}\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n          !lookupMode ? (\r\n            <div\r\n              className={`d-flex align-items-center mb-sm-0 mb-1 ${\r\n                !lookupMode ? \"me-1\" : \"\"\r\n              }`}\r\n            >\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className={`d-flex align-items-center mb-sm-0 mb-1 me-1`}>\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          {dynamicColumnsFilter.map((item, index) => {\r\n            const path_name = item.fieldName.replaceAll(\"id_\", \"\")\r\n            return (\r\n              <div\r\n                key={path_name}\r\n                className={`mt-50 width-300 mt-sm-0 mt-1 ${\r\n                  !lookupMode ? \"me-1\" : \"\"\r\n                }`}\r\n              >\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                  {dynamicFilterComponents[`${path_name}_comp`]}\r\n                </Suspense>\r\n              </div>\r\n\r\n              // <Col key={path_name} md={12} xs={12}>\r\n              //   <Label className=\"form-label\" for={item.fieldName}>\r\n              //     {t(item.fieldLabel ?? \"\")}\r\n              //   </Label>\r\n              //   <Suspense fallback={<div>Loading...</div>}>\r\n              //     <div\r\n              //       className={\r\n              //         !formDatasError[item.fieldName]\r\n              //           ? \"dynamicForm_input\"\r\n              //           : \"dynamicForm_input dynamicForm_input_invalid\"\r\n              //       }\r\n              //     >\r\n              //       {dynamicComponents[`${path_name}_comp`]}\r\n              //       {item?.isM2MDefValFromGrid &&\r\n              //         formDatas[item.fieldName] && (\r\n              //           <div\r\n              //             style={{ textAlign: \"right\" }}\r\n              //             className=\"text-primary\"\r\n              //           >\r\n              //             {formDatas[item.fieldName]?.length}{\" \"}\r\n              //             {t(item.fieldLabel)} {t(\"Selected\")}\r\n              //           </div>\r\n              //         )}\r\n              //     </div>\r\n              //   </Suspense>\r\n              // </Col>\r\n            )\r\n          })}\r\n\r\n          {/* {!filtersCustomAdd[\"filter_id_permission\"] ? (\r\n            <div className=\"mt-50 width-200 me-1 mt-sm-0 mt-1\">\r\n              <Input\r\n                type=\"select\"\r\n                name=\"select\"\r\n                // value={role}\r\n                onChange={(e) =>\r\n                  handleFiltersChange(e.target.value, \"filter_id_permission\")\r\n                }\r\n              >\r\n                <option value=\"\">\r\n                  {t(\"Select\")} {t(\"Permission\")}\r\n                </option>\r\n                {allStore[\"apps_permission\"].data.map((item, index) => (\r\n                  <option key={item.id} value={item.id}>\r\n                    {item.title}\r\n                  </option>\r\n                ))}\r\n              </Input>\r\n            </div>\r\n          ) : null} */}\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {ability.can(\"post\", sessionStorage.getItem(\"current_page_perm\")) &&\r\n            !lookupMode ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = ({\r\n  filtersCustomAdd,\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const storeApp = useSelector((state) => state.apps_app)\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(lookupMode ? 5 : 10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n\r\n  const [filtersCustom, setFiltersCustom] = useState(filtersCustomAdd ?? {})\r\n\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        if (storeApp.data.length === 0 && !storeApp.isLoading) {\r\n          dispatch(getDataListApp({})).then((res) => {\r\n            setLoading(false)\r\n            setShowModal(true)\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const handleFiltersChange = (value, par_name) => {\r\n    filtersCustom[par_name] = value\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage,\r\n        ...filtersCustom\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n    if (lookupMode && lookupMode_isMulti) {\r\n      lookupMode_onChange(\r\n        state.selectedRows.map((s) => s.id),\r\n        lookupMode_fieldName,\r\n        lookupMode_isMulti\r\n      )\r\n    }\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      minWidth: column.minWidth,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"App\"),\r\n      center: false,\r\n      sortable: false,\r\n      selector: (row) => row?.app_logo,\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {row?.app_logo ? (\r\n            <Avatar\r\n              className=\"me-1\"\r\n              img={row?.app_logo}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              imgHeight=\"25\"\r\n              imgWidth=\"30\"\r\n              color={\"light-primary\"}\r\n            />\r\n          ) : (\r\n            <Avatar\r\n              initials\r\n              className=\"me-1\"\r\n              // color={row.avatarColor}\r\n              content={row?.app_name ?? \"\"}\r\n            />\r\n          )}\r\n\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"fw-bolder\">{row.app_name}</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    // {\r\n    //   name: t(\"App Name\"),\r\n    //   sortField: \"attributes\",\r\n    //   center: false,\r\n    //   sortable: true,\r\n    //   selector: (row) => row.attributes,\r\n    //   cell: (row) => row.attributes\r\n    // },\r\n    !lookupMode && {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          disabledAction={disabledAction}\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n          storeName={storeName}\r\n        />\r\n      )\r\n      // (\r\n      //   <Input\r\n      //     disabled={row.hidden}\r\n      //     defaultChecked={row.checked}\r\n      //     onChange={(e) =>\r\n      //       handleChangeLookupMode(\r\n      //         e,\r\n      //         row.id,\r\n      //         lookupMode_fieldName,\r\n      //         lookupMode_isMulti\r\n      //       )\r\n      //     }\r\n      //     type=\"checkbox\"\r\n      //     id={`checkbox-${row.id}`}\r\n      //   />\r\n      // )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) =>\r\n              column.name === \"Actions\" ? (\r\n                <Fragment>\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    className=\"ms-2 me-1\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                  <Skeleton\r\n                    sx={{ bgcolor: colors.dark.light }}\r\n                    animation=\"wave\"\r\n                    width={30}\r\n                    height={40}\r\n                  />\r\n                </Fragment>\r\n              ) : (\r\n                <Skeleton\r\n                  sx={{ bgcolor: colors.dark.light }}\r\n                  animation=\"wave\"\r\n                  width=\"100%\"\r\n                  height={40}\r\n                />\r\n              )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    // mainArray.forEach(function iter(a) {\r\n    //   if (data.includes(a.id)) {\r\n    //     a[\"checked\"] = true\r\n    //     a[\"hidden\"] = true\r\n    //   }\r\n    //   // console.log(a.id, !data.includes(a.id))\r\n\r\n    //   // eslint-disable-next-line no-unused-expressions\r\n    //   Array.isArray(a.children) && a.children.forEach(iter)\r\n    // })\r\n    // dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage,\r\n          ...filtersCustom\r\n        })\r\n      ).then((x) => {\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, sort_dir, sort, currentPage, filtersCustom])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                  handleFiltersChange={handleFiltersChange}\r\n                  filtersCustomAdd={filtersCustomAdd}\r\n                  lookupMode={lookupMode}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}