{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/menu/index.js","views/apps/menu/Tree.js","views/apps/menu/DropDown.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","List","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","lookupMode_isM2MDefValFromGrid","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useState","searchTerm","setSearchTerm","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","className","title","pageTitle","data","htmlFor","type","onChange","e","event","target","map","item","index","color","statTitle","icon","baseClassName","fontSize","renderStats","sx","bgcolor","animation","height","width","count_format","count","searchString","MySwal","withReactContent","Swal","sidebarOpen","setSidebarOpen","ability","useContext","AbilityContext","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","ThemeColors","handleDelete","a","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","then","res","meta","requestStatus","toast","success","style","padding","main","border","iconTheme","primary","error","payload","message","danger","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","putData","removeDefaultValue","dataTree","mainArray","JSON","parse","stringify","forEach","iter","includes","Array","isArray","children","status","isLoading","getDataList","x","blocking","loader","margin","treeData","onMoveNode","node","nextParentNode","nextTreeIndex","prevPath","prevTreeIndex","nextPath","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","titleTranslate","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontWeight","src","logo","is_separator","renderIcon","paddingLeft","textTransform","buttons","can","sessionStorage","getItem","Ripple","onClick","size","placement","rowData","preventDefault","detailFromGrid","setDataById","getDataById","hidden","disabled","defaultChecked","checked","handleChangeLookupMode","show","setShow","detailPage","currentData","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","isMulti","options","classnames","selectedData","classNamePrefix"],"mappings":"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","file":"static/js/40.10de8a57.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Table from \"./Table\"\r\nimport Tree from \"./Tree\"\r\nimport DropDown from \"./DropDown\"\r\nimport { Row, Col, Input } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport Icon from \"@mui/material/Icon\"\r\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\r\nimport \"./style.scss\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\n\r\nimport {\r\n  storeName,\r\n  getAlwaysGrid,\r\n  getApiSummaryData,\r\n  getSummaryData,\r\n  pageTitle\r\n} from \"./store\"\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nconst List = ({\r\n  lookupMode = false,\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_dropdown = false,\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    // debounceFn(event)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      (store.dataSummary?.length === 0 ||\r\n        (!store.isLoadingSummary && getAlwaysGrid))\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return !lookupMode_dropdown ? (\r\n    <Fragment>\r\n      <div className=\"content-header row\">\r\n        {!lookupMode && (\r\n          <Breadcrumbs\r\n            title={t(pageTitle)}\r\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\r\n          />\r\n        )}\r\n        <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"app-user-list\">\r\n        {!lookupMode && getApiSummaryData && (\r\n          <Row>\r\n            {store.dataSummary?.map((item, index) => {\r\n              return (\r\n                <Col>\r\n                  <StatsHorizontal\r\n                    color={colors[index]}\r\n                    statTitle={`${t(item.title)}`}\r\n                    icon={\r\n                      item.icon ? (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          {item.icon}\r\n                        </Icon>\r\n                      ) : (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          lightbulb\r\n                        </Icon>\r\n                      )\r\n                    }\r\n                    renderStats={\r\n                      store.isLoadingSummary ? (\r\n                        <Skeleton\r\n                          sx={{ bgcolor: \"#eef2f8\" }}\r\n                          animation=\"wave\"\r\n                          height={25}\r\n                          width={40}\r\n                          className=\"fw-bolder mb-75\"\r\n                        />\r\n                      ) : (\r\n                        <h3 className=\"fw-bolder mb-75\">\r\n                          {item.count_format ?? item.count}\r\n                        </h3>\r\n                      )\r\n                    }\r\n                  />\r\n                </Col>\r\n              )\r\n            })}\r\n          </Row>\r\n        )}\r\n        <Tree\r\n          searchString={searchTerm}\r\n          lookupMode={lookupMode}\r\n          lookupMode_fieldName={lookupMode_fieldName}\r\n          lookupMode_defaultValue={lookupMode_defaultValue}\r\n          lookupMode_onChange={lookupMode_onChange}\r\n          lookupMode_isMulti={lookupMode_isMulti}\r\n          lookupMode_isM2MDefValFromGrid\r\n        />\r\n        {/* <Table /> */}\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <DropDown\r\n      lookupMode_fieldName={lookupMode_fieldName}\r\n      lookupMode_onChange={lookupMode_onChange}\r\n      lookupMode_defaultValue={lookupMode_defaultValue}\r\n      lookupMode_isMulti={lookupMode_isMulti}\r\n      lookupMode_isM2MDefValFromGrid\r\n    />\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  Component\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  putData\r\n} from \"./store\"\r\nimport { renderIcon } from \"./store/my_menu\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square,\r\n  Plus\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst List = ({\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    // console.log(rowData)\r\n    setCurrentDataAdd(rowData)\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    dispatch(setDataList(tree))\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    let mainArray = JSON.parse(JSON.stringify(store.data))\r\n    mainArray.forEach(function iter(a) {\r\n      if (a.id === id) {\r\n        a.checked = e.target.checked\r\n      }\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    handleChange(mainArray)\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node?.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(treeData)\r\n    // console.log(node)\r\n    // console.log(nextParentNode)\r\n    // console.log(prevPath)\r\n    // console.log(prevTreeIndex)\r\n    // console.log(nextPath)\r\n    // console.log(nextTreeIndex)\r\n    const data = {\r\n      id: node.id,\r\n      title: node.title,\r\n      parent_id: nextParentNode?.is_app_header ? null : nextParentNode.id,\r\n      index: nextTreeIndex ?? 1\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.title\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    const title = node.title.toLowerCase()\r\n    const titleTranslate = t(node.title).toLowerCase()\r\n    // console.log(searchQuery, title.toLowerCase())\r\n    return (\r\n      (searchQuery && title.indexOf(searchQuery) > -1) ||\r\n      (searchQuery && titleTranslate.indexOf(searchQuery) > -1)\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    mainArray.forEach(function iter(a) {\r\n      if (data.includes(a.id)) {\r\n        a[\"checked\"] = true\r\n        a[\"hidden\"] = true\r\n      }\r\n      // console.log(a.id, !data.includes(a.id))\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    // console.log(data)\r\n    // console.log(mainArray)\r\n    dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(store)\r\n    if (\r\n      (store.status === 0 && store.data.length === 0) ||\r\n      (!store.isLoading && getAlwaysGrid)\r\n    ) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({})).then((x) => {\r\n        // console.log(lookupMode_isM2MDefValFromGrid)\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n\r\n    if (store.data) {\r\n      // console.log(store.data)\r\n      // console.log(\r\n      //   store.data\r\n      //     ?.find((itemxx) => itemxx.id_app === 1053)\r\n      //     ?.children?.filter((itemxx2) => itemxx2.parent_id === node.id)\r\n      // )\r\n    }\r\n    // console.log(lookupMode_isM2MDefValFromGrid)\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [store.data])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: !lookupMode ? 800 : 350,\r\n                margin: !lookupMode ? 20 : 10\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.data}\r\n                onChange={handleChange}\r\n                onMoveNode={!lookupMode ? onMoveNode : null}\r\n                canDrag={!lookupMode ? eventCanDragNode : false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={4}\r\n                generateNodeProps={({ node, path }) => {\r\n                  // console.log(node)\r\n                  return {\r\n                    style: {\r\n                      fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                      fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                    },\r\n                    title: (\r\n                      <Fragment>\r\n                        {!node.is_app_header ? (\r\n                          !node.is_separator ? (\r\n                            node.icon ? (\r\n                              <div>{renderIcon(node.icon, \"\", 24)} </div>\r\n                            ) : (\r\n                              <div\r\n                                style={{\r\n                                  fontWeight: node.is_app_header ? `bold` : 400\r\n                                }}\r\n                              >\r\n                                {t(node.title)}\r\n                              </div>\r\n                            )\r\n                          ) : null\r\n                        ) : (\r\n                          <img\r\n                            className=\"me-1\"\r\n                            src={node.logo}\r\n                            width=\"30\"\r\n                            height=\"25\"\r\n                          />\r\n                        )}\r\n                        <div\r\n                          style={{\r\n                            paddingLeft: node.is_app_header ? 0 : 10,\r\n                            fontWeight:\r\n                              node.is_app_header || node.is_separator\r\n                                ? `bold`\r\n                                : 400,\r\n                            textTransform: node.is_separator ? `uppercase` : \"\",\r\n                            color: node.is_separator ? \"#a6a4b0\" : \"inherit\"\r\n                          }}\r\n                        >\r\n                          {t(node.title)}\r\n                        </div>\r\n                      </Fragment>\r\n                    ),\r\n                    buttons: [\r\n                      ability.can(\r\n                        \"post\",\r\n                        sessionStorage.getItem(\"current_page_perm\")\r\n                      ) && !lookupMode ? (\r\n                        // && !node.is_separator\r\n                        <>\r\n                          <Button.Ripple\r\n                            className=\"btn-icon rounded-circle\"\r\n                            color=\"flat-primary\"\r\n                            id=\"btn-edit\"\r\n                            onClick={(e) => {\r\n                              toggleSidebar(node)\r\n                            }}\r\n                          >\r\n                            <Plus size={16} />\r\n                          </Button.Ripple>\r\n                          <UncontrolledTooltip\r\n                            placement=\"left\"\r\n                            target=\"btn-edit\"\r\n                          >\r\n                            {t(\"Add Child\")}\r\n                          </UncontrolledTooltip>\r\n                        </>\r\n                      ) : null,\r\n                      ability.can(\r\n                        \"update\",\r\n                        sessionStorage.getItem(\"current_page_perm\")\r\n                      ) &&\r\n                      !lookupMode &&\r\n                      !node.is_app_header ? (\r\n                        <>\r\n                          <Button.Ripple\r\n                            className=\"btn-icon rounded-circle\"\r\n                            color=\"flat-info\"\r\n                            id=\"btn-edit\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault()\r\n                              handleEdit(node)\r\n                            }}\r\n                          >\r\n                            <Edit2 size={16} />\r\n                          </Button.Ripple>\r\n                          <UncontrolledTooltip\r\n                            placement=\"left\"\r\n                            target=\"btn-edit\"\r\n                          >\r\n                            {t(\"Edit\")}\r\n                          </UncontrolledTooltip>\r\n                        </>\r\n                      ) : null,\r\n                      ability.can(\r\n                        \"delete\",\r\n                        sessionStorage.getItem(\"current_page_perm\")\r\n                      ) &&\r\n                      !lookupMode &&\r\n                      !node.is_app_header &&\r\n                      !node.children?.length > 0 ? (\r\n                        // store.data\r\n                        //   ?.find((itemxx) => itemxx.id_app === node.id_app)\r\n                        //   ?.children?.filter(\r\n                        //     (itemxx2) => itemxx2.parent_id === node.id\r\n                        //   )?.length === 0\r\n                        <>\r\n                          <Button.Ripple\r\n                            id=\"btn-delete\"\r\n                            className=\"btn-icon rounded-circle\"\r\n                            color=\"flat-danger\"\r\n                            onClick={(e) => {\r\n                              e.preventDefault()\r\n                              handleDelete(node.id)\r\n                            }}\r\n                          >\r\n                            <Trash2 size={16} />\r\n                          </Button.Ripple>\r\n                          <UncontrolledTooltip\r\n                            placement=\"left\"\r\n                            target=\"btn-delete\"\r\n                          >\r\n                            {t(\"Delete\")}\r\n                          </UncontrolledTooltip>\r\n                        </>\r\n                      ) : null,\r\n                      lookupMode && !node.is_app_header ? (\r\n                        <div\r\n                          className={\r\n                            node.hidden\r\n                              ? \"form-check form-check-secondary\"\r\n                              : \"form-check form-check-primary\"\r\n                          }\r\n                        >\r\n                          <Input\r\n                            disabled={node.hidden}\r\n                            defaultChecked={node.checked}\r\n                            onChange={(e) =>\r\n                              handleChangeLookupMode(\r\n                                e,\r\n                                node.id,\r\n                                lookupMode_fieldName,\r\n                                lookupMode_isMulti\r\n                              )\r\n                            }\r\n                            type=\"checkbox\"\r\n                            id={`checkbox-${node.id}`}\r\n                          />\r\n                        </div>\r\n                      ) : null\r\n                    ]\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className={classnames(\"react-select\", {\r\n          \"is-invalid\": store.selectedData?.id === null\r\n        })}\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}