{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","../node_modules/@mui/base/TextareaAutosize/TextareaAutosize.js","views/apps/menu/modal/index.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","_excluded","getStyleValue","parseInt","styles","visibility","position","overflow","height","top","left","transform","isEmpty","obj","keys","length","outerHeightStyle","TextareaAutosize","React","props","forwardedRef","onChange","maxRows","minRows","style","other","_objectWithoutPropertiesLoose","isControlled","current","inputRef","handleRef","useForkRef","shadowRef","renders","state","setState","getUpdatedState","input","computedStyle","ownerWindow","getComputedStyle","width","inputShallow","placeholder","slice","boxSizing","padding","paddingBottom","paddingTop","border","borderBottomWidth","borderTopWidth","innerHeight","scrollHeight","singleRowHeight","outerHeight","Math","max","Number","min","abs","updateState","prevState","newState","syncHeight","resizeObserver","handleResize","debounce","ReactDOM","syncHeightWithFlushSync","containerWindow","addEventListener","ResizeObserver","observe","clear","removeEventListener","disconnect","useEnhancedEffect","_jsxs","children","_jsx","_extends","event","ref","rows","className","readOnly","tabIndex","CustomLabel","htmlFor","size","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","useParams","dispatch","useDispatch","store","useSelector","storeName","colors","useContext","ThemeColors","useState","setLoadingText","useForm","control","setError","setValue","getValues","handleSubmit","errors","is_separator","isSeparator","setIsSeparator","iconCategory","setIconCategory","icon","setIcon","canvasPlacement","setCanvasPlacement","canvasOpen","setCanvasOpen","toggleCanvasStart","toggleCanvasBottom","setIconBefore","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","title","onSubmit","data","parent_id","id_app","values","every","field","putData","then","res","meta","requestStatus","toast","success","color","main","iconTheme","primary","getDataById","error","payload","message","danger","key","type","is_app_header","postData","md","xs","for","defaultValue","selectedData","name","render","invalid","val","target","Ripple","outline","onClick","renderIcon","marginTop","defaultChecked","checked","changeSeparator","dataDropdown","filter","el","theme","selectThemeColors","isDisabled","options","map","item","label","classnames","classNamePrefix","routePath","description","direction"],"mappings":"0IAIQ,SAAUA,GAAW,aAE3B,IAAIC,EAAuB,qBAAXC,aAA+CC,IAArBD,OAAOE,UAC3CF,OAAOE,UACP,CACEC,MAAO,IAEXC,EAAa,CACbC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CAAC,SAAU,QAAS,SAAU,OAAQ,QAAS,QAAS,UAEtEC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,UACA,YACA,UACA,WACA,aAGRE,eAAgB,EAChBC,QAAS,WACL,MAAO,IAEXC,WAAW,EACXC,eAAgB,OAEpBb,EAAGI,MAAMU,GAAKT,EACd,IAAIS,EAAKd,EAAGI,MAEZL,EAAQM,WAAaA,EACrBN,EAAQgB,QAAUD,EAElBE,OAAOC,eAAelB,EAAS,aAAc,CAAEmB,OAAO,IA1DSC,CAAQpB,I,4TCGnEqB,EAAY,CAAC,WAAY,UAAW,UAAW,QAAS,SAO9D,SAASC,EAAcH,GACrB,OAAOI,SAASJ,EAAO,KAAO,EAEhC,IAAMK,EACI,CAENC,WAAY,SAEZC,SAAU,WAEVC,SAAU,SACVC,OAAQ,EACRC,IAAK,EACLC,KAAM,EAENC,UAAW,iBAGf,SAASC,EAAQC,GACf,YAAe9B,IAAR8B,GAA6B,OAARA,GAA4C,IAA5BhB,OAAOiB,KAAKD,GAAKE,QAAyC,IAAzBF,EAAIG,mBAA2BH,EAAIN,SAclH,IA0NeU,EA1NuBC,cAAiB,SAA0BC,EAAOC,GACtF,IACIC,EAKEF,EALFE,SACAC,EAIEH,EAJFG,QAFJ,EAMMH,EAHFI,eAHJ,MAGc,EAHd,EAIIC,EAEEL,EAFFK,MACAzB,EACEoB,EADFpB,MAEF0B,EAAQC,YAA8BP,EAAOlB,GAEpC0B,EACPT,SAAsB,MAATnB,GADf6B,QAEIC,EAAWX,SAAa,MACxBY,EAAYC,YAAWX,EAAcS,GACrCG,EAAYd,SAAa,MACzBe,EAAUf,SAAa,GAC7B,EAA0BA,WAAe,CACvCF,iBAAkB,IADpB,mBAAOkB,EAAP,KAAcC,EAAd,KAGMC,EAAkBlB,eAAkB,WACxC,IAAMmB,EAAQR,EAASD,QAEjBU,EADkBC,YAAYF,GACEG,iBAAiBH,GAGvD,GAA4B,QAAxBC,EAAcG,MAChB,MAAO,CACLzB,iBAAkB,GAGtB,IAAM0B,EAAeV,EAAUJ,QAC/Bc,EAAalB,MAAMiB,MAAQH,EAAcG,MACzCC,EAAa3C,MAAQsC,EAAMtC,OAASoB,EAAMwB,aAAe,IACpB,OAAjCD,EAAa3C,MAAM6C,OAAO,KAI5BF,EAAa3C,OAAS,KAExB,IAAM8C,EAAYP,EAAcO,UAC1BC,EAAU5C,EAAcoC,EAAcS,eAAiB7C,EAAcoC,EAAcU,YACnFC,EAAS/C,EAAcoC,EAAcY,mBAAqBhD,EAAcoC,EAAca,gBAGtFC,EAAcV,EAAaW,aAGjCX,EAAa3C,MAAQ,IACrB,IAAMuD,EAAkBZ,EAAaW,aAGjCE,EAAcH,EAYlB,OAXI7B,IACFgC,EAAcC,KAAKC,IAAIC,OAAOnC,GAAW+B,EAAiBC,IAExDjC,IACFiC,EAAcC,KAAKG,IAAID,OAAOpC,GAAWgC,EAAiBC,IAOrD,CACLvC,kBANFuC,EAAcC,KAAKC,IAAIF,EAAaD,KAGkB,eAAdT,EAA6BC,EAAUG,EAAS,GAItF1C,SAHeiD,KAAKI,IAAIL,EAAcH,IAAgB,KAKvD,CAAC9B,EAASC,EAASJ,EAAMwB,cACtBkB,EAAc,SAACC,EAAWC,GAC9B,IACE/C,EAEE+C,EAFF/C,iBACAT,EACEwD,EADFxD,SAIF,OAAI0B,EAAQL,QAAU,KAAOZ,EAAmB,GAAKwC,KAAKI,KAAKE,EAAU9C,kBAAoB,GAAKA,GAAoB,GAAK8C,EAAUvD,WAAaA,IAChJ0B,EAAQL,SAAW,EACZ,CACLrB,WACAS,qBAQG8C,GAEHE,EAAa9C,eAAkB,WACnC,IAAM6C,EAAW3B,IACbxB,EAAQmD,IAGZ5B,GAAS,SAAA2B,GACP,OAAOD,EAAYC,EAAWC,QAE/B,CAAC3B,IAgBJlB,aAAgB,WACd,IAWI+C,EAXEC,EAAeC,aAAS,WAC5BlC,EAAQL,QAAU,EAMdC,EAASD,SAvBe,WAC9B,IAAMmC,EAAW3B,IACbxB,EAAQmD,IAOZK,aAAmB,WACjBjC,GAAS,SAAA2B,GACP,OAAOD,EAAYC,EAAWC,SAa9BM,MAIEhC,EAAQR,EAASD,QACjB0C,EAAkB/B,YAAYF,GAMpC,OALAiC,EAAgBC,iBAAiB,SAAUL,GACb,qBAAnBM,iBACTP,EAAiB,IAAIO,eAAeN,IACrBO,QAAQpC,GAElB,WACL6B,EAAaQ,QACbJ,EAAgBK,oBAAoB,SAAUT,GAC1CD,GACFA,EAAeW,iBAIrBC,aAAkB,WAChBb,OAEF9C,aAAgB,WACde,EAAQL,QAAU,IACjB,CAAC7B,IAUJ,OAAoB+E,eAAM5D,WAAgB,CACxC6D,SAAU,CAAcC,cAAK,WAAYC,YAAS,CAChDlF,MAAOA,EACPsB,SAZiB,SAAA6D,GACnBjD,EAAQL,QAAU,EACbD,GACHqC,IAEE3C,GACFA,EAAS6D,IAOTC,IAAKrD,EAGLsD,KAAM7D,EACNC,MAAOyD,YAAS,CACdzE,OAAQ0B,EAAMlB,iBAGdT,SAAU2B,EAAM3B,SAAW,cAAWxB,GACrCyC,IACFC,IAAsBuD,cAAK,WAAY,CACxC,eAAe,EACfK,UAAWlE,EAAMkE,UACjBC,UAAU,EACVH,IAAKnD,EACLuD,UAAW,EACX/D,MAAOyD,YAAS,GAAI7E,EAAeoB,EAAO,CACxCwB,WAAY,EACZD,cAAe,Y,0BC7KjByC,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACE,eAAC,IAAD,CAAOJ,UAAU,mBAAmBI,QAASA,EAA7C,UACE,sBAAMJ,UAAU,mBAAhB,SACE,cAAC,IAAD,CAAOK,KAAM,OAEf,sBAAML,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAGK,KAAM,WA0kBFC,UApkBM,SAAC,GAOf,IAAD,kBANJC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,aAEI,IADJC,mBACI,MADU,KACV,EACIC,EAAMC,cAAND,EACAvG,EAAOyG,cAAPzG,GACF0G,EAAWC,cACXC,EAAQC,aAAY,SAACtE,GAAD,OAAWA,EAAMuE,gBACnCC,EAAWC,qBAAWC,KAAtBF,OACR,EAAsCG,mBAAS,eAA/C,mBAAoBC,GAApB,WACA,EAOIC,YAAQ,IANVC,EADF,EACEA,QACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,SACAC,EAJF,EAIEA,UACAC,EALF,EAKEA,aACaC,EANf,EAMEtB,UAAasB,OAGf,GAAsCR,mBAASZ,EAAYqB,cAA3D,qBAAOC,GAAP,MAAoBC,GAApB,MACA,GAAwCX,mBAAS,WAAjD,qBAAOY,GAAP,MAAqBC,GAArB,MACA,GAAwBb,mBAAQ,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAa0B,MAA9C,qBAAOA,GAAP,MAAaC,GAAb,MAEA,GAA8Cf,mBAAS,SAAvD,qBAAOgB,GAAP,MAAwBC,GAAxB,MACA,GAAoCjB,oBAAS,GAA7C,qBAAOkB,GAAP,MAAmBC,GAAnB,MACMC,GAAoB,WACxBP,GAAgB,WAChBI,GAAmB,SACnBE,IAAeD,KAGXG,GAAqB,WACzBR,GAAgB,WAChBI,GAAmB,UACnBE,IAAeD,KAGXI,GAAgB,SAACR,GACrBT,EAAS,OAAQS,GACjBC,GAAQD,IA4KJS,GAAc,WAClB/B,EAASgC,gCA6BX,OACE,eAAC,IAAD,CACEC,OAAQ1C,EACR2C,OAAQ,WACNH,KACAvC,GAASD,IAEXP,UAAU,iCANZ,UAQE,eAAC,IAAD,CACEmD,SAAUjC,EAAMkC,kBAAoBlC,EAAMmC,gBAC1CC,OAAQ,cAAC,IAAD,IAFV,UAIE,cAAC,IAAD,CACEtD,UAAU,iBACVkD,OAAQ,WACNH,KACAvC,GAASD,MAGb,eAAC,IAAD,CAAWP,UAAU,qBAArB,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAIA,UAAU,OAAd,UAC0Ba,EAAT,SAAdH,EAAyB,OAAY,WADxC,IACqDG,EAAE0C,gBAExC,SAAd7C,GACC,oBAAGV,UAAU,OAAb,UACGa,EAAE,cADL,IACqBD,EAAcC,EAAED,EAAY4C,OAAS,SAI9D,cAAC,IAAD,CACEC,SAEM1B,EADU,SAAdrB,EApNY,SAACgD,GAerB,GAbFA,EAAI,aAAmBxB,GACvBwB,EAAI,KAAWpB,GAEXoB,EAAKC,YACHD,EAAKC,UAAUjJ,OAAS,KAC1BgJ,EAAI,OAAaA,EAAKC,UAAUC,OAChCF,EAAI,UAAgB,MAEpBA,EAAI,UAAgBA,EAAKC,UAAUjJ,OAMnCF,OAAOqJ,OAAOH,GAAMI,OAAM,SAACC,GACzB,OAAiB,OAAVA,MAEa,OAAtBL,EAAI,UAEJ,GAAKxB,IAAqC,KAAtBwB,EAAI,UAStBjC,EAAe,GAAD,OAAIZ,EAAE,YAAN,YAAqBA,EAAE0C,aAAvB,YAAqC1C,EAAE,UAAvC,UACdG,EAASgD,kBAAQN,IAAOO,MAAK,SAACC,GAEG,cAA3BA,EAAIC,KAAKC,eACX5D,GAASD,GACT8D,IAAMC,QAAN,UAAiBzD,EAAE,wBAAnB,YAA8CA,EAAE0C,cAAc,CAC5DpH,MAAO,CACLsB,QAAS,OACT8G,MAAOlD,EAAOiD,QAAQE,KACtB5G,OAAO,aAAD,OAAeyD,EAAOiD,QAAQE,OAEtCC,UAAW,CACTC,QAASrD,EAAOiD,QAAQE,QAGxB/D,GACFO,EAAS2D,sBAAYrK,KAEa,aAA3B4J,EAAIC,KAAKC,eAClBC,IAAMO,MAAMV,EAAIW,QAAQC,QAAS,CAC/B3I,MAAO,CACLsB,QAAS,OACT8G,MAAOlD,EAAO0D,OAAOP,KACrB5G,OAAO,aAAD,OAAeyD,EAAO0D,OAAOP,OAErCC,UAAW,CACTC,QAASrD,EAAO0D,OAAOP,gBAlC/B,IAAK,IAAMQ,KAAOtB,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAKsB,IAAuC,KAAtB,UAAAtB,EAAKsB,UAAL,eAAWtJ,SACnCkG,EAASoD,EAAK,CACZC,KAAM,gBAsCd,IAAK,IAAMD,KAAOtB,EAAM,CAAC,IAAD,EACI,KAAtB,UAAAA,EAAKsB,UAAL,eAAWtJ,SACbkG,EAASoD,EAAK,CACZC,KAAM,aAUI,SAACvB,GAErB,GACElJ,OAAOqJ,OAAOH,GAAMI,OAAM,SAACC,GACzB,OAAiB,OAAVA,KAGT,GAAK7B,IAAqC,KAAtBwB,EAAI,UAStBjC,EAAe,GAAD,OAAIZ,EAAE,kBAAD,OAAmB0C,gBAIjC3C,EAAYsE,cAGfxB,EAAI,UAAgB,KAFpBA,EAAI,UAAgB9C,EAAYtG,GAKlCoJ,EAAI,OAAa9C,EAAYgD,OAC7BF,EAAI,aAAmBxB,GACvBwB,EAAI,KAAWpB,GAGftB,EAASmE,mBAASzB,IAAOO,MAAK,SAACC,GAEE,cAA3BA,EAAIC,KAAKC,eACX5D,GAASD,GACT8D,IAAMC,QAAN,UAAiBzD,EAAE,wBAAnB,YAA8CA,EAAE0C,cAAc,CAC5DpH,MAAO,CACLsB,QAAS,OACT8G,MAAOlD,EAAOiD,QAAQE,KACtB5G,OAAO,aAAD,OAAeyD,EAAOiD,QAAQE,OAEtCC,UAAW,CACTC,QAASrD,EAAOiD,QAAQE,QAGxB/D,GACFO,EAAS2D,sBAAYrK,KAEa,aAA3B4J,EAAIC,KAAKC,eAClBC,IAAMO,MAAMV,EAAIW,QAAQC,QAAS,CAC/B3I,MAAO,CACLsB,QAAS,OACT8G,MAAOlD,EAAO0D,OAAOP,KACrB5G,OAAO,aAAD,OAAeyD,EAAO0D,OAAOP,OAErCC,UAAW,CACTC,QAASrD,EAAO0D,OAAOP,gBAhD/B,IAAK,IAAMQ,KAAOtB,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAKsB,IAAuC,KAAtB,UAAAtB,EAAKsB,UAAL,eAAWtJ,SACnCkG,EAASoD,EAAK,CACZC,KAAM,gBAoDd,IAAK,IAAMD,KAAOtB,EAAM,CAAC,IAAD,EACJ,OAAdA,EAAKsB,IAAuC,KAAtB,UAAAtB,EAAKsB,UAAL,eAAWtJ,SACnCkG,EAASoD,EAAK,CACZC,KAAM,cAoER,SAOE,eAAC,IAAD,CAAKjF,UAAU,aAAf,UACE,eAAC,IAAD,CAAKoF,GAAI,EAAGC,GAAI,GAAhB,UACE,eAAC,IAAD,CAAOrF,UAAU,aAAasF,IAAI,QAAlC,UACGzE,EAAE,SACH,sBAAMb,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEuF,aAAY,oBAAErE,EAAMsE,oBAAR,aAAE,EAAoBhC,aAAtB,QAA+B,GAC3C7B,QAASA,EACTrH,GAAG,QACHmL,KAAK,QACLC,OAAQ,gBAAG3B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEE/D,UACEgC,EAAOwB,MACH,0BACA,eAENlJ,GAAG,QACHqL,QAAS3D,EAAOwB,QAAS,YAM/BtB,IACA,eAAC,IAAD,CAAKkD,GAAI,EAAGC,GAAI,EAAGrF,UAAU,cAA7B,UACE,eAAC,IAAD,CAAOA,UAAU,aAAasF,IAAI,OAAlC,UACGzE,EAAE,QACH,sBAAMb,UAAU,cAAhB,kBAEF,wBAWA,cAAC,IAAD,CACEuF,aAAY,oBAAErE,EAAMsE,oBAAR,aAAE,EAAoBlD,YAAtB,QAA8B,GAC1CX,QAASA,EACTrH,GAAG,OACHmL,KAAK,OACLC,OAAQ,oBAAG3B,EAAH,EAAGA,MAAH,OACN,eAAC,IAAD,WACE,cAAC,IAAD,2BACMA,GADN,IAEE/D,UACEgC,EAAOM,KACH,0BACA,eAENtG,SAAU,SAAC6D,GACT,IAAM+F,EAAM/F,EAAMgG,OAAOnL,MACzBqJ,EAAM/H,SAAS4J,GACfrD,GAAQqD,IAEVtL,GAAG,OACHqL,QAAS3D,EAAOM,OAAQ,KAE1B,cAAC,IAAOwD,OAAR,CACE9F,UAAU,WACV+F,SAAO,EACPxB,MAAM,YACNyB,QAASnD,GAJX,SAMGoD,qBAAU,oBACTnE,IAAS,YADA,QAEPQ,UAFO,QAGP,yBACF,UACA,eASd,eAAC,IAAD,CAAKtC,UAAU,iCAAiCoF,GAAI,EAAGC,GAAI,EAA3D,UACE,cAAC,IAAD,CAAOrF,UAAU,aAAasF,IAAI,eAAlC,SACGzE,EAAE,eAEL,sBACE1E,MAAO,CAAE+J,UAAW,OACpBlG,UAAU,yCAFZ,UAIE,cAAC,IAAD,CACEiF,KAAK,SACLkB,eAAgBjE,GAChBlG,SAAU,SAAC0H,IAhKL,SAACA,GAEvBvB,GAAeuB,EAAKmC,OAAOO,SACvB1C,EAAKmC,OAAOO,QA8JEC,CAAgB3C,IAElBpJ,GAAG,eACHmL,KAAK,iBAEP,cAAC,EAAD,CAAarF,QAAQ,uBAIzB,eAAC,IAAD,CAAKgF,GAAI,EAAGC,GAAI,GAAhB,UACE,cAAC,IAAD,CAAOrF,UAAU,aAAasF,IAAI,YAAlC,SACGzE,EAAE,iBAEL,cAAC,IAAD,CACE0E,aAAY,UACVrE,EAAMoF,aAAaC,QACjB,SAACC,GAAD,OACEA,EAAG9L,SACY,SAAdgG,EAAA,OACGE,QADH,IACGA,OADH,EACGA,EAAa+C,UADhB,OAEG/C,QAFH,IAEGA,OAFH,EAEGA,EAAatG,cANX,QAOL,GAEPqH,QAASA,EACTrH,GAAG,YACHmL,KAAK,YACLC,OAAQ,kBAAG3B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEEzJ,GAAG,YACHmM,MAAOC,IACPnB,aAAcrE,EAAMoF,aAAaC,QAC/B,SAACC,GAAD,OACEA,EAAG9L,SACY,SAAdgG,EAAA,OACGE,QADH,IACGA,OADH,EACGA,EAAa+C,UADhB,OAEG/C,QAFH,IAEGA,OAFH,EAEGA,EAAatG,OAKrBqM,WAA0B,QAAdjG,EACZkG,QAAS1F,EAAMoF,aACZC,QAAO,SAACC,GAAD,aAAQA,EAAG9L,SAAH,UAAawG,EAAMsE,oBAAnB,aAAa,EAAoBlL,OAChDuM,KAAI,SAACC,GAAD,mBAAC,eACDA,GADA,IAGHC,MAAOlG,EAAEiG,EAAKtD,YAElBxD,UAAWgH,IAAW,eAAgB,CACpC,aAAgD,QAAlC,UAAA9F,EAAMsE,oBAAN,eAAoB7B,aAEpCsD,gBAAgB,mBAMtB/E,IACA,eAAC,IAAD,CAAKkD,GAAI,EAAGC,GAAI,GAAhB,UACE,eAAC,IAAD,CAAOrF,UAAU,aAAasF,IAAI,UAAlC,UACGzE,EAAE,cACH,sBAAMb,UAAU,cAAhB,kBAEF,cAAC,IAAD,CACEuF,aAAY,oBAAErE,EAAMsE,oBAAR,aAAE,EAAoB0B,iBAAtB,QAAmC,GAC/CvF,QAASA,EACTrH,GAAG,YACHmL,KAAK,YACLC,OAAQ,gBAAG3B,EAAH,EAAGA,MAAH,OACN,cAAC,IAAD,2BACMA,GADN,IAEE/D,UACEgC,EAAOkF,UACH,0BACA,eAEN5M,GAAG,YACHqL,QAAS3D,EAAOkF,YAAa,WAOvC,eAAC,IAAD,CAAK9B,GAAI,GAAIC,GAAI,GAAjB,UACE,cAAC,IAAD,CAAOrF,UAAU,aAAasF,IAAI,cAAlC,SACGzE,EAAE,iBAEL,cAAC,IAAD,CACE0E,aAAY,oBAAErE,EAAMsE,oBAAR,aAAE,EAAoB2B,mBAAtB,QAAqC,GACjDxF,QAASA,EACTrH,GAAG,cACHmL,KAAK,cACLC,OAAQ,gBAAG3B,EAAH,EAAGA,MAAH,OACN,cAAC,EAAD,2BACMA,GADN,IAEE/D,UAAU,eACV1F,GAAG,uBAMX,eAAC,IAAD,CAAK+K,GAAI,GAAIrF,UAAU,yBAAvB,UACE,cAAC,IAAD,CAAQiF,KAAK,SAASjF,UAAU,OAAOuE,MAAM,UAA7C,SACG1D,EAAE,YAEL,cAAC,IAAD,CACEoE,KAAK,QACLV,MAAM,YACNwB,SAAO,EACPC,QAAS,WACPjD,KACApC,EAAa,OACbH,GAAQ,IAPZ,SAUGK,EAAE,0BAQf,eAAC,IAAD,CACEuG,UAAW5E,GACXS,OAAQP,GACRQ,OAAQN,GAHV,UAKE,eAAC,IAAD,CAAiB5C,UAAU,iBAAiBkD,OAAQN,GAApD,UACG/B,EAAE,UADL,IACiBA,EAAE,QACjB,cAAC,IAAOiF,OAAR,CACE9F,UAAU,YACVuE,MAAM,UACNwB,QAA0B,YAAjB3D,GACT4D,QAAS,SAACnG,GACRwC,GAAgB,YALpB,0BAUA,cAAC,IAAOyD,OAAR,CACEvB,MAAM,UACNwB,QAA0B,aAAjB3D,GACT4D,QAAS,SAACnG,GACRwC,GAAgB,aAJpB,8BAUF,cAAC,IAAD,CACErC,UAAWgH,IAAW,CACpB,2BACsB,UAApBxE,IAAmD,QAApBA,KAHrC,SAMoB,YAAjBJ,GACC,cAAC,UAAD,CACEG,QAASO,GACTH,cAAeA,KAIjB,cAAC,UAAD,CACEJ,QAASO,GACTH,cAAeA","file":"static/js/74.5cc9fc90.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"onChange\", \"maxRows\", \"minRows\", \"style\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_debounce as debounce, unstable_useForkRef as useForkRef, unstable_useEnhancedEffect as useEnhancedEffect, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction getStyleValue(value) {\n  return parseInt(value, 10) || 0;\n}\nconst styles = {\n  shadow: {\n    // Visibility needed to hide the extra text area on iPads\n    visibility: 'hidden',\n    // Remove from the content flow\n    position: 'absolute',\n    // Ignore the scrollbar width\n    overflow: 'hidden',\n    height: 0,\n    top: 0,\n    left: 0,\n    // Create a new layer, increase the isolation of the computed values\n    transform: 'translateZ(0)'\n  }\n};\nfunction isEmpty(obj) {\n  return obj === undefined || obj === null || Object.keys(obj).length === 0 || obj.outerHeightStyle === 0 && !obj.overflow;\n}\n\n/**\n *\n * Demos:\n *\n * - [Textarea Autosize](https://mui.com/base-ui/react-textarea-autosize/)\n * - [Textarea Autosize](https://mui.com/material-ui/react-textarea-autosize/)\n *\n * API:\n *\n * - [TextareaAutosize API](https://mui.com/base-ui/react-textarea-autosize/components-api/#textarea-autosize)\n */\nconst TextareaAutosize = /*#__PURE__*/React.forwardRef(function TextareaAutosize(props, forwardedRef) {\n  const {\n      onChange,\n      maxRows,\n      minRows = 1,\n      style,\n      value\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    current: isControlled\n  } = React.useRef(value != null);\n  const inputRef = React.useRef(null);\n  const handleRef = useForkRef(forwardedRef, inputRef);\n  const shadowRef = React.useRef(null);\n  const renders = React.useRef(0);\n  const [state, setState] = React.useState({\n    outerHeightStyle: 0\n  });\n  const getUpdatedState = React.useCallback(() => {\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    const computedStyle = containerWindow.getComputedStyle(input);\n\n    // If input's width is shrunk and it's not visible, don't sync height.\n    if (computedStyle.width === '0px') {\n      return {\n        outerHeightStyle: 0\n      };\n    }\n    const inputShallow = shadowRef.current;\n    inputShallow.style.width = computedStyle.width;\n    inputShallow.value = input.value || props.placeholder || 'x';\n    if (inputShallow.value.slice(-1) === '\\n') {\n      // Certain fonts which overflow the line height will cause the textarea\n      // to report a different scrollHeight depending on whether the last line\n      // is empty. Make it non-empty to avoid this issue.\n      inputShallow.value += ' ';\n    }\n    const boxSizing = computedStyle.boxSizing;\n    const padding = getStyleValue(computedStyle.paddingBottom) + getStyleValue(computedStyle.paddingTop);\n    const border = getStyleValue(computedStyle.borderBottomWidth) + getStyleValue(computedStyle.borderTopWidth);\n\n    // The height of the inner content\n    const innerHeight = inputShallow.scrollHeight;\n\n    // Measure height of a textarea with a single row\n    inputShallow.value = 'x';\n    const singleRowHeight = inputShallow.scrollHeight;\n\n    // The height of the outer content\n    let outerHeight = innerHeight;\n    if (minRows) {\n      outerHeight = Math.max(Number(minRows) * singleRowHeight, outerHeight);\n    }\n    if (maxRows) {\n      outerHeight = Math.min(Number(maxRows) * singleRowHeight, outerHeight);\n    }\n    outerHeight = Math.max(outerHeight, singleRowHeight);\n\n    // Take the box sizing into account for applying this value as a style.\n    const outerHeightStyle = outerHeight + (boxSizing === 'border-box' ? padding + border : 0);\n    const overflow = Math.abs(outerHeight - innerHeight) <= 1;\n    return {\n      outerHeightStyle,\n      overflow\n    };\n  }, [maxRows, minRows, props.placeholder]);\n  const updateState = (prevState, newState) => {\n    const {\n      outerHeightStyle,\n      overflow\n    } = newState;\n    // Need a large enough difference to update the height.\n    // This prevents infinite rendering loop.\n    if (renders.current < 20 && (outerHeightStyle > 0 && Math.abs((prevState.outerHeightStyle || 0) - outerHeightStyle) > 1 || prevState.overflow !== overflow)) {\n      renders.current += 1;\n      return {\n        overflow,\n        outerHeightStyle\n      };\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (renders.current === 20) {\n        console.error(['MUI: Too many re-renders. The layout is unstable.', 'TextareaAutosize limits the number of renders to prevent an infinite loop.'].join('\\n'));\n      }\n    }\n    return prevState;\n  };\n  const syncHeight = React.useCallback(() => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n    setState(prevState => {\n      return updateState(prevState, newState);\n    });\n  }, [getUpdatedState]);\n  const syncHeightWithFlushSync = () => {\n    const newState = getUpdatedState();\n    if (isEmpty(newState)) {\n      return;\n    }\n\n    // In React 18, state updates in a ResizeObserver's callback are happening after the paint which causes flickering\n    // when doing some visual updates in it. Using flushSync ensures that the dom will be painted after the states updates happen\n    // Related issue - https://github.com/facebook/react/issues/24331\n    ReactDOM.flushSync(() => {\n      setState(prevState => {\n        return updateState(prevState, newState);\n      });\n    });\n  };\n  React.useEffect(() => {\n    const handleResize = debounce(() => {\n      renders.current = 0;\n\n      // If the TextareaAutosize component is replaced by Suspense with a fallback, the last\n      // ResizeObserver's handler that runs because of the change in the layout is trying to\n      // access a dom node that is no longer there (as the fallback component is being shown instead).\n      // See https://github.com/mui/material-ui/issues/32640\n      if (inputRef.current) {\n        syncHeightWithFlushSync();\n      }\n    });\n    let resizeObserver;\n    const input = inputRef.current;\n    const containerWindow = ownerWindow(input);\n    containerWindow.addEventListener('resize', handleResize);\n    if (typeof ResizeObserver !== 'undefined') {\n      resizeObserver = new ResizeObserver(handleResize);\n      resizeObserver.observe(input);\n    }\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener('resize', handleResize);\n      if (resizeObserver) {\n        resizeObserver.disconnect();\n      }\n    };\n  });\n  useEnhancedEffect(() => {\n    syncHeight();\n  });\n  React.useEffect(() => {\n    renders.current = 0;\n  }, [value]);\n  const handleChange = event => {\n    renders.current = 0;\n    if (!isControlled) {\n      syncHeight();\n    }\n    if (onChange) {\n      onChange(event);\n    }\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"textarea\", _extends({\n      value: value,\n      onChange: handleChange,\n      ref: handleRef\n      // Apply the rows prop to get a \"correct\" first SSR paint\n      ,\n      rows: minRows,\n      style: _extends({\n        height: state.outerHeightStyle,\n        // Need a large enough difference to allow scrolling.\n        // This prevents infinite rendering loop.\n        overflow: state.overflow ? 'hidden' : undefined\n      }, style)\n    }, other)), /*#__PURE__*/_jsx(\"textarea\", {\n      \"aria-hidden\": true,\n      className: props.className,\n      readOnly: true,\n      ref: shadowRef,\n      tabIndex: -1,\n      style: _extends({}, styles.shadow, style, {\n        paddingTop: 0,\n        paddingBottom: 0\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Maximum number of rows to display.\n   */\n  maxRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Minimum number of rows to display.\n   * @default 1\n   */\n  minRows: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n  /**\n   * @ignore\n   */\n  placeholder: PropTypes.string,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * @ignore\n   */\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string])\n} : void 0;\nexport default TextareaAutosize;","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport { Check, X } from \"react-feather\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  Offcanvas,\r\n  OffcanvasHeader,\r\n  OffcanvasBody,\r\n  InputGroup\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors, sortedObject } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport classnames from \"classnames\"\r\nimport { TextareaAutosize } from \"@mui/material\"\r\nimport { renderIcon } from \"../store/my_menu\"\r\nimport IconsFeather from \"../icons/feather\"\r\nimport IconsMaterial from \"../icons/material\"\r\n\r\nconst CustomLabel = ({ htmlFor }) => {\r\n  return (\r\n    <Label className=\"form-check-label\" htmlFor={htmlFor}>\r\n      <span className=\"switch-icon-left\">\r\n        <Check size={14} />\r\n      </span>\r\n      <span className=\"switch-icon-right\">\r\n        <X size={14} />\r\n      </span>\r\n    </Label>\r\n  )\r\n}\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    setValue,\r\n    getValues,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const [isSeparator, setIsSeparator] = useState(currentData.is_separator)\r\n  const [iconCategory, setIconCategory] = useState(\"feather\")\r\n  const [icon, setIcon] = useState(currentData?.icon)\r\n\r\n  const [canvasPlacement, setCanvasPlacement] = useState(\"start\")\r\n  const [canvasOpen, setCanvasOpen] = useState(false)\r\n  const toggleCanvasStart = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"start\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const toggleCanvasBottom = () => {\r\n    setIconCategory(\"feather\")\r\n    setCanvasPlacement(\"bottom\")\r\n    setCanvasOpen(!canvasOpen)\r\n  }\r\n\r\n  const setIconBefore = (icon) => {\r\n    setValue(\"icon\", icon)\r\n    setIcon(icon)\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    // if (formState === \"edit\") {\r\n    //   const storeData = { ...sortedObject(store.selectedData) }\r\n    //   delete storeData[\"id\"]\r\n    //   for (let key in storeData) {\r\n    //     if (!(key in data)) delete storeData[key]\r\n    //   }\r\n    //   // console.log(JSON.stringify(sortedObject(storeData)))\r\n    //   // console.log(JSON.stringify(sortedObject(data)))\r\n    //   return (\r\n    //     JSON.stringify(sortedObject(storeData)) !==\r\n    //     JSON.stringify(sortedObject(data))\r\n    //   )\r\n    // } else {\r\n    //   return true\r\n    // }\r\n\r\n    return true\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    // console.log(data)\r\n    data[\"is_separator\"] = isSeparator\r\n    data[\"icon\"] = icon\r\n    // console.log(data)\r\n    if (data.parent_id) {\r\n      if (data.parent_id.value >= 9000) {\r\n        data[\"id_app\"] = data.parent_id.id_app\r\n        data[\"parent_id\"] = null\r\n      } else {\r\n        data[\"parent_id\"] = data.parent_id.value\r\n      }\r\n    }\r\n    // console.log(data)\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null\r\n        }) ||\r\n        data[\"parent_id\"] === null\r\n      ) {\r\n        if (!isSeparator && data[\"routePath\"] === \"\") {\r\n          for (const key in data) {\r\n            if (data[key] !== null && data[key]?.length === 0) {\r\n              setError(key, {\r\n                type: \"manual\"\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n          dispatch(putData(data)).then((res) => {\r\n            // console.log(res)\r\n            if (res.meta.requestStatus === \"fulfilled\") {\r\n              setShow(!show)\r\n              toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.success.main,\r\n                  border: `1px solid ${colors.success.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.success.main\r\n                }\r\n              })\r\n              if (detailPage) {\r\n                dispatch(getDataById(id))\r\n              }\r\n            } else if (res.meta.requestStatus === \"rejected\") {\r\n              toast.error(res.payload.message, {\r\n                style: {\r\n                  padding: \"16px\",\r\n                  color: colors.danger.main,\r\n                  border: `1px solid ${colors.danger.main}`\r\n                },\r\n                iconTheme: {\r\n                  primary: colors.danger.main\r\n                }\r\n              })\r\n            }\r\n          })\r\n        }\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    // console.log(data)\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null\r\n      })\r\n    ) {\r\n      if (!isSeparator && data[\"routePath\"] === \"\") {\r\n        for (const key in data) {\r\n          if (data[key] !== null && data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n\r\n        // console.log(currentData, data)\r\n\r\n        if (!currentData.is_app_header) {\r\n          data[\"parent_id\"] = currentData.id\r\n        } else {\r\n          data[\"parent_id\"] = null\r\n        }\r\n\r\n        data[\"id_app\"] = currentData.id_app\r\n        data[\"is_separator\"] = isSeparator\r\n        data[\"icon\"] = icon\r\n        // console.log(data)\r\n\r\n        dispatch(postData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  const changeSeparator = (data) => {\r\n    // console.log(data.target.checked)\r\n    setIsSeparator(data.target.checked)\r\n    if (data.target.checked) {\r\n    }\r\n  }\r\n\r\n  // const changeParentId = (data) => {\r\n  //   console.log(data)\r\n\r\n  //   if (data.is_app_header) {\r\n  //     setValue(\"parent_id\", { value: null })\r\n  //   } else {\r\n  //     setValue(\"parent_id\", data)\r\n  //   }\r\n\r\n  //   // if (data?.routePath) {\r\n  //   //   setValue(\"parent_id\", data.id)\r\n  //   //   setValue(\"routePath\", `${data?.routePath}/`)\r\n  //   // }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   console.log(store.dataDropdown)\r\n  // }, [])\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add Sub\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" && (\r\n              <p className=\"mb-1\">\r\n                {t(\"Child for \")} {currentData ? t(currentData.title) : \"\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"title\">\r\n                  {t(\"Title\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.title ?? \"\"}\r\n                  control={control}\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.title\r\n                          ? \"form-control is-invalid\"\r\n                          : \"form-control\"\r\n                      }\r\n                      id=\"title\"\r\n                      invalid={errors.title && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={4} xs={8} className=\"text-center\">\r\n                  <Label className=\"form-label\" for=\"icon\">\r\n                    {t(\"Icon\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <div>\r\n                    {/* <Button.Ripple\r\n                      className=\"btn-icon\"\r\n                      outline\r\n                      color=\"primary\"\r\n                      size=\"sm\"\r\n                      onClick={toggleCanvasBottom}\r\n                    >\r\n                      {renderIcon(icon, \"14\")}\r\n                    </Button.Ripple> */}\r\n                  </div>\r\n                  <Controller\r\n                    defaultValue={store.selectedData?.icon ?? \"\"}\r\n                    control={control}\r\n                    id=\"icon\"\r\n                    name=\"icon\"\r\n                    render={({ field }) => (\r\n                      <InputGroup>\r\n                        <Input\r\n                          {...field}\r\n                          className={\r\n                            errors.icon\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control\"\r\n                          }\r\n                          onChange={(event) => {\r\n                            const val = event.target.value\r\n                            field.onChange(val)\r\n                            setIcon(val)\r\n                          }}\r\n                          id=\"icon\"\r\n                          invalid={errors.icon && true}\r\n                        />\r\n                        <Button.Ripple\r\n                          className=\"btn-icon\"\r\n                          outline\r\n                          color=\"secondary\"\r\n                          onClick={toggleCanvasBottom}\r\n                        >\r\n                          {renderIcon(\r\n                            getValues()[\"icon\"] ??\r\n                              icon ??\r\n                              \"material:highlight_alt\",\r\n                            \"fw-bold\",\r\n                            16\r\n                          )}\r\n                        </Button.Ripple>\r\n                      </InputGroup>\r\n                    )}\r\n                  />\r\n                </Col>\r\n              )}\r\n\r\n              <Col className=\" d-grid justify-content-center\" md={2} xs={4}>\r\n                <Label className=\"form-label\" for=\"is_separator\">\r\n                  {t(\"Separator\")}\r\n                </Label>\r\n                <div\r\n                  style={{ marginTop: \"4px\" }}\r\n                  className=\"form-switch form-check-primary mx-auto\"\r\n                >\r\n                  <Input\r\n                    type=\"switch\"\r\n                    defaultChecked={isSeparator}\r\n                    onChange={(data) => {\r\n                      changeSeparator(data)\r\n                    }}\r\n                    id=\"icon-primary\"\r\n                    name=\"icon-primary\"\r\n                  />\r\n                  <CustomLabel htmlFor=\"icon-primary\" />\r\n                </div>\r\n              </Col>\r\n\r\n              <Col md={6} xs={12}>\r\n                <Label className=\"form-label\" for=\"parent_id\">\r\n                  {t(\"Parent Menu\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={\r\n                    store.dataDropdown.filter(\r\n                      (el) =>\r\n                        el.value ===\r\n                        (formState === \"edit\"\r\n                          ? currentData?.parent_id\r\n                          : currentData?.id)\r\n                    ) ?? \"\"\r\n                  }\r\n                  control={control}\r\n                  id=\"parent_id\"\r\n                  name=\"parent_id\"\r\n                  render={({ field }) => (\r\n                    <Select\r\n                      {...field}\r\n                      id=\"parent_id\"\r\n                      theme={selectThemeColors}\r\n                      defaultValue={store.dataDropdown.filter(\r\n                        (el) =>\r\n                          el.value ===\r\n                          (formState === \"edit\"\r\n                            ? currentData?.parent_id\r\n                            : currentData?.id)\r\n                      )}\r\n                      // onChange={(data) => {\r\n                      //   changeParentId(data)\r\n                      // }}\r\n                      isDisabled={formState === \"add\"}\r\n                      options={store.dataDropdown\r\n                        .filter((el) => el.value !== store.selectedData?.id)\r\n                        .map((item) => ({\r\n                          ...item,\r\n                          // id_app: item.id_app,\r\n                          label: t(item.title)\r\n                        }))}\r\n                      className={classnames(\"react-select\", {\r\n                        \"is-invalid\": store.selectedData?.parent_id === null\r\n                      })}\r\n                      classNamePrefix=\"select\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              {!isSeparator && (\r\n                <Col md={6} xs={12}>\r\n                  <Label className=\"form-label\" for=\"subject\">\r\n                    {t(\"Route Path\")}\r\n                    <span className=\"text-danger\">*</span>\r\n                  </Label>\r\n                  <Controller\r\n                    defaultValue={store.selectedData?.routePath ?? \"\"}\r\n                    control={control}\r\n                    id=\"routePath\"\r\n                    name=\"routePath\"\r\n                    render={({ field }) => (\r\n                      <Input\r\n                        {...field}\r\n                        className={\r\n                          errors.routePath\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control\"\r\n                        }\r\n                        id=\"routePath\"\r\n                        invalid={errors.routePath && true}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Col>\r\n              )}\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Description\")}\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.description ?? \"\"}\r\n                  control={control}\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  render={({ field }) => (\r\n                    <TextareaAutosize\r\n                      {...field}\r\n                      className=\"form-control\"\r\n                      id=\"description\"\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n\r\n      <Offcanvas\r\n        direction={canvasPlacement}\r\n        isOpen={canvasOpen}\r\n        toggle={toggleCanvasStart}\r\n      >\r\n        <OffcanvasHeader className=\"mb-1 mt-1 me-1\" toggle={toggleCanvasStart}>\r\n          {t(\"Select\")} {t(\"Icon\")}\r\n          <Button.Ripple\r\n            className=\"ms-2 me-2\"\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"feather\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"feather\")\r\n            }}\r\n          >\r\n            Feather Icon\r\n          </Button.Ripple>\r\n          <Button.Ripple\r\n            color=\"primary\"\r\n            outline={iconCategory !== \"material\"}\r\n            onClick={(event) => {\r\n              setIconCategory(\"material\")\r\n            }}\r\n          >\r\n            Material Icon\r\n          </Button.Ripple>\r\n        </OffcanvasHeader>\r\n        <OffcanvasBody\r\n          className={classnames({\r\n            \"my-auto mx-0 flex-grow-0\":\r\n              canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n          })}\r\n        >\r\n          {iconCategory === \"feather\" ? (\r\n            <IconsFeather\r\n              setIcon={setIconBefore}\r\n              setCanvasOpen={setCanvasOpen}\r\n            />\r\n          ) : (\r\n            // <IconsFeather setIcon={setIcon} setCanvasOpen={setCanvasOpen} />\r\n            <IconsMaterial\r\n              setIcon={setIconBefore}\r\n              setCanvasOpen={setCanvasOpen}\r\n            />\r\n          )}\r\n          {/* <Button\r\n            color=\"primary\"\r\n            onClick={toggleCanvasStart}\r\n            className={classnames({\r\n              \"mb-1\": canvasPlacement === \"start\" || canvasPlacement === \"end\",\r\n              \"me-1\": canvasPlacement === \"top\" || canvasPlacement === \"bottom\"\r\n            })}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Continue\r\n          </Button>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            onClick={toggleCanvasStart}\r\n            {...(canvasPlacement === \"start\" || canvasPlacement === \"end\"\r\n              ? { block: true }\r\n              : {})}\r\n          >\r\n            Cancel\r\n          </Button> */}\r\n        </OffcanvasBody>\r\n      </Offcanvas>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n"],"sourceRoot":""}