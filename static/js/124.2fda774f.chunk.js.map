{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/unit/modal/index.js","views/apps/unit/Table.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","ModalAddEdit","show","setShow","detailPage","formState","setFormState","currentData","t","useTranslation","useParams","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","loadingText","setLoadingText","useForm","control","setError","handleSubmit","errors","Loader","className","sortedObject","unordered","keys","sort","reduce","obj","key","handleReset","resetSelectedData","isOpen","toggle","blocking","isLoadingAddEdit","isLoadingDetail","loader","pageTitle","onSubmit","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","getDataById","error","payload","message","danger","length","type","icon","depth","postData","console","log","md","xs","for","defaultValue","name","render","invalid","code","outline","onClick","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","CustomHeader","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","ability","AbilityContext","userData","invoices","getUserData","xl","htmlFor","onChange","width","can","sessionStorage","getItem","e","target","caret","getInvoice","rpt_name","output_type","dataYear","print","as_attachment","par_UNITKEY","par_SAMPLE","List","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","showModal","setShowModal","handleEdit","rowData","detailFromGrid","setDataById","handleCloseModal","revivalBack","neutralizeBack","handleDelete","fire","title","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","a","countSelectedCopy","map","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","columns","dynamicColumns","column","columnName","sortField","fieldName","center","sortable","selector","row","cell","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","tableColumns","useMemo","isLoading","sx","bgcolor","dark","light","animation","height","useEffect","getAlwaysGrid","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget"],"mappings":"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","file":"static/js/124.2fda774f.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"../store\"\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst ModalAddEdit = ({\r\n  show,\r\n  setShow,\r\n  detailPage,\r\n  formState,\r\n  setFormState,\r\n  currentData = null\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [tgl1, setTgl1] = useState(null)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  const Loader = () => {\r\n    return (\r\n      <Fragment>\r\n        <Spinner />\r\n        <CardText className=\"mb-0 mt-1\">{t(loadingText)}...</CardText>\r\n      </Fragment>\r\n    )\r\n  }\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (formState === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            setShow(!show)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n            if (detailPage) {\r\n              dispatch(getDataById(id))\r\n            }\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload?.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      data[\"depth\"] = currentData.depth + 1\r\n      data[\"parent_id\"] = currentData.id\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setShow(!show)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n          if (detailPage) {\r\n            dispatch(getDataById(id))\r\n          }\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleReset = () => {\r\n    dispatch(resetSelectedData())\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={show}\r\n      toggle={() => {\r\n        handleReset()\r\n        setShow(!show)\r\n      }}\r\n      className=\"modal-dialog-centered modal-lg\"\r\n    >\r\n      <UILoader\r\n        blocking={store.isLoadingAddEdit || store.isLoadingDetail}\r\n        loader={<Loader />}\r\n      >\r\n        <ModalHeader\r\n          className=\"bg-transparent\"\r\n          toggle={() => {\r\n            handleReset()\r\n            setShow(!show)\r\n          }}\r\n        ></ModalHeader>\r\n        <ModalBody className=\"px-sm-5 pt-50 pb-5\">\r\n          <div className=\"text-center mb-2\">\r\n            <h2 className=\"mb-1\">\r\n              {formState === \"edit\" ? t(\"Edit\") : t(\"Add\")} {t(pageTitle)}\r\n            </h2>\r\n            {formState !== \"edit\" ? (\r\n              <p>\r\n                Setelah menambahkan data {t(\"Unit\")} baru, maka pastikan logout\r\n                dulu akun anda.\r\n              </p>\r\n            ) : null}\r\n          </div>\r\n          <Form\r\n            onSubmit={\r\n              formState === \"edit\"\r\n                ? handleSubmit(updateDataToApi)\r\n                : handleSubmit(postDataToApi)\r\n            }\r\n          >\r\n            <Row className=\"gy-1 pt-75\">\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"name\">\r\n                  {t(\"Name\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.name ?? \"\"}\r\n                  control={control}\r\n                  id=\"name\"\r\n                  name=\"name\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.name ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"name\"\r\n                      invalid={errors.name && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col md={12} xs={12}>\r\n                <Label className=\"form-label\" for=\"description\">\r\n                  {t(\"Code\")}\r\n                  <span className=\"text-danger\">*</span>\r\n                </Label>\r\n                <Controller\r\n                  defaultValue={store.selectedData?.code ?? \"\"}\r\n                  control={control}\r\n                  id=\"code\"\r\n                  name=\"code\"\r\n                  render={({ field }) => (\r\n                    <Input\r\n                      {...field}\r\n                      className={\r\n                        errors.code ? \"form-control is-invalid\" : \"form-control\"\r\n                      }\r\n                      id=\"code\"\r\n                      invalid={errors.code && true}\r\n                    />\r\n                  )}\r\n                />\r\n              </Col>\r\n\r\n              <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n                <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n                  {t(\"Submit\")}\r\n                </Button>\r\n                <Button\r\n                  type=\"reset\"\r\n                  color=\"secondary\"\r\n                  outline\r\n                  onClick={() => {\r\n                    handleReset()\r\n                    setFormState(\"add\")\r\n                    setShow(false)\r\n                  }}\r\n                >\r\n                  {t(\"Cancel\")}\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </ModalBody>\r\n      </UILoader>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default ModalAddEdit\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  dynamicColumns,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\n\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n\r\n                {/* <DropdownItem className=\"w-100\">\r\n                  <Copy className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Copy</span>\r\n                </DropdownItem> */}\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown>\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const columns = [\r\n    ...dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}