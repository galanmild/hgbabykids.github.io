{"version":3,"sources":["views/apps/permission/detail/index.js","views/apps/permission/store/index.js","views/apps/permission/Form.js"],"names":["DetailPage","t","useTranslation","useParams","id","pageType","dispatch","useDispatch","store","useSelector","state","storeName","colors","useContext","ThemeColors","useState","setLoadingText","navigate","useNavigate","active","setActive","dynamicComponents","setDynamicComponents","sortedObject","unordered","Object","keys","sort","reduce","obj","key","updateDataToApi","data","storeData","selectedData","JSON","stringify","countChanges","values","every","field","pageTitle","putData","then","res","meta","requestStatus","toast","success","style","padding","color","main","border","iconTheme","primary","error","payload","message","danger","length","setError","type","icon","postDataToApi","postData","handleReset","resetSelectedData","useEffect","isLoadingDetail","parseInt","getDataById","componentsImport","dynamicFormRelation","extraCrud","i","crudName","path_name","MyComponent","lazy","lookupMode","lookupMode_defaultFilter","replaceAll","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","lookupMode_isM2MDefValFromGrid","className","blocking","loader","undefined","xl","lg","xs","order","md","size","formState","pills","map","item","index","onClick","tab","crudLabel","activeTab","tabId","crudDescription","tag","to","axios","useJwt","ssoAxiosInterceptor","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","deleteSelection","dynamicColumns","dynamicColumnsFilter","filterLabel","fieldName","dynamicForm","getSummaryData","createAsyncThunk","params","forEach","get","response","getDataList","total","rejectWithValue","a","user","getState","post","resetData","put","deleteData","delete","deleteSelectedRowData","setDataById","rowData","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","fulfilled","action","rejected","value","label","title","FormAddEdit","useForm","control","handleSubmit","errors","onSubmit","for","defaultValue","render","invalid","description","subject","outline"],"mappings":"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","file":"static/js/65.20e8d130.chunk.js","sourcesContent":["/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  lazy,\r\n  Suspense\r\n} from \"react\"\r\nimport { useParams, Link, useNavigate } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Alert,\r\n  Card,\r\n  CardBody,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText,\r\n  CardHeader,\r\n  CardTitle,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  TabContent,\r\n  TabPane\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById,\r\n  extraCrud\r\n} from \"../store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport FormAddEdit from \"../Form\"\r\nimport { MenuOpen, Link as LinkIcon } from \"@mui/icons-material\"\r\n\r\nconst DetailPage = () => {\r\n  const { t } = useTranslation()\r\n  const { id, pageType } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const navigate = useNavigate()\r\n  const [active, setActive] = useState(\"1\")\r\n  const toggleTab = (tab) => {\r\n    if (active !== tab) {\r\n      setActive(tab)\r\n    }\r\n  }\r\n\r\n  const allStore = useSelector((state) => state)\r\n  const [dynamicComponents, setDynamicComponents] = useState({})\r\n\r\n  function sortedObject(unordered) {\r\n    return Object.keys(unordered)\r\n      .sort()\r\n      .reduce((obj, key) => {\r\n        obj[key] = unordered[key]\r\n        return obj\r\n      }, {})\r\n  }\r\n\r\n  const countChanges = (data) => {\r\n    if (pageType === \"edit\") {\r\n      const storeData = { ...sortedObject(store.selectedData) }\r\n      delete storeData[\"id\"]\r\n      for (let key in storeData) {\r\n        if (!(key in data)) delete storeData[key]\r\n      }\r\n      // console.log(JSON.stringify(sortedObject(storeData)))\r\n      // console.log(JSON.stringify(sortedObject(data)))\r\n      return (\r\n        JSON.stringify(sortedObject(storeData)) !==\r\n        JSON.stringify(sortedObject(data))\r\n      )\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  const updateDataToApi = (data) => {\r\n    if (countChanges(data)) {\r\n      if (\r\n        Object.values(data).every((field) => {\r\n          return field !== null && field !== \"\"\r\n        })\r\n      ) {\r\n        setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} ${t(\"Detail\")} Data`)\r\n        dispatch(putData(data)).then((res) => {\r\n          // console.log(res)\r\n          if (res.meta.requestStatus === \"fulfilled\") {\r\n            navigate(-1)\r\n            toast.success(`${t(\"Successfully Updated\")} ${t(pageTitle)}`, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            })\r\n          } else if (res.meta.requestStatus === \"rejected\") {\r\n            toast.error(res.payload.message, {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.danger.main,\r\n                border: `1px solid ${colors.danger.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.danger.main\r\n              }\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        for (const key in data) {\r\n          if (data[key]?.length === 0) {\r\n            setError(key, {\r\n              type: \"manual\"\r\n            })\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      toast(`${t(\"You haven't changed anything\")}`, { icon: \"👏\" })\r\n    }\r\n  }\r\n\r\n  const postDataToApi = (data) => {\r\n    if (\r\n      Object.values(data).every((field) => {\r\n        return field !== null && field !== \"\"\r\n      })\r\n    ) {\r\n      setLoadingText(`${t(`Creating a New ${pageTitle}`)}`)\r\n      dispatch(postData(data)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          navigate(-1)\r\n          toast.success(`${t(\"Successfully Created\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    } else {\r\n      for (const key in data) {\r\n        if (data[key] !== null && data[key]?.length === 0) {\r\n          setError(key, {\r\n            type: \"manual\"\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleReset() {\r\n    dispatch(resetSelectedData())\r\n    // setpageType(\"add\")\r\n    return navigate(-1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // console.log(pageType)\r\n    // if (!store.isLoadingDetail) {\r\n    // console.log(store.selectedData?.id !== parseInt(id))\r\n    if (\r\n      pageType === \"edit\" &&\r\n      !store.isLoadingDetail &&\r\n      (!store.selectedData || store.selectedData?.id !== parseInt(id))\r\n    ) {\r\n      // setLoadingText(\r\n      //   `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      // )\r\n      // setLoading(true)\r\n      dispatch(getDataById(id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          // setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          // setLoading(false)\r\n          // setShowModal(true)\r\n        }\r\n      })\r\n\r\n      // DYNAMIC IMPORT COMPONENTS\r\n      let componentsImport = {}\r\n      const dynamicFormRelation = extraCrud\r\n      for (let i = 0; i < dynamicFormRelation.length; i++) {\r\n        const crudName = dynamicFormRelation[i][\"crudName\"]\r\n        const crudLabel = dynamicFormRelation[i][\"crudLabel\"]\r\n        const path_name = dynamicFormRelation[i][\"crudName\"]\r\n\r\n        ////////////OTHERS CRUD\r\n        const MyComponent = lazy(() => import(`../../${path_name}`))\r\n        componentsImport[`${path_name}_comp`] = (\r\n          <Fragment>\r\n            <MyComponent\r\n              key={`extraCrud_${crudName}`}\r\n              lookupMode={true}\r\n              lookupMode_defaultFilter={{\r\n                [`filter_${storeName.replaceAll(\"apps_\", \"id_\")}`]:\r\n                  parseInt(id)\r\n              }}\r\n              lookupMode_fieldName={crudName}\r\n              lookupMode_dropdown={false}\r\n              lookupMode_isMulti={null}\r\n              lookupMode_onChange={null}\r\n              lookupMode_defaultValue={null}\r\n              lookupMode_isM2MDefValFromGrid={null}\r\n            />\r\n          </Fragment>\r\n        )\r\n      }\r\n\r\n      setDynamicComponents(componentsImport)\r\n    }\r\n    // }\r\n  }, [dispatch, store.selectedData])\r\n\r\n  return pageType === \"edit\" ? (\r\n    !store.isLoadingDetail ? (\r\n      store.selectedData !== null && store.selectedData !== undefined ? (\r\n        <div className=\"app-user-view\">\r\n          <Row>\r\n            <Col xl=\"5\" lg=\"6\" xs={{ order: 1 }} md={{ order: 0, size: 6 }}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <h2>\r\n                    {t(\"Edit\")} {t(pageTitle)}\r\n                  </h2>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <FormAddEdit\r\n                    formState=\"edit\"\r\n                    updateDataToApi={updateDataToApi}\r\n                    postDataToApi={postDataToApi}\r\n                    handleReset={handleReset}\r\n                  />\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col xl=\"7\" lg=\"7\" xs={{ order: 0 }} md={{ order: 1, size: 7 }}>\r\n              <Nav pills className=\"mb-2\">\r\n                {extraCrud.map((item, index) => {\r\n                  const path_name = item.crudName\r\n                  return (\r\n                    <NavItem key={`navItem_${index + 1}`}>\r\n                      <NavLink\r\n                        active={active === `${index + 1}`}\r\n                        onClick={() => toggleTab(`${index + 1}`)}\r\n                      >\r\n                        <MenuOpen className=\"font-medium-3 me-50\" />\r\n                        <span className=\"fw-bold\">{t(item.crudLabel)}</span>\r\n                      </NavLink>\r\n                    </NavItem>\r\n                  )\r\n                })}\r\n              </Nav>\r\n              <TabContent activeTab={active}>\r\n                {extraCrud.map((item, index) => {\r\n                  const path_name = item.crudName\r\n                  return (\r\n                    <TabPane\r\n                      key={`tabPane_${index + 1}`}\r\n                      tabId={`${index + 1}`}\r\n                    >\r\n                      <Card>\r\n                        {item.crudDescription && (\r\n                          <CardHeader>\r\n                            <CardTitle tag=\"h4\">\r\n                              {t(item.crudDescription)}\r\n                            </CardTitle>\r\n                          </CardHeader>\r\n                        )}\r\n                        <CardBody className=\"pt-1\">\r\n                          {dynamicComponents[`${path_name}_comp`]}\r\n                        </CardBody>\r\n                      </Card>\r\n                    </TabPane>\r\n                  )\r\n                })}\r\n              </TabContent>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <Alert color=\"danger\">\r\n          <h4 className=\"alert-heading\">{t(\"User not found\")}</h4>\r\n          <div className=\"alert-body\">\r\n            {t(\"User with id\")}: {id}{\" \"}\r\n            {t(\"doesn't exist. Check list of all Users\")}:{\" \"}\r\n            <Link to=\"/apps/user/list\">{t(\"Users List\")}</Link>\r\n          </div>\r\n        </Alert>\r\n      )\r\n    ) : (\r\n      <Fragment>\r\n        <div className=\"app-user-view\">\r\n          <UILoader\r\n            className=\"mt-5\"\r\n            blocking={store.isLoadingDetail}\r\n            loader={<Loader />}\r\n          ></UILoader>\r\n        </div>\r\n      </Fragment>\r\n    )\r\n  ) : (\r\n    <div className=\"app-user-view\">\r\n      <Row>\r\n        <Col xl=\"12\" lg=\"12\" xs={{ order: 1 }} md={{ order: 0, size: 5 }}>\r\n          <Card>\r\n            <CardHeader>\r\n              <h2>\r\n                {t(\"Add\")} {t(pageTitle)}\r\n              </h2>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <FormAddEdit\r\n                formState=\"add\"\r\n                updateDataToApi={updateDataToApi}\r\n                postDataToApi={postDataToApi}\r\n                handleReset={handleReset}\r\n              />\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\nexport default DetailPage\r\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"Permission\" ////\r\nexport const storeName = \"apps_permission\" ////\r\nexport const endpointName = \"api/permission\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = true ////\r\nexport const getApiAfterPost = true ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = false //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\nexport const deleteSelection = false\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = []\r\n\r\n///////DYNAMIC FILTERS FOR TABLE\r\nexport const dynamicColumnsFilter = [\r\n  {\r\n    filterLabel: \"Role\",\r\n    fieldName: \"id_role\"\r\n  }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const extraCrud = [\r\n  {\r\n    crudName: \"permission_menu\",\r\n    crudLabel: \"Permission to Menu\"\r\n  },\r\n  {\r\n    crudName: \"permission_endpoint\",\r\n    crudLabel: \"Permission to Endpoint\"\r\n    // crudDescription: \"Permission to Endpoint\"\r\n  }\r\n]\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: item.title,\r\n            post: false,\r\n            put: false,\r\n            delete: false,\r\n            get: false\r\n          }))\r\n          // state.selectedData = {\r\n          //   value: action.payload.data[0].id,\r\n          //   label: `${action.payload.data[0].KodeSumberDana} ${action.payload.data[0].NamaSumberDana}`\r\n          // }\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","/* eslint-disable multiline-ternary */\r\nimport { Fragment, useContext, useEffect, useState } from \"react\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport toast from \"react-hot-toast\"\r\nimport Cleave from \"cleave.js/react\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Button,\r\n  Input,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalHeader,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport \"moment/locale/id\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport Select from \"react-select\"\r\nimport Flatpickr from \"react-flatpickr\"\r\nimport \"@styles/react/libs/flatpickr/flatpickr.scss\"\r\nimport { Indonesian } from \"flatpickr/dist/l10n/id.js\"\r\nimport { useForm, Controller } from \"react-hook-form\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  postData,\r\n  putData,\r\n  resetSelectedData,\r\n  getDataById\r\n} from \"./store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\n\r\nconst FormAddEdit = ({\r\n  formState,\r\n  updateDataToApi,\r\n  postDataToApi,\r\n  handleReset\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { id } = useParams()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { colors } = useContext(ThemeColors)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const {\r\n    control,\r\n    setError,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm({})\r\n\r\n  return (\r\n    <Form\r\n      onSubmit={\r\n        formState === \"edit\"\r\n          ? handleSubmit(updateDataToApi)\r\n          : handleSubmit(postDataToApi)\r\n      }\r\n    >\r\n      <Row className=\"gy-1 pt-75\">\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"title\">\r\n            {t(\"Title\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.title ?? \"\"}\r\n            control={control}\r\n            id=\"title\"\r\n            name=\"title\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.title ? \"form-control is-invalid\" : \"form-control\"\r\n                }\r\n                id=\"title\"\r\n                invalid={errors.title && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"description\">\r\n            {t(\"Description\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.description ?? \"\"}\r\n            control={control}\r\n            id=\"description\"\r\n            name=\"description\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.description\r\n                    ? \"form-control is-invalid\"\r\n                    : \"form-control\"\r\n                }\r\n                id=\"description\"\r\n                invalid={errors.description && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col md={12} xs={12}>\r\n          <Label className=\"form-label\" for=\"subject\">\r\n            {t(\"Subject\")}\r\n            <span className=\"text-danger\">*</span>\r\n          </Label>\r\n          <Controller\r\n            defaultValue={store.selectedData?.subject ?? \"\"}\r\n            control={control}\r\n            id=\"subject\"\r\n            name=\"subject\"\r\n            render={({ field }) => (\r\n              <Input\r\n                {...field}\r\n                className={\r\n                  errors.subject ? \"form-control is-invalid\" : \"form-control\"\r\n                }\r\n                id=\"subject\"\r\n                invalid={errors.subject && true}\r\n              />\r\n            )}\r\n          />\r\n        </Col>\r\n\r\n        <Col xs={12} className=\"text-center mt-2 pt-50\">\r\n          <Button type=\"submit\" className=\"me-1\" color=\"primary\">\r\n            {t(\"Submit\")}\r\n          </Button>\r\n          <Button type=\"reset\" color=\"secondary\" outline onClick={handleReset}>\r\n            {t(\"Cancel\")}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default FormAddEdit\r\n"],"sourceRoot":""}