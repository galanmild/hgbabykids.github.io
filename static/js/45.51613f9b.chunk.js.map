{"version":3,"sources":["views/apps/endpoint/index.js","views/apps/endpoint/Tree.js","views/apps/endpoint/DropDown.js"],"names":["List","lookupMode","lookupMode_fieldName","lookupMode_dropdown","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","lookupMode_isM2MDefValFromGrid","useTranslation","dispatch","useDispatch","store","useSelector","state","storeName","useState","searchTerm","useEffect","getApiSummaryData","dataSummary","length","isLoadingSummary","getAlwaysGrid","getSummaryData","colors","className","title","pageTitle","data","map","item","index","color","statTitle","icon","baseClassName","fontSize","renderStats","sx","bgcolor","animation","height","width","count_format","count","isTreeLayout","searchString","MySwal","withReactContent","Swal","sidebarOpen","setSidebarOpen","ability","useContext","AbilityContext","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","currentDataAdd","setCurrentDataAdd","searchFocusIndex","setSearchFocusIndex","setSearchFoundCount","ThemeColors","handleDelete","id","fire","text","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","value","deleteData","then","res","meta","requestStatus","toast","success","style","padding","main","border","iconTheme","primary","error","payload","message","danger","toggleSidebar","row","neutralizeBack","handleCloseModal","revivalBack","handleChange","tree","setDataList","updateDataToApi","notReload","nameMsg","putData","removeDefaultValue","dataTree","mainArray","JSON","parse","stringify","forEach","iter","a","includes","Array","isArray","children","isLoading","getDataList","x","blocking","loader","margin","treeData","onChange","onMoveNode","node","nextParentNode","prevPath","prevTreeIndex","nextPath","nextTreeIndex","parent_id","is_app_header","canDrag","args","searchMethod","searchQuery","toLowerCase","indexOf","searchFocusOffset","searchFinishCallback","matches","maxDepth","generateNodeProps","path","fontWeight","paddingLeft","buttons","can","sessionStorage","getItem","Ripple","onClick","e","size","placement","target","rowData","preventDefault","detailFromGrid","setDataById","getDataById","hidden","disabled","defaultChecked","checked","handleChangeLookupMode","type","show","setShow","detailPage","currentData","theme","selectThemeColors","defaultValue","dataDropdown","filter","el","isMulti","options","classnames","selectedData","classNamePrefix"],"mappings":"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","file":"static/js/45.51613f9b.chunk.js","sourcesContent":["import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport Table from \"./Table\"\r\nimport Tree from \"./Tree\"\r\nimport DropDown from \"./DropDown\"\r\nimport { Row, Col, Input } from \"reactstrap\"\r\nimport StatsHorizontal from \"@components/widgets/stats/StatsHorizontal\"\r\nimport { User, UserPlus, UserCheck, UserX } from \"react-feather\"\r\nimport Icon from \"@mui/material/Icon\"\r\nimport AddCardOutlinedIcon from \"@mui/icons-material/AddCardOutlined\"\r\nimport \"./style.scss\"\r\nimport Breadcrumbs from \"@components/breadcrumbs\"\r\n\r\nimport {\r\n  storeName,\r\n  getAlwaysGrid,\r\n  getApiSummaryData,\r\n  getSummaryData,\r\n  pageTitle,\r\n  isTreeLayout\r\n} from \"./store\"\r\nimport { Skeleton } from \"@mui/material\"\r\n\r\nconst List = ({\r\n  lookupMode = false,\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_dropdown = false,\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n\r\n  const handleFilter = (event) => {\r\n    // console.log(\"handleFilter\")\r\n    setSearchTerm(event)\r\n    // debounceFn(event)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (\r\n      getApiSummaryData &&\r\n      (store.dataSummary?.length === 0 ||\r\n        (!store.isLoadingSummary && getAlwaysGrid))\r\n    ) {\r\n      dispatch(getSummaryData({}))\r\n    }\r\n  }, [dispatch, store.dataSummary?.length])\r\n\r\n  const colors = [\r\n    \"primary\",\r\n    \"success\",\r\n    \"warning\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"secondary\"\r\n  ]\r\n\r\n  return !lookupMode_dropdown ? (\r\n    <Fragment>\r\n      <div className=\"content-header row\">\r\n        {!lookupMode && (\r\n          <Breadcrumbs\r\n            title={t(pageTitle)}\r\n            data={[{ title: t(\"App Setting\") }, { title: t(pageTitle) }]}\r\n          />\r\n        )}\r\n        {/* <div className=\"content-header-right text-md-end col-md col-12 mb-2 \">\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n      <div className=\"app-user-list\">\r\n        {!lookupMode && getApiSummaryData && (\r\n          <Row>\r\n            {store.dataSummary?.map((item, index) => {\r\n              return (\r\n                <Col>\r\n                  <StatsHorizontal\r\n                    color={colors[index]}\r\n                    statTitle={`${t(item.title)}`}\r\n                    icon={\r\n                      item.icon ? (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          {item.icon}\r\n                        </Icon>\r\n                      ) : (\r\n                        <Icon\r\n                          baseClassName=\"material-icons-outlined\"\r\n                          fontSize=\"20\"\r\n                        >\r\n                          lightbulb\r\n                        </Icon>\r\n                      )\r\n                    }\r\n                    renderStats={\r\n                      store.isLoadingSummary ? (\r\n                        <Skeleton\r\n                          sx={{ bgcolor: \"#eef2f8\" }}\r\n                          animation=\"wave\"\r\n                          height={25}\r\n                          width={40}\r\n                          className=\"fw-bolder mb-75\"\r\n                        />\r\n                      ) : (\r\n                        <h3 className=\"fw-bolder mb-75\">\r\n                          {item.count_format ?? item.count}\r\n                        </h3>\r\n                      )\r\n                    }\r\n                  />\r\n                </Col>\r\n              )\r\n            })}\r\n          </Row>\r\n        )}\r\n        {isTreeLayout ? (\r\n          <Tree\r\n            searchString={searchTerm}\r\n            lookupMode={lookupMode}\r\n            lookupMode_fieldName={lookupMode_fieldName}\r\n            lookupMode_defaultValue={lookupMode_defaultValue}\r\n            lookupMode_onChange={lookupMode_onChange}\r\n            lookupMode_isMulti={lookupMode_isMulti}\r\n            lookupMode_isM2MDefValFromGrid\r\n          />\r\n        ) : (\r\n          <Table\r\n            lookupMode={lookupMode}\r\n            lookupMode_fieldName={lookupMode_fieldName}\r\n            lookupMode_defaultValue={lookupMode_defaultValue}\r\n            lookupMode_onChange={lookupMode_onChange}\r\n            lookupMode_isMulti={lookupMode_isMulti}\r\n            lookupMode_isM2MDefValFromGrid\r\n          />\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  ) : (\r\n    <DropDown\r\n      lookupMode_fieldName={lookupMode_fieldName}\r\n      lookupMode_onChange={lookupMode_onChange}\r\n      lookupMode_defaultValue={lookupMode_defaultValue}\r\n      lookupMode_isMulti={lookupMode_isMulti}\r\n      lookupMode_isM2MDefValFromGrid\r\n    />\r\n  )\r\n}\r\n\r\nexport default List\r\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef,\r\n  Component\r\n} from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData,\r\n  setDataList,\r\n  putData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid,\r\n  Copy,\r\n  Slack,\r\n  User,\r\n  Settings,\r\n  Database,\r\n  Edit2,\r\n  MoreVertical,\r\n  Trash2,\r\n  Archive,\r\n  Eye,\r\n  CheckCircle,\r\n  CheckSquare,\r\n  Check,\r\n  Square,\r\n  Plus\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  CardBody,\r\n  CardTitle,\r\n  CardHeader,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  Badge,\r\n  UncontrolledTooltip,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nconst MySwal = withReactContent(Swal)\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport SortableTree from \"@nosferatu500/react-sortable-tree\"\r\nimport { Loader } from \"@src/shared/CommonComponents\"\r\n\r\nconst List = ({\r\n  searchString,\r\n  lookupMode,\r\n  lookupMode_fieldName,\r\n  lookupMode_defaultValue,\r\n  lookupMode_onChange,\r\n  lookupMode_isMulti,\r\n  lookupMode_isM2MDefValFromGrid\r\n}) => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n  const { t } = useTranslation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const ability = useContext(AbilityContext)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n  const [currentDataAdd, setCurrentDataAdd] = useState(null)\r\n\r\n  const [searchFocusIndex, setSearchFocusIndex] = useState(0)\r\n  const [searchFoundCount, setSearchFoundCount] = useState(null)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const toggleSidebar = (row = null) => {\r\n    // console.log(row.id)\r\n    setCurrentDataAdd(row)\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const handleChange = (tree) => {\r\n    dispatch(setDataList(tree))\r\n  }\r\n\r\n  const handleChangeLookupMode = (\r\n    e,\r\n    id,\r\n    lookupMode_fieldName,\r\n    lookupMode_isMulti\r\n  ) => {\r\n    let mainArray = JSON.parse(JSON.stringify(store.data))\r\n    mainArray.forEach(function iter(a) {\r\n      if (a.id === id) {\r\n        a.checked = e.target.checked\r\n      }\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    handleChange(mainArray)\r\n    return lookupMode_onChange(id, lookupMode_fieldName, lookupMode_isMulti)\r\n  }\r\n\r\n  const eventCanDragNode = (args) => {\r\n    // console.log(args)\r\n    if (args.node.is_app_header) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  const onMoveNode = ({\r\n    treeData,\r\n    node,\r\n    nextParentNode,\r\n    prevPath,\r\n    prevTreeIndex,\r\n    nextPath,\r\n    nextTreeIndex\r\n  }) => {\r\n    // console.log(nextParentNode)\r\n    const data = {\r\n      id: node.id,\r\n      title: node.title,\r\n      parent_id: nextParentNode.is_app_header ? null : nextParentNode.id\r\n    }\r\n    updateDataToApi(data, true)\r\n  }\r\n\r\n  const updateDataToApi = (data, notReload = false) => {\r\n    // console.log(data)\r\n    setLoadingText(`${t(\"Updating\")} ${t(pageTitle)} Data`)\r\n    if (notReload) data[\"notReload\"] = true\r\n    const nameMsg = data.title\r\n    dispatch(putData(data, notReload)).then((res) => {\r\n      // console.log(res)\r\n      if (res.meta.requestStatus === \"fulfilled\") {\r\n        toast.success(\r\n          `${t(\"Successfully Updated\")} ${t(pageTitle)} ${nameMsg}`,\r\n          {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          }\r\n        )\r\n      } else if (res.meta.requestStatus === \"rejected\") {\r\n        toast.error(res.payload.message, {\r\n          style: {\r\n            padding: \"16px\",\r\n            color: colors.danger.main,\r\n            border: `1px solid ${colors.danger.main}`\r\n          },\r\n          iconTheme: {\r\n            primary: colors.danger.main\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  const customSearchMethod = ({ node, searchQuery }) => {\r\n    return (\r\n      searchQuery &&\r\n      node.title.toLowerCase().indexOf(searchQuery.toLowerCase()) > -1\r\n    )\r\n  }\r\n\r\n  const selectPrevMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null\r\n        ? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n        : searchFoundCount - 1\r\n    )\r\n\r\n  const selectNextMatch = () =>\r\n    setSearchFocusIndex(\r\n      searchFocusIndex !== null ? (searchFocusIndex + 1) % searchFoundCount : 0\r\n    )\r\n\r\n  const removeDefaultValue = (data, dataTree) => {\r\n    // console.log(dataTree)\r\n    let mainArray = JSON.parse(JSON.stringify(dataTree))\r\n    mainArray.forEach(function iter(a) {\r\n      if (data.includes(a.id)) {\r\n        a[\"checked\"] = true\r\n        a[\"hidden\"] = true\r\n      }\r\n      // console.log(a.id, !data.includes(a.id))\r\n\r\n      // eslint-disable-next-line no-unused-expressions\r\n      Array.isArray(a.children) && a.children.forEach(iter)\r\n    })\r\n    // console.log(data)\r\n    // console.log(mainArray)\r\n    dispatch(setDataList(mainArray))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(getDataList({})).then((x) => {\r\n        // console.log(lookupMode_isM2MDefValFromGrid)\r\n        if (lookupMode && lookupMode_isM2MDefValFromGrid) {\r\n          removeDefaultValue(lookupMode_defaultValue, x.payload.data)\r\n        }\r\n      })\r\n    }\r\n    // console.log(lookupMode_isM2MDefValFromGrid)\r\n    if (store.data.length > 0 && lookupMode_isM2MDefValFromGrid && lookupMode) {\r\n      removeDefaultValue(lookupMode_defaultValue, store.data)\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={store.isLoading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <div\r\n              style={{\r\n                height: !lookupMode ? 800 : 350,\r\n                margin: !lookupMode ? 20 : 10\r\n              }}\r\n            >\r\n              <SortableTree\r\n                treeData={store.data}\r\n                onChange={handleChange}\r\n                onMoveNode={!lookupMode ? onMoveNode : null}\r\n                canDrag={!lookupMode ? eventCanDragNode : false}\r\n                searchMethod={customSearchMethod}\r\n                searchQuery={searchString}\r\n                searchFocusOffset={searchFocusIndex}\r\n                searchFinishCallback={(matches) => {\r\n                  setSearchFoundCount(matches.length)\r\n                  setSearchFocusIndex(\r\n                    matches.length > 0 ? searchFocusIndex % matches.length : 0\r\n                  )\r\n                }}\r\n                // onlyExpandSearchedNodes\r\n                maxDepth={4}\r\n                generateNodeProps={({ node, path }) => ({\r\n                  style: {\r\n                    fontSize: node.is_app_header ? `16px` : \"14px\",\r\n                    fontWeight: node.is_app_header ? `bold` : \"normal\"\r\n                  },\r\n                  title: node.icon ? (\r\n                    <>\r\n                      <div\r\n                        style={{\r\n                          paddingLeft: node.is_app_header ? 0 : 10,\r\n                          fontWeight: node.is_app_header ? `bold` : 400\r\n                        }}\r\n                      >\r\n                        {node.title}\r\n                      </div>\r\n                    </>\r\n                  ) : (\r\n                    <div\r\n                      style={{ fontWeight: node.is_app_header ? `bold` : 400 }}\r\n                    >\r\n                      {node.title}\r\n                    </div>\r\n                  ),\r\n                  buttons: [\r\n                    ability.can(\r\n                      \"post\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) && !lookupMode ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-primary\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            toggleSidebar(node)\r\n                          }}\r\n                        >\r\n                          <Plus size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Add Child\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"update\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-info\"\r\n                          id=\"btn-edit\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleEdit(node)\r\n                          }}\r\n                        >\r\n                          <Edit2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip placement=\"left\" target=\"btn-edit\">\r\n                          {t(\"Edit\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    ability.can(\r\n                      \"delete\",\r\n                      sessionStorage.getItem(\"current_page_perm\")\r\n                    ) &&\r\n                    !lookupMode &&\r\n                    !node.is_app_header ? (\r\n                      <>\r\n                        <Button.Ripple\r\n                          id=\"btn-delete\"\r\n                          className=\"btn-icon rounded-circle\"\r\n                          color=\"flat-danger\"\r\n                          onClick={(e) => {\r\n                            e.preventDefault()\r\n                            handleDelete(node.id)\r\n                          }}\r\n                        >\r\n                          <Trash2 size={16} />\r\n                        </Button.Ripple>\r\n                        <UncontrolledTooltip\r\n                          placement=\"left\"\r\n                          target=\"btn-delete\"\r\n                        >\r\n                          {t(\"Delete\")}\r\n                        </UncontrolledTooltip>\r\n                      </>\r\n                    ) : null,\r\n                    lookupMode && !node.is_app_header ? (\r\n                      <div\r\n                        className={\r\n                          node.hidden\r\n                            ? \"form-check form-check-secondary\"\r\n                            : \"form-check form-check-primary\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          disabled={node.hidden}\r\n                          defaultChecked={node.checked}\r\n                          onChange={(e) =>\r\n                            handleChangeLookupMode(\r\n                              e,\r\n                              node.id,\r\n                              lookupMode_fieldName,\r\n                              lookupMode_isMulti\r\n                            )\r\n                          }\r\n                          type=\"checkbox\"\r\n                          id={`checkbox-${node.id}`}\r\n                        />\r\n                      </div>\r\n                    ) : null\r\n                  ]\r\n                })}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n          currentData={currentDataAdd}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className={classnames(\"react-select\", {\r\n          \"is-invalid\": store.selectedData?.id === null\r\n        })}\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}