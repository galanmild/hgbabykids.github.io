{"version":3,"sources":["../node_modules/flatpickr/dist/l10n/id.js","views/apps/app/Table.js"],"names":["exports","fp","window","undefined","flatpickr","l10ns","Indonesian","weekdays","shorthand","longhand","months","firstDayOfWeek","ordinal","time_24hr","rangeSeparator","id","default","Object","defineProperty","value","factory","MySwal","withReactContent","Swal","BootstrapCheckbox","forwardRef","props","ref","className","type","CustomHeader","store","toggleSidebar","handlePerPage","rowsPerPage","handleFilter","searchTerm","selectedRow","handleDeleteSelected","t","useTranslation","ability","useContext","AbilityContext","useDispatch","useSelector","state","invoices","getUserData","xl","htmlFor","onChange","style","width","length","can","sessionStorage","getItem","color","onClick","pageTitle","e","target","List","dispatch","storeName","colors","ThemeColors","useState","sort_dir","setSortDir","setSearchTerm","currentPage","setCurrentPage","sort","setSort","setRowsPerPage","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","sidebarOpen","setSidebarOpen","loading","setLoading","setLoadingText","showModal","setShowModal","formState","setFormState","handleEdit","rowData","detailFromGrid","setDataById","then","getDataById","res","meta","requestStatus","toast","error","payload","message","padding","danger","main","border","iconTheme","primary","handleCloseModal","revivalBack","neutralizeBack","handleDelete","a","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","deleteData","success","countSelectedCopy","values","map","deleteSelectedRowData","debounceFn","useCallback","debounce","inputValue","getDataList","search","page","handleRowSelected","progLangImg","python","javascript","react","angular","flask","columns","name","sortField","center","sortable","selector","row","cell","logo","appLogo","img","height","imgHeight","imgWidth","is_uploading","size","initials","content","code","info","appType","sixe","programming_language","main_language","src","framework","dynamicColumns","column","columnName","fieldName","field","dataFormat","includes","columnTypeFormat","split","columnType","columnFormat","columnFormated","Moment","format","renderCell","tableColumns","useMemo","isLoading","sx","bgcolor","dark","light","animation","useEffect","data","getAlwaysGrid","blocking","loader","noHeader","subHeader","sortServer","responsive","pagination","paginationServer","paginationTotalRows","total","paginationComponent","count","Number","Math","ceil","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","selectableRows","onSelectedRowsChange","selectableRowsHighlight","clearSelectedRows","selectableRowsComponent","noDataComponent","highlightOnHover","pointerOnHover","onSort","sortDirection","sortIcon","filters","isFiltered","keys","some","k","Array","fill","dataToRender","subHeaderComponent","event","parseInt","currentTarget","show","setShow","detailPage"],"mappings":"4IAIQ,SAAUA,GAAW,aAE3B,IAAIC,EAAuB,qBAAXC,aAA+CC,IAArBD,OAAOE,UAC3CF,OAAOE,UACP,CACEC,MAAO,IAEXC,EAAa,CACbC,SAAU,CACNC,UAAW,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACtDC,SAAU,CAAC,SAAU,QAAS,SAAU,OAAQ,QAAS,QAAS,UAEtEC,OAAQ,CACJF,UAAW,CACP,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEJC,SAAU,CACN,UACA,WACA,QACA,QACA,MACA,OACA,OACA,UACA,YACA,UACA,WACA,aAGRE,eAAgB,EAChBC,QAAS,WACL,MAAO,IAEXC,WAAW,EACXC,eAAgB,OAEpBb,EAAGI,MAAMU,GAAKT,EACd,IAAIS,EAAKd,EAAGI,MAEZL,EAAQM,WAAaA,EACrBN,EAAQgB,QAAUD,EAElBE,OAAOC,eAAelB,EAAS,aAAc,CAAEmB,OAAO,IA1DSC,CAAQpB,I,iZC2EnEqB,EAASC,IAAiBC,KAG1BC,EAAoBC,sBAAW,SAACC,EAAOC,GAAR,OACnC,qBAAKC,UAAU,aAAf,SACE,cAAC,IAAD,aAAOC,KAAK,WAAWF,IAAKA,GAASD,SAKnCI,EAAe,SAAC,GAShB,EARJC,MAQK,IAPLC,EAOI,EAPJA,cACAC,EAMI,EANJA,cACAC,EAKI,EALJA,YACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,YACAC,EACI,EADJA,qBAEQC,EAAMC,cAAND,EACFE,EAAUC,qBAAWC,KACVC,cACIC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YACjCC,cAEjB,OACE,qBAAKpB,UAAU,wDAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKqB,GAAG,IAAIrB,UAAU,gCAAtB,SACE,sBAAKA,UAAU,kCAAf,UACE,uBAAOsB,QAAQ,gBAAf,SAAgCX,EAAE,UAClC,eAAC,IAAD,CACEX,UAAU,QACVC,KAAK,SACLd,GAAG,gBACHI,MAAOe,EACPiB,SAAUlB,EACVmB,MAAO,CAAEC,MAAO,QANlB,UAQE,wBAAQlC,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,uBAAO+B,QAAQ,gBAAf,SAAgCX,EAAE,kBAGtC,eAAC,IAAD,CACEU,GAAG,IACHrB,UAAU,sJAFZ,WAIc,OAAXS,QAAW,IAAXA,OAAA,EAAAA,EAAaiB,QAAS,GACvBb,EAAQc,IAAI,SAAUC,eAAeC,QAAQ,sBAC3C,qBAAK7B,UAAU,8CAAf,SACE,eAAC,IAAD,CACEA,UAAU,eACV8B,MAAM,SACNC,QAASrB,EAHX,UAKGC,EAAE,UALL,IAKiBF,EAAYiB,OAL7B,IAKsCf,EAAE,YAAD,OAAaqB,mBAGpD,KACJ,sBAAKhC,UAAU,8CAAf,UACE,wBAAOA,UAAU,OAAOsB,QAAQ,iBAAhC,UACGX,EAAE,UADL,OAGA,cAAC,IAAD,CACExB,GAAG,iBACHa,UAAU,cACVC,KAAK,OACLV,MAAOiB,EACPe,SAAU,SAACU,GAAD,OAAO1B,EAAa0B,EAAEC,OAAO3C,aAI3C,qBAAKS,UAAU,iDAAf,SAqFGa,EAAQc,IACP,OACAC,eAAeC,QAAQ,sBAEvB,eAAC,IAAD,CACE7B,UAAU,eACV8B,MAAM,UACNC,QAAS3B,EAHX,UAMGO,EAAE,WANL,IAMkBA,EAAEqB,gBAElB,gBAgiBDG,UAxhBF,WACX,IAAMC,EAAWpB,cACXb,EAAQc,aAAY,SAACC,GAAD,OAAWA,EAAMmB,gBAEnC1B,EAAMC,cAAND,EAGA2B,GAFQxB,qBAAWC,KAERD,qBAAWyB,KAAtBD,QACR,EAA+BE,mBAAS,QAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,mBAAS,IAA7C,mBAAOhC,EAAP,KAAmBmC,EAAnB,KACA,EAAsCH,mBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAAwBL,mBAAS,MAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAAsCP,mBAAS,IAA/C,mBAAOlC,GAAP,KAAoB0C,GAApB,KACA,GAAwCR,mBAAS,IAAjD,qBAAOS,GAAP,MAAqBC,GAArB,MACA,GAA0CV,oBAAS,GAAnD,qBAAOW,GAAP,MAAsBC,GAAtB,MAEA,GAAsCZ,oBAAS,GAA/C,qBAAOa,GAAP,MAAoBC,GAApB,MACA,GAA8Bd,oBAAS,GAAvC,qBAAOe,GAAP,MAAgBC,GAAhB,MACA,GAAsChB,mBAAS,eAA/C,qBAAoBiB,IAApB,aACA,GAAkCjB,oBAAS,GAA3C,qBAAOkB,GAAP,MAAkBC,GAAlB,MACA,GAAkCnB,mBAAS,MAA3C,qBAAOoB,GAAP,MAAkBC,GAAlB,MAEMC,GAAa,SAACC,GAClBF,GAAa,QACRG,kBAwBHP,GAAe,GAAD,OACT9C,EAAE,WADO,YACOA,EAAE,UADT,YACsBA,EAAE,QADxB,YACmCA,EAAEqB,eAEnDwB,IAAW,GACXpB,EAAS6B,sBAAYF,IAAUG,MAAK,WAClCV,IAAW,GACXG,IAAa,QA7BfF,GAAe,GAAD,OACT9C,EAAE,WADO,YACOA,EAAE,UADT,YACsBA,EAAE,QADxB,YACmCA,EAAEqB,eAEnDwB,IAAW,GACXpB,EAAS+B,sBAAYJ,EAAQ5E,KAAK+E,MAAK,SAACE,GACP,aAA3BA,EAAIC,KAAKC,eACXd,IAAW,GACXe,IAAMC,MAAMJ,EAAIK,QAAQC,QAAS,CAC/BlD,MAAO,CACLmD,QAAS,OACT7C,MAAOQ,EAAOsC,OAAOC,KACrBC,OAAO,aAAD,OAAexC,EAAOsC,OAAOC,OAErCE,UAAW,CACTC,QAAS1C,EAAOsC,OAAOC,UAI3BrB,IAAW,GACXG,IAAa,SAefsB,GAAmB,WACvB3B,IAAgBD,IAChBM,IAAcD,IACdwB,eAGI9E,GAAgB,WAEpByD,GAAa,OACbP,IAAgBD,IAChBM,IAAcD,IACdyB,YAAeF,KAGXG,GAAY,uCAAG,WAAOjG,GAAP,SAAAkG,EAAA,sEACE5F,EAAO6F,KAAK,CAC/BC,MAAM,GAAD,OAAK5E,EAAE,kBACZ6E,KAAK,GAAD,OAAK7E,EAAE,+BAAP,YAAyCA,EAAEqB,aAA3C,KACJyD,KAAM,UACNC,kBAAkB,EAClBC,kBAAkB,GAAD,OAAKhF,EAAE,eAAP,YAAyBA,EAAEqB,aAA3B,KACjB4D,iBAAiB,GAAD,OAAKjF,EAAE,WACvBkF,YAAa,CACXC,cAAe,kBACfC,aAAc,+BAEhBC,gBAAgB,IAZC,cAcRzG,QACTkE,GAAe,GAAD,OAAI9C,EAAE,YAAN,iBAA0BA,EAAEqB,eAC1CwB,IAAW,GACXpB,EAAS6D,qBAAW9G,IAAK+E,MAAK,SAACE,GAEE,cAA3BA,EAAIC,KAAKC,eACXd,IAAW,GACXe,IAAM2B,QAAN,UAAiBvF,EAAE,wBAAnB,YAA8CA,EAAEqB,cAAc,CAC5DR,MAAO,CACLmD,QAAS,OACT7C,MAAOQ,EAAO4D,QAAQrB,KACtBC,OAAO,aAAD,OAAexC,EAAO4D,QAAQrB,OAEtCE,UAAW,CACTC,QAAS1C,EAAO4D,QAAQrB,SAGQ,aAA3BT,EAAIC,KAAKC,gBAClBd,IAAW,GACXe,IAAMC,MAAMJ,EAAIK,QAAQC,QAAS,CAC/BlD,MAAO,CACLmD,QAAS,OACT7C,MAAOQ,EAAOsC,OAAOC,KACrBC,OAAO,aAAD,OAAexC,EAAOsC,OAAOC,OAErCE,UAAW,CACTC,QAAS1C,EAAOsC,OAAOC,aAxCd,2CAAH,sDAgDZnE,GAAoB,uCAAG,8BAAA2E,EAAA,6DACrBc,EAAoBlD,GAAavB,OADZ,SAENjC,EAAO6F,KAAK,CAC/BC,MAAM,GAAD,OAAK5E,EAAE,kBACZ6E,KAAK,GAAD,OAAK7E,EAAE,mBAAP,YAA6BwF,EAA7B,YAAkDxF,EACpD,mDADE,KAGJ8E,KAAM,UACNC,kBAAkB,EAClBC,kBAAkB,GAAD,OAAKhF,EAAE,eAAP,YAAyBwF,EAAzB,YAA8CxF,EAC7DqB,aADe,KAGjB4D,iBAAiB,GAAD,OAAKjF,EAAE,WACvBkF,YAAa,CACXC,cAAe,kBACfC,aAAc,+BAEhBC,gBAAgB,IAjBS,cAmBhBzG,QACTkE,GAAe,GAAD,OACT9C,EAAE,YADO,YACQwF,EADR,iBACkCxF,EAAEqB,eAElDwB,IAAW,GACL4C,EAASnD,GAAaoD,KAAI,SAAChB,GAAD,OAAOA,EAAElG,MAEzCiD,EAASkE,gCAAsB,CAAEnH,GAAIiH,KAAWlC,MAAK,SAACE,GAErB,cAA3BA,EAAIC,KAAKC,eACXpB,GAAgB,IAChBE,IAAkBD,IAClBK,IAAW,GACXe,IAAM2B,QAAN,UACKvF,EAAE,wBADP,YACkCwF,EADlC,YACuDxF,EAAEqB,cACvD,CACER,MAAO,CACLmD,QAAS,OACT7C,MAAOQ,EAAO4D,QAAQrB,KACtBC,OAAO,aAAD,OAAexC,EAAO4D,QAAQrB,OAEtCE,UAAW,CACTC,QAAS1C,EAAO4D,QAAQrB,SAIM,aAA3BT,EAAIC,KAAKC,gBAClBd,IAAW,GACXe,IAAMC,MAAMJ,EAAIK,QAAQC,QAAS,CAC/BlD,MAAO,CACLmD,QAAS,OACT7C,MAAOQ,EAAOsC,OAAOC,KACrBC,OAAO,aAAD,OAAexC,EAAOsC,OAAOC,OAErCE,UAAW,CACTC,QAAS1C,EAAOsC,OAAOC,aAtDN,2CAAH,qDAsGpB0B,GAAaC,sBAAYC,KAZN,SAACC,GACxBtE,EACEuE,sBAAY,CACVlE,WACAmE,OAAQF,EACR5D,OACA+D,KAAMjE,EACNlB,OAAQpB,QAK4C,KAAM,IAqB1DwG,GAAoBN,uBAAY,SAACtF,GACrCgC,GAAgBhC,EAAM+B,gBACrB,IAqDG8D,GAAc,CAClBC,OACE,iFACFC,WAAY,0DACZC,MACE,gFACFC,QACE,sIACFC,MAAO,iEAEHC,GAAO,CACX,CACEC,KAAM3G,EAAE,YACR4G,UAAW,OACXC,QAAQ,EACRC,UAAU,EACVC,SAAU,SAACC,GAAD,OAASA,EAAG,MACtBC,KAAM,SAACD,GAAD,eACJ,sBAAK3H,UAAU,iDAAf,UACG,UAAA2H,EAAIE,YAAJ,SAAUC,QACT,cAAC,IAAD,CACE9H,UAAU,OACV+H,IAAG,OAAEJ,QAAF,IAAEA,GAAF,UAAEA,EAAKE,YAAP,aAAE,EAAWC,QAChBrG,MAAM,KACNuG,OAAO,KACPC,UAAU,KACVC,SAAS,KACTpG,MAAO,kBAEN6F,EAAIQ,aAQP,cAAC,IAAD,CAASC,KAAK,KAAKtG,MAAM,YAPzB,cAAC,IAAD,CACEuG,UAAQ,EACRrI,UAAU,OACV8B,MAAO,gBACPwG,QAASX,EAAIL,MAAQ,aAMzB,sBAAKtH,UAAU,qBAAf,UACE,sBAAMA,UAAU,YAAhB,SAA6B2H,EAAIL,OACjC,uBAAOtH,UAAU,gCAAjB,SAAkD2H,EAAIY,eAK9D,CACEjB,KAAM3G,EAAE,YACR6G,QAAQ,EACRC,UAAU,EACVC,SAAU,SAACC,GAAD,OAASA,EAAG,KAAH,SACnBC,KAAM,SAACD,GAAD,eACJ,sBAAK3H,UAAU,iDAAf,UAC0B,aAApB,OAAH2H,QAAG,IAAHA,GAAA,UAAAA,EAAKa,YAAL,eAAWC,SACV,cAAC,IAAD,CAASzI,UAAU,OAAO0I,KAAM,KAEhC,cAAC,IAAD,CAAS1I,UAAU,OAAO0I,KAAM,KAElC,qBAAK1I,UAAU,qBAAf,SACE,sBAAMA,UAAU,YAAhB,gBAA6B2H,QAA7B,IAA6BA,GAA7B,UAA6BA,EAAKa,YAAlC,aAA6B,EAAWC,iBAKhD,CACEnB,KAAM3G,EAAE,aACR6G,QAAQ,EACRC,UAAU,EACVC,SAAU,SAACC,GAAD,OAASA,EAAG,KAAH,oCACnBC,KAAM,SAACD,GAAD,2BACJ,sBAAK3H,UAAU,iDAAf,UACG+G,GAAW,OAACY,QAAD,IAACA,GAAD,UAACA,EAAKa,YAAN,iBAAC,EAAWG,4BAAZ,aAAC,EAAiCC,gBAC5C,qBACE5I,UAAU,OACV6I,IAAK9B,GAAW,OAACY,QAAD,IAACA,GAAD,UAACA,EAAKa,YAAN,iBAAC,EAAWG,4BAAZ,aAAC,EAAiCC,eAElDZ,OAAO,OAGVjB,GAAW,OAACY,QAAD,IAACA,GAAD,UAACA,EAAKa,YAAN,iBAAC,EAAWG,4BAAZ,aAAC,EAAiCG,YAC5C,qBACE9I,UAAU,OACV6I,IAAK9B,GAAW,OAACY,QAAD,IAACA,GAAD,UAACA,EAAKa,YAAN,iBAAC,EAAWG,4BAAZ,aAAC,EAAiCG,WAElDd,OAAO,aA3EN,mBAiFR7H,EAAM4I,eAAe1C,KAAI,SAAC2C,GAAD,MAAa,CACvC1B,KAAM0B,EAAOC,WACb1B,UAAWyB,EAAOE,UAClB1B,QAAQ,EACRC,UAAU,EACVC,SAAU,SAACC,GAAD,OAASA,EAAIqB,EAAOE,YAC9BtB,KAAM,SAACD,GAAD,OA5HS,SAACA,EAAKqB,GACvB,IAAMG,EAAQxB,EAAIqB,EAAOE,WACnBE,EAAaJ,EAAOI,WAC1B,GAAIA,GACEA,EAAWC,SAAS,KAAM,CAC5B,IAAMC,EAAmBF,EAAWG,MAAM,KACpCC,EAAaF,EAAiB,GAC9BG,EAAeH,EAAiB,GAClCI,EAAiB/B,EAAIqB,EAAOE,WAahC,MAZmB,SAAfM,IACFE,EAAiBC,IAAOR,GAAOS,OAAO,eAClCH,IACFC,EAAiBC,IAAOR,GAAOS,OAAOH,KAGvB,aAAfD,IACFE,EAAiBC,IAAOR,GAAOS,OAAO,qBAClCH,IACFC,EAAiBC,IAAOR,GAAOS,OAAOH,KAGnCC,EAGX,OAAO/B,EAAIqB,EAAOE,WAoGDW,CAAWlC,EAAKqB,SAvFtB,CAyFX,CACE1B,KAAM3G,EAAE,WACR6G,QAAQ,EACR/F,MAAO,QACPmG,KAAM,SAACD,GAAD,OACJ,cAAC,IAAD,CACEA,IAAKA,EACLvC,aAAcA,GACdtB,WAAYA,GACZzB,UAAWA,kBAMbyH,GAAeC,mBACnB,kBACE5J,EAAM6J,UACF3C,GAAQhB,KAAI,SAAC2C,GAAD,mBAAC,aACX1B,KAAM3G,EAAEqI,EAAO1B,OACZ0B,GAFO,IAGVvB,UAAU,EACVG,KAAM,SAACD,GAAD,OACJ,cAAC,IAAD,CACEsC,GAAI,CAAEC,QAAS5H,EAAO6H,KAAKC,OAC3BC,UAAU,OACVrK,UAA2B,YAAhBgJ,EAAO1B,KAAqB,OAAS,GAChD7F,MAAuB,YAAhBuH,EAAO1B,KAAqB,GAAK,OACxCU,OAAQ,WAIdX,GAAQhB,KAAI,SAAC2C,GAAD,oBACV1B,KAAM3G,EAAEqI,EAAO1B,OACZ0B,QAEX,CAAC7I,EAAM6J,UAAW3C,KAuCpB,OAfAiD,qBAAU,YACkB,IAAtBnK,EAAMoK,KAAK7I,SAAkBvB,EAAM6J,WAAaQ,mBAClD/G,GAAe,GAAD,OAAI9C,EAAE,gBAAN,YAAyBA,EAAEqB,eACzCI,EACEuE,sBAAY,CACVlE,WACAK,OACA8D,OAAQpG,EACRqG,KAAMjE,EACNlB,OAAQpB,SAIb,CAAC8B,EAAUjC,EAAMoK,KAAK7I,OAAQe,EAAUK,EAAMF,IAG/C,eAAC,WAAD,WACE,cAAC,IAAD,CAAU6H,SAAUlH,GAASmH,OAAQ,cAAC,IAAD,IAArC,SACE,cAAC,IAAD,CAAM1K,UAAU,kBAAhB,SACE,qBAAKA,UAAU,kDAAf,SACE,cAAC,IAAD,CACE2K,UAAQ,EACRC,WAAS,EACTC,YAAU,EACVC,YAAU,EACVC,YAAU,EACVC,kBAAgB,EAChBC,oBAAqB9K,EAAM+K,MAC3BC,oBA9Oa,WACvB,IAAMC,EAAQC,OAAOC,KAAKC,KAAKpL,EAAM+K,MAAQ5K,KAE7C,OACE,cAAC,IAAD,CACEkL,cAAe,GACfC,UAAW,GACXC,UAAWN,GAAS,EACpBO,gBAAgB,SAChBC,UAA2B,IAAhBhJ,EAAoBA,EAAc,EAAI,EACjDiJ,aAAc,SAAChF,GAAD,OA1EK,SAACA,GACxBzE,EACEuE,sBAAY,CACVlE,WACAK,OACA8D,OAAQpG,EACRkB,OAAQpB,GACRuG,KAAMA,EAAKiF,SAAW,KAG1BjJ,EAAegE,EAAKiF,SAAW,GAgEHC,CAAiBlF,IACzCmF,cAAe,YACfC,kBAAmB,YACnBC,cAAe,iBACfC,kBAAmB,iBACnBC,sBAAuB,YACvBC,kBAAmB,YACnBC,mBACE,6DA6NIC,gBAAc,EACdC,qBAAsB1F,GACtB2F,yBAAuB,EAEvBC,kBAAmBvJ,GACnBwJ,wBAAyB/M,EACzBgN,gBAAiB,cAAC,IAAD,IAGjBpL,MAAO,CAAE,aAAc,SACvBqL,kBAAgB,EAChBC,gBAAc,EACdzF,QAASyC,GACTiD,OA9QO,SAAC/D,EAAQgE,GAC1BtK,EAAWsK,GACXjK,EAAQiG,EAAOzB,WACfnF,EACEuE,sBAAY,CACVlE,WACAK,OACA8D,OAAQpG,EACRqG,KAAMjE,EACNlB,OAAQpB,OAsQF2M,SAAU,cAAC,IAAD,IACVjN,UAAU,kBACVuK,KAlES,WACnB,IAAM2C,EAAU,CACdtG,OAAQpG,GAEJ2M,EAAa9N,OAAO+N,KAAKF,GAASG,MAAK,SAAUC,GACrD,OAAOJ,EAAQI,GAAG5L,OAAS,KAE7B,OAAKvB,EAAM6J,UAUFuD,MAAM,IAAIC,KAAK,IATlBrN,EAAMoK,KAAK7I,OAAS,EACfvB,EAAMoK,KACkB,IAAtBpK,EAAMoK,KAAK7I,QAAgByL,EAC7B,QADF,EAwDOM,GACNC,mBACE,cAACxN,EAAD,CACEC,MAAOA,EACPK,WAAYA,EACZF,YAAaA,GACbC,aA5RK,SAACoN,GACpBhL,EAAcgL,GACdpH,GAAWoH,IA2RGtN,cAzTM,SAAC4B,GACrB,IAAM1C,EAAQqO,SAAS3L,EAAE4L,cAActO,OACvC6C,EACEuE,sBAAY,CACVlE,WACAK,OACA8D,OAAQpG,EACRkB,OAAQnC,EACRsH,KAAMjE,KAGVI,GAAezD,IA+SDa,cAAeA,GACfK,YAAawC,GACbvC,qBAAsBA,aAUjCgD,IACC,cAAC,UAAD,CACEE,UAAWA,GACXkK,KAAMpK,GACNqK,QAAS3N,GACT4N,YAAY,EACZnK,aAAcA","file":"static/js/130.9fdb21d7.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.id = {}));\n}(this, function (exports) { 'use strict';\n\n  var fp = typeof window !== \"undefined\" && window.flatpickr !== undefined\n      ? window.flatpickr\n      : {\n          l10ns: {}\n      };\n  var Indonesian = {\n      weekdays: {\n          shorthand: [\"Min\", \"Sen\", \"Sel\", \"Rab\", \"Kam\", \"Jum\", \"Sab\"],\n          longhand: [\"Minggu\", \"Senin\", \"Selasa\", \"Rabu\", \"Kamis\", \"Jumat\", \"Sabtu\"]\n      },\n      months: {\n          shorthand: [\n              \"Jan\",\n              \"Feb\",\n              \"Mar\",\n              \"Apr\",\n              \"Mei\",\n              \"Jun\",\n              \"Jul\",\n              \"Agu\",\n              \"Sep\",\n              \"Okt\",\n              \"Nov\",\n              \"Des\",\n          ],\n          longhand: [\n              \"Januari\",\n              \"Februari\",\n              \"Maret\",\n              \"April\",\n              \"Mei\",\n              \"Juni\",\n              \"Juli\",\n              \"Agustus\",\n              \"September\",\n              \"Oktober\",\n              \"November\",\n              \"Desember\",\n          ]\n      },\n      firstDayOfWeek: 1,\n      ordinal: function () {\n          return \"\";\n      },\n      time_24hr: true,\n      rangeSeparator: \" - \"\n  };\n  fp.l10ns.id = Indonesian;\n  var id = fp.l10ns;\n\n  exports.Indonesian = Indonesian;\n  exports.default = id;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/* eslint-disable implicit-arrow-linebreak */\r\n/* eslint-disable no-confusing-arrow */\r\n/* eslint-disable multiline-ternary */\r\nimport {\r\n  Fragment,\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useMemo,\r\n  useCallback,\r\n  forwardRef\r\n} from \"react\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { AbilityContext } from \"@src/utility/context/Can\"\r\nimport ModalAddEdit from \"./modal\"\r\nimport { neutralizeBack, revivalBack } from \"@src/utility/Utils\"\r\nimport {\r\n  storeName,\r\n  pageTitle,\r\n  serverSideGrid,\r\n  detailFromGrid,\r\n  getApiAfterPut,\r\n  getApiAfterPost,\r\n  getApiAfterDelete,\r\n  getSummarysData,\r\n  getAlwaysGrid,\r\n  getDataList,\r\n  getDataById,\r\n  setDataById,\r\n  deleteData,\r\n  deleteSelectedRowData\r\n} from \"./store\"\r\nimport { getInvoice } from \"../../invoices/store\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport ReactPaginate from \"react-paginate\"\r\nimport DataTable from \"react-data-table-component\"\r\nimport debounce from \"lodash.debounce\"\r\nimport {\r\n  ChevronDown,\r\n  Share,\r\n  Printer,\r\n  FileText,\r\n  File,\r\n  Grid\r\n} from \"react-feather\"\r\n\r\nimport { getUserData } from \"@utils\"\r\n\r\nimport UILoader from \"@components/ui-loader\"\r\nimport Spinner from \"@components/spinner/Loading-spinner\"\r\nimport { ThemeColors } from \"@src/utility/context/ThemeColors\"\r\nimport toast from \"react-hot-toast\"\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Input,\r\n  Button,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  UncontrolledDropdown,\r\n  CardText\r\n} from \"reactstrap\"\r\nimport Avatar from \"@components/avatar\"\r\nimport \"@styles/react/libs/react-select/_react-select.scss\"\r\nimport \"@styles/react/libs/tables/react-dataTable-component.scss\"\r\nimport Swal from \"sweetalert2\"\r\nimport withReactContent from \"sweetalert2-react-content\"\r\nimport { Skeleton } from \"@mui/material\"\r\nimport Moment from \"moment\"\r\nimport GlobalActionsTable from \"../../../shared/GlobaActionsTable\"\r\nimport { NoDataDisplay, Loader } from \"@src/shared/CommonComponents\"\r\nimport ApiIcon from \"@mui/icons-material/Api\"\r\nimport WebIcon from \"@mui/icons-material/Web\"\r\nimport InstallMobileIcon from \"@mui/icons-material/InstallMobile\"\r\nconst MySwal = withReactContent(Swal)\r\n\r\n// ** Bootstrap Checkbox Component\r\nconst BootstrapCheckbox = forwardRef((props, ref) => (\r\n  <div className=\"form-check\">\r\n    <Input type=\"checkbox\" ref={ref} {...props} />\r\n  </div>\r\n))\r\n\r\n// ** Table Header\r\nconst CustomHeader = ({\r\n  store,\r\n  toggleSidebar,\r\n  handlePerPage,\r\n  rowsPerPage,\r\n  handleFilter,\r\n  searchTerm,\r\n  selectedRow,\r\n  handleDeleteSelected\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n  const dispatch = useDispatch()\r\n  const storeInvoice = useSelector((state) => state.invoices)\r\n  const userData = getUserData()\r\n\r\n  return (\r\n    <div className=\"invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75\">\r\n      <Row>\r\n        <Col xl=\"4\" className=\"d-flex align-items-center p-0\">\r\n          <div className=\"d-flex align-items-center w-100\">\r\n            <label htmlFor=\"rows-per-page\">{t(\"Show\")}</label>\r\n            <Input\r\n              className=\"mx-50\"\r\n              type=\"select\"\r\n              id=\"rows-per-page\"\r\n              value={rowsPerPage}\r\n              onChange={handlePerPage}\r\n              style={{ width: \"5rem\" }}\r\n            >\r\n              <option value=\"10\">10</option>\r\n              <option value=\"25\">25</option>\r\n              <option value=\"50\">50</option>\r\n            </Input>\r\n            <label htmlFor=\"rows-per-page\">{t(\"Entries\")}</label>\r\n          </div>\r\n        </Col>\r\n        <Col\r\n          xl=\"8\"\r\n          className=\"d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1\"\r\n        >\r\n          {selectedRow?.length > 0 &&\r\n          ability.can(\"delete\", sessionStorage.getItem(\"current_page_perm\")) ? (\r\n            <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n              <Button\r\n                className=\"delete-users\"\r\n                color=\"danger\"\r\n                onClick={handleDeleteSelected}\r\n              >\r\n                {t(\"Delete\")} {selectedRow.length} {t(`Selected ${pageTitle}`)}\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n          <div className=\"d-flex align-items-center mb-sm-0 mb-1 me-1\">\r\n            <label className=\"mb-0\" htmlFor=\"search-invoice\">\r\n              {t(\"Search\")}:\r\n            </label>\r\n            <Input\r\n              id=\"search-invoice\"\r\n              className=\"ms-50 w-100\"\r\n              type=\"text\"\r\n              value={searchTerm}\r\n              onChange={(e) => handleFilter(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"d-flex align-items-center table-header-actions\">\r\n            {/* <UncontrolledDropdown className=\"me-1\">\r\n              <DropdownToggle color=\"secondary\" caret outline>\r\n                <Share className=\"font-small-4 me-50\" />\r\n                <span className=\"align-middle\">{t(\"Export\")}</span>\r\n              </DropdownToggle>\r\n              <DropdownMenu>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        print: true,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Printer className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">{t(\"Print\")}</span>\r\n                </DropdownItem>\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"pdf\",\r\n                        dataYear: userData.dataYear,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <File className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">PDF</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"xls\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <Grid className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">Excel</span>\r\n                </DropdownItem>\r\n\r\n                <DropdownItem\r\n                  className=\"w-100\"\r\n                  // onClick={() => downloadCSV(store.data)}\r\n                  onClick={() =>\r\n                    dispatch(\r\n                      getInvoice({\r\n                        rpt_name: \"sample\",\r\n                        output_type: \"csv\",\r\n                        dataYear: userData.dataYear,\r\n                        as_attachment: true,\r\n                        par_UNITKEY: 139,\r\n                        par_SAMPLE: \"ahh...ini adalah sample parameter\"\r\n                      })\r\n                    )\r\n                  }\r\n                >\r\n                  <FileText className=\"font-small-4 me-50\" />\r\n                  <span className=\"align-middle\">CSV</span>\r\n                </DropdownItem>\r\n              </DropdownMenu>\r\n            </UncontrolledDropdown> */}\r\n\r\n            {ability.can(\r\n              \"post\",\r\n              sessionStorage.getItem(\"current_page_perm\")\r\n            ) ? (\r\n              <Button\r\n                className=\"add-new-user\"\r\n                color=\"primary\"\r\n                onClick={toggleSidebar}\r\n                // onClick={handleAdd}\r\n              >\r\n                {t(\"Add New\")} {t(pageTitle)}\r\n              </Button>\r\n            ) : null}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst List = () => {\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const { t } = useTranslation()\r\n  const ability = useContext(AbilityContext)\r\n\r\n  const { colors } = useContext(ThemeColors)\r\n  const [sort_dir, setSortDir] = useState(\"desc\")\r\n  const [searchTerm, setSearchTerm] = useState(\"\")\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n  const [sort, setSort] = useState(\"id\")\r\n  const [rowsPerPage, setRowsPerPage] = useState(10)\r\n  const [selectedRows, setSelectedRows] = useState([])\r\n  const [toggleCleared, setToggleCleared] = useState(false)\r\n\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const [loadingText, setLoadingText] = useState(\"Please Wait\")\r\n  const [showModal, setShowModal] = useState(false)\r\n  const [formState, setFormState] = useState(null)\r\n\r\n  const handleEdit = (rowData) => {\r\n    setFormState(\"edit\")\r\n    if (!detailFromGrid) {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(getDataById(rowData.id)).then((res) => {\r\n        if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        } else {\r\n          setLoading(false)\r\n          setShowModal(true)\r\n        }\r\n      })\r\n    } else {\r\n      setLoadingText(\r\n        `${t(\"Loading\")} ${t(\"Detail\")} ${t(\"Data\")} ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      dispatch(setDataById(rowData)).then(() => {\r\n        setLoading(false)\r\n        setShowModal(true)\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    revivalBack()\r\n  }\r\n\r\n  const toggleSidebar = () => {\r\n    // console.log(\"here\")\r\n    setFormState(\"add\")\r\n    setSidebarOpen(!sidebarOpen)\r\n    setShowModal(!showModal)\r\n    neutralizeBack(handleCloseModal)\r\n  }\r\n\r\n  const handleDelete = async (id) => {\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You won't be able to revert\")} ${t(pageTitle)}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${t(pageTitle)}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(`${t(\"Deleting\")} Data ${t(pageTitle)}`)\r\n      setLoading(true)\r\n      dispatch(deleteData(id)).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setLoading(false)\r\n          toast.success(`${t(\"Successfully deleted\")} ${t(pageTitle)}`, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.success.main,\r\n              border: `1px solid ${colors.success.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.success.main\r\n            }\r\n          })\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const handleDeleteSelected = async () => {\r\n    const countSelectedCopy = selectedRows.length\r\n    const result = await MySwal.fire({\r\n      title: `${t(\"Are you sure?\")}`,\r\n      text: `${t(\"You will delete\")} ${countSelectedCopy} ${t(\r\n        \"selected data. Deleted data cannot be recovered\"\r\n      )}!`,\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: `${t(\"Yes, Delete\")} ${countSelectedCopy} ${t(\r\n        pageTitle\r\n      )}!`,\r\n      cancelButtonText: `${t(\"Cancel\")}`,\r\n      customClass: {\r\n        confirmButton: \"btn btn-primary\",\r\n        cancelButton: \"btn btn-outline-danger ms-1\"\r\n      },\r\n      buttonsStyling: false\r\n    })\r\n    if (result.value) {\r\n      setLoadingText(\r\n        `${t(\"Deleting\")} ${countSelectedCopy} Data ${t(pageTitle)}`\r\n      )\r\n      setLoading(true)\r\n      const values = selectedRows.map((a) => a.id)\r\n      // console.log(values)\r\n      dispatch(deleteSelectedRowData({ id: values })).then((res) => {\r\n        // console.log(res)\r\n        if (res.meta.requestStatus === \"fulfilled\") {\r\n          setSelectedRows([])\r\n          setToggleCleared(!toggleCleared)\r\n          setLoading(false)\r\n          toast.success(\r\n            `${t(\"Successfully deleted\")} ${countSelectedCopy} ${t(pageTitle)}`,\r\n            {\r\n              style: {\r\n                padding: \"16px\",\r\n                color: colors.success.main,\r\n                border: `1px solid ${colors.success.main}`\r\n              },\r\n              iconTheme: {\r\n                primary: colors.success.main\r\n              }\r\n            }\r\n          )\r\n        } else if (res.meta.requestStatus === \"rejected\") {\r\n          setLoading(false)\r\n          toast.error(res.payload.message, {\r\n            style: {\r\n              padding: \"16px\",\r\n              color: colors.danger.main,\r\n              border: `1px solid ${colors.danger.main}`\r\n            },\r\n            iconTheme: {\r\n              primary: colors.danger.main\r\n            }\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  /////PAGINATION SERVERSIDE\r\n  const handlePagination = (page) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: rowsPerPage,\r\n        page: page.selected + 1\r\n      })\r\n    )\r\n    setCurrentPage(page.selected + 1)\r\n  }\r\n\r\n  const handlePerPage = (e) => {\r\n    const value = parseInt(e.currentTarget.value)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        length: value,\r\n        page: currentPage\r\n      })\r\n    )\r\n    setRowsPerPage(value)\r\n  }\r\n\r\n  const handleDebounceFn = (inputValue) => {\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        search: inputValue,\r\n        sort,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const debounceFn = useCallback(debounce(handleDebounceFn, 500), [])\r\n\r\n  const handleFilter = (event) => {\r\n    setSearchTerm(event)\r\n    debounceFn(event)\r\n  }\r\n\r\n  const handleSort = (column, sortDirection) => {\r\n    setSortDir(sortDirection)\r\n    setSort(column.sortField)\r\n    dispatch(\r\n      getDataList({\r\n        sort_dir,\r\n        sort,\r\n        search: searchTerm,\r\n        page: currentPage,\r\n        length: rowsPerPage\r\n      })\r\n    )\r\n  }\r\n\r\n  const handleRowSelected = useCallback((state) => {\r\n    setSelectedRows(state.selectedRows)\r\n  }, [])\r\n\r\n  const CustomPagination = () => {\r\n    const count = Number(Math.ceil(store.total / rowsPerPage))\r\n\r\n    return (\r\n      <ReactPaginate\r\n        previousLabel={\"\"}\r\n        nextLabel={\"\"}\r\n        pageCount={count || 1}\r\n        activeClassName=\"active\"\r\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\r\n        onPageChange={(page) => handlePagination(page)}\r\n        pageClassName={\"page-item\"}\r\n        nextLinkClassName={\"page-link\"}\r\n        nextClassName={\"page-item next\"}\r\n        previousClassName={\"page-item prev\"}\r\n        previousLinkClassName={\"page-link\"}\r\n        pageLinkClassName={\"page-link\"}\r\n        containerClassName={\r\n          \"pagination react-paginate justify-content-end my-2 pe-1\"\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCell = (row, column) => {\r\n    const field = row[column.fieldName]\r\n    const dataFormat = column.dataFormat\r\n    if (dataFormat) {\r\n      if (dataFormat.includes(\":\")) {\r\n        const columnTypeFormat = dataFormat.split(\":\")\r\n        const columnType = columnTypeFormat[0]\r\n        const columnFormat = columnTypeFormat[1]\r\n        let columnFormated = row[column.fieldName]\r\n        if (columnType === \"date\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        if (columnType === \"datetime\") {\r\n          columnFormated = Moment(field).format(\"DD MMM YYYY HH:mm\")\r\n          if (columnFormat) {\r\n            columnFormated = Moment(field).format(columnFormat)\r\n          }\r\n        }\r\n        return columnFormated\r\n      }\r\n    }\r\n    return row[column.fieldName]\r\n  }\r\n\r\n  const progLangImg = {\r\n    python:\r\n      \"https://logos-download.com/wp-content/uploads/2016/10/Python_logo_wordmark.png\",\r\n    javascript: \"https://javascriptsu.files.wordpress.com/2020/12/js.jpg\",\r\n    react:\r\n      \"https://logos-download.com/wp-content/uploads/2016/09/React_logo_wordmark.png\",\r\n    angular:\r\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSQgREvN-e1uVZXVDc2w_zLeey0Li4buQ26gF0ZmCYxaBMoybo4uQTncS3Z5WxHRyZNfA&usqp=CAU\",\r\n    flask: \"https://miro.medium.com/max/1079/1*nvtdCw77Al6LgV8wt_ma6Q.png\"\r\n  }\r\n  const columns = [\r\n    {\r\n      name: t(\"App Name\"),\r\n      sortField: \"name\",\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[\"name\"],\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {row.logo?.appLogo ? (\r\n            <Avatar\r\n              className=\"me-1\"\r\n              img={row?.logo?.appLogo}\r\n              width=\"32\"\r\n              height=\"32\"\r\n              imgHeight=\"25\"\r\n              imgWidth=\"30\"\r\n              color={\"light-primary\"}\r\n            />\r\n          ) : !row.is_uploading ? (\r\n            <Avatar\r\n              initials\r\n              className=\"me-1\"\r\n              color={\"light-primary\"}\r\n              content={row.name || \"John Doe\"}\r\n            />\r\n          ) : (\r\n            <Spinner size=\"sm\" color=\"primary\" />\r\n          )}\r\n\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"fw-bolder\">{row.name}</span>\r\n            <small className=\"text-truncate text-muted mb-0\">{row.code}</small>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: t(\"App Type\"),\r\n      center: false,\r\n      sortable: false,\r\n      selector: (row) => row[\"info\"][\"appType\"],\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {row?.info?.appType === \"service\" ? (\r\n            <ApiIcon className=\"me-1\" sixe={32} />\r\n          ) : (\r\n            <WebIcon className=\"me-1\" sixe={32} />\r\n          )}\r\n          <div className=\"d-flex flex-column\">\r\n            <span className=\"fw-bolder\">{row?.info?.appType}</span>\r\n          </div>\r\n        </div>\r\n      )\r\n    },\r\n    {\r\n      name: t(\"Framework\"),\r\n      center: false,\r\n      sortable: false,\r\n      selector: (row) => row[\"info\"][\"programming_language\"][\"main_language\"],\r\n      cell: (row) => (\r\n        <div className=\"d-flex justify-content-left align-items-center\">\r\n          {progLangImg[row?.info?.programming_language?.main_language] && (\r\n            <img\r\n              className=\"me-1\"\r\n              src={progLangImg[row?.info?.programming_language?.main_language]}\r\n              // width=\"60\"\r\n              height=\"18\"\r\n            />\r\n          )}\r\n          {progLangImg[row?.info?.programming_language?.framework] && (\r\n            <img\r\n              className=\"me-1\"\r\n              src={progLangImg[row?.info?.programming_language?.framework]}\r\n              // width=\"60\"\r\n              height=\"18\"\r\n            />\r\n          )}\r\n        </div>\r\n      )\r\n    },\r\n    ...store.dynamicColumns.map((column) => ({\r\n      name: column.columnName,\r\n      sortField: column.fieldName,\r\n      center: false,\r\n      sortable: true,\r\n      selector: (row) => row[column.fieldName],\r\n      cell: (row) => renderCell(row, column)\r\n    })),\r\n    {\r\n      name: t(\"Actions\"),\r\n      center: true,\r\n      width: \"140px\",\r\n      cell: (row) => (\r\n        <GlobalActionsTable\r\n          row={row}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n          storeName={storeName}\r\n        />\r\n      )\r\n    }\r\n  ]\r\n\r\n  const tableColumns = useMemo(\r\n    () =>\r\n      store.isLoading\r\n        ? columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column,\r\n            sortable: false,\r\n            cell: (row) => (\r\n              <Skeleton\r\n                sx={{ bgcolor: colors.dark.light }}\r\n                animation=\"wave\"\r\n                className={column.name === \"Actions\" ? \"ms-2\" : \"\"}\r\n                width={column.name === \"Actions\" ? 10 : \"100%\"}\r\n                height={40}\r\n              />\r\n            )\r\n          }))\r\n        : columns.map((column) => ({\r\n            name: t(column.name),\r\n            ...column\r\n          })),\r\n    [store.isLoading, columns]\r\n  )\r\n\r\n  const dataToRender = () => {\r\n    const filters = {\r\n      search: searchTerm\r\n    }\r\n    const isFiltered = Object.keys(filters).some(function (k) {\r\n      return filters[k].length > 0\r\n    })\r\n    if (!store.isLoading) {\r\n      if (store.data.length > 0) {\r\n        return store.data\r\n      } else if (store.data.length === 0 && isFiltered) {\r\n        return []\r\n      } else {\r\n        // console.log(store.allData)\r\n        // return store.allData.slice(0, rowsPerPage)\r\n      }\r\n    } else {\r\n      return Array(10).fill({})\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      setLoadingText(`${t(\"Loading Data\")} ${t(pageTitle)}`)\r\n      dispatch(\r\n        getDataList({\r\n          sort_dir,\r\n          sort,\r\n          search: searchTerm,\r\n          page: currentPage,\r\n          length: rowsPerPage\r\n        })\r\n      )\r\n    }\r\n  }, [dispatch, store.data.length, sort_dir, sort, currentPage])\r\n\r\n  return (\r\n    <Fragment>\r\n      <UILoader blocking={loading} loader={<Loader />}>\r\n        <Card className=\"overflow-hidden\">\r\n          <div className=\"react-dataTable react-dataTable-selectable-rows\">\r\n            <DataTable\r\n              noHeader\r\n              subHeader\r\n              sortServer\r\n              responsive\r\n              pagination\r\n              paginationServer\r\n              paginationTotalRows={store.total}\r\n              paginationComponent={CustomPagination}\r\n              selectableRows\r\n              onSelectedRowsChange={handleRowSelected}\r\n              selectableRowsHighlight\r\n              // onRowClicked={handleRowSelected}\r\n              clearSelectedRows={toggleCleared}\r\n              selectableRowsComponent={BootstrapCheckbox}\r\n              noDataComponent={<NoDataDisplay />}\r\n              // fixedHeader\r\n              // fixedHeaderScrollHeight=\"600px\"\r\n              style={{ \"min-height\": \"400px\" }}\r\n              highlightOnHover\r\n              pointerOnHover\r\n              columns={tableColumns}\r\n              onSort={handleSort}\r\n              sortIcon={<ChevronDown />}\r\n              className=\"react-dataTable\"\r\n              data={dataToRender()}\r\n              subHeaderComponent={\r\n                <CustomHeader\r\n                  store={store}\r\n                  searchTerm={searchTerm}\r\n                  rowsPerPage={rowsPerPage}\r\n                  handleFilter={handleFilter}\r\n                  handlePerPage={handlePerPage}\r\n                  toggleSidebar={toggleSidebar}\r\n                  selectedRow={selectedRows}\r\n                  handleDeleteSelected={handleDeleteSelected}\r\n                />\r\n              }\r\n            />\r\n          </div>\r\n        </Card>\r\n\r\n        {/* <Sidebar open={sidebarOpen} toggleSidebar={toggleSidebar} /> */}\r\n      </UILoader>\r\n\r\n      {showModal && (\r\n        <ModalAddEdit\r\n          formState={formState}\r\n          show={showModal}\r\n          setShow={toggleSidebar}\r\n          detailPage={false}\r\n          setFormState={setFormState}\r\n        />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}