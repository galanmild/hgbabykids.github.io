{"version":3,"sources":["views/apps/app/store/index.js","views/apps/app/DropDown.js"],"names":["axios","useJwt","ssoAxiosInterceptor","pageTitle","storeName","endpointName","serverSideGrid","detailFromGrid","getAlwaysGrid","getApiAfterPut","getApiAfterPost","getApiAfterDelete","getApiSummaryData","detailPage","dynamicColumns","dynamicForm","getSummaryData","createAsyncThunk","params","Object","keys","forEach","key","get","response","data","getDataList","total","getDataById","id","rejectWithValue","resetSelectedData","a","postData","user","dispatch","getState","post","pushCurrentdata","resetData","console","error","putData","selectedData","put","putCurrentdata","deleteData","delete","deleteSelectedRowData","setDataById","rowData","newData","updateCurrentdata","StoreSlice","createSlice","name","initialState","statusSummary","isLoadingSummary","errorSummary","dataSummary","status","isLoading","dataDropdown","statusDetail","isLoadingDetail","errorDetail","statusAddEdit","isLoadingAddEdit","errorAddEdit","statusDelete","isLoadingDelete","errorDelete","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","length","map","item","value","label","unshift","objIndex","current","findIndex","obj","parseInt","List","lookupMode_fieldName","lookupMode_isMulti","lookupMode_onChange","lookupMode_defaultValue","t","useTranslation","useDispatch","store","useSelector","useEffect","theme","selectThemeColors","defaultValue","filter","el","placeholder","isMulti","onChange","e","options","className","classnames","classNamePrefix"],"mappings":"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","file":"static/js/48.0126bdf3.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from \"@reduxjs/toolkit\"\r\n// import axios from \"axios\"\r\nimport { resetData } from \"../../../my-info/store/my_activities\"\r\nimport useJwt from \"@src/auth/jwt/useJwt\"\r\nconst axios = useJwt.ssoAxiosInterceptor\r\nexport const pageTitle = \"App\" ////\r\nexport const storeName = \"apps_app\" ////\r\nexport const endpointName = \"api/app\" ////\r\n\r\nexport const serverSideGrid = true ////\r\nexport const detailFromGrid = true //// GET DETAIL DATA FROM EXISTING DATA GRID (FASTER PEFORMANCE)\r\nexport const getAlwaysGrid = false //// GET ALWAYS GRID DATA EVERY CLICK MENU OR OPEN PAGE\r\nexport const getApiAfterPut = false ////\r\nexport const getApiAfterPost = false ////\r\nexport const getApiAfterDelete = true ////\r\nexport const getApiSummaryData = true //// GET SUMMARY DATA FROM BACKEND API\r\nexport const detailPage = true //// IF TRUE { WILL BE ACTIVATED DETAIL PAGE AND MENU ACTION BUTTON } ELSE { DETAIL PAGE SHOW ON MODAL }\r\n\r\n///////DYNAMIC COLUMNS FOR TABLE\r\n///////if there are several fields that will be customised, don't set them here but add them to the Table.js component in the column section\r\nexport const dynamicColumns = [\r\n  // {\r\n  //   columnName: \"Name\", //// Title Of Column\r\n  //   fieldName: \"name\" //// name of field from api\r\n  // },\r\n  // {\r\n  //   columnName: \"Code\",\r\n  //   fieldName: \"code\"\r\n  // }\r\n  // {\r\n  //   columnName: \"Created Date\",\r\n  //   fieldName: \"created_date\",\r\n  //   dataFormat: \"date:DD MMM YYYY\" //// Type Of Data and format, leave null or delete if type is string. Choices => ['date', 'date:DD MMM YYYY', '', '', '', '', ''] *see moment.js pattern for date/datetime.\r\n  // }\r\n]\r\n\r\n///////DYNAMIC FORM FOR MODAL\r\n///////if the fields display on the modal form matches the number of fields in the columns, leave this section filled with an empty array \" dynamicForm = [] \". Or if you want to customize, do it on the modal/index.js component\r\nexport const dynamicForm = []\r\n\r\nexport const getSummaryData = createAsyncThunk(\r\n  `${endpointName}/getSummaryData`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}/summary`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataList = createAsyncThunk(\r\n  `${endpointName}/getDataList`,\r\n  async (params) => {\r\n    Object.keys(params).forEach((key) => {\r\n      if (params[key] === null || params[key] === \"\") {\r\n        delete params[key]\r\n      }\r\n    })\r\n    const response = await axios.get(`/${endpointName}`, {\r\n      params\r\n    })\r\n    return {\r\n      params,\r\n      data: response.data.data,\r\n      total: response.data.total\r\n    }\r\n  }\r\n)\r\n\r\nexport const getDataById = createAsyncThunk(\r\n  `${endpointName}/getDataById`,\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(`/${endpointName}/${id}`)\r\n      return response.data.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const resetSelectedData = createAsyncThunk(\r\n  `${endpointName}/resetSelectedData`,\r\n  async ({ rejectWithValue }) => {\r\n    return rejectWithValue({})\r\n  }\r\n)\r\n\r\nexport const postData = createAsyncThunk(\r\n  `${endpointName}/postData`,\r\n  async (user, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`/${endpointName}`, user)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPost) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n      } else {\r\n        dispatch(pushCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      console.error(error)\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putData = createAsyncThunk(\r\n  `${endpointName}/putData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    const id = getState()[storeName].selectedData.id\r\n    try {\r\n      const response = await axios.put(`/${endpointName}/${id}`, data)\r\n      dispatch(resetSelectedData({}))\r\n      if (getApiAfterPut) {\r\n        dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      } else {\r\n        dispatch(putCurrentdata(response.data))\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteData = createAsyncThunk(\r\n  `${endpointName}/deleteData`,\r\n  async (id, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}/${id}`)\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteSelectedRowData = createAsyncThunk(\r\n  `${endpointName}/deleteSelectedRowData`,\r\n  async (data, { dispatch, getState, rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/${endpointName}`, { data })\r\n      if (getApiAfterDelete) {\r\n        await dispatch(getDataList(getState()[storeName].params))\r\n        if (getApiSummaryData) {\r\n          dispatch(getSummaryData({}))\r\n        }\r\n      }\r\n      dispatch(resetData({}))\r\n      return response.data\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const setDataById = createAsyncThunk(\r\n  `${endpointName}/setDataById`,\r\n  async (rowData, { rejectWithValue }) => {\r\n    return rejectWithValue(rowData)\r\n  }\r\n)\r\n\r\nexport const pushCurrentdata = createAsyncThunk(\r\n  `${endpointName}/pushCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const putCurrentdata = createAsyncThunk(\r\n  `${endpointName}/putCurrentdata`,\r\n  async (newData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return newData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nexport const updateCurrentdata = createAsyncThunk(\r\n  `${endpointName}/updateCurrentdata`,\r\n  async (putData, { rejectWithValue }) => {\r\n    try {\r\n      // dispatch(resetData({}))\r\n      return putData\r\n    } catch (error) {\r\n      return rejectWithValue(error.response.data)\r\n    }\r\n  }\r\n)\r\n\r\nconst fetchStatus = \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n\r\nexport const StoreSlice = createSlice({\r\n  name: storeName,\r\n  initialState: {\r\n    dynamicColumns,\r\n    pageTitle,\r\n    // SUMMARY\r\n    statusSummary: fetchStatus,\r\n    isLoadingSummary: false,\r\n    errorSummary: \"\" | null,\r\n    dataSummary: [],\r\n\r\n    // ALL\r\n    status: fetchStatus,\r\n    isLoading: false,\r\n    error: \"\" | null,\r\n    data: [],\r\n    total: 1,\r\n\r\n    params: {},\r\n    selectedData: null,\r\n    dataDropdown: [],\r\n\r\n    // DETAIL\r\n    statusDetail: fetchStatus,\r\n    isLoadingDetail: false,\r\n    errorDetail: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusAddEdit: fetchStatus,\r\n    isLoadingAddEdit: false,\r\n    errorAddEdit: \"\" | null,\r\n\r\n    // ADD&EDIT\r\n    statusDelete: fetchStatus,\r\n    isLoadingDelete: false,\r\n    errorDelete: \"\" | null\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      ///SUMMARY\r\n      .addCase(getSummaryData.pending, (state) => {\r\n        state.statusSummary = \"loading\"\r\n        state.isLoadingSummary = true\r\n      })\r\n      .addCase(getSummaryData.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.statusSummary = \"succeeded\"\r\n        state.isLoadingSummary = false\r\n        state.dataSummary = action.payload.data\r\n      })\r\n      .addCase(getSummaryData.rejected, (state, action) => {\r\n        state.statusSummary = \"failed\"\r\n        state.isLoadingSummary = false\r\n        state.errorSummary = action.error.message\r\n      })\r\n\r\n      ///ALL\r\n      .addCase(getDataList.pending, (state) => {\r\n        state.status = \"loading\"\r\n        state.isLoading = true\r\n      })\r\n      .addCase(getDataList.fulfilled, (state, action) => {\r\n        // console.log(action.payload)\r\n        state.status = \"succeeded\"\r\n        state.isLoading = false\r\n        if (action.payload.data.length > 0) {\r\n          state.data = action.payload.data\r\n          state.dataDropdown = action.payload.data.map((item) => ({\r\n            value: item.id,\r\n            label: `${item.name}`\r\n          }))\r\n          // state.selectedData = action.payload.data[0]\r\n        }\r\n        state.params = action.payload.params\r\n        state.total = action.payload.total\r\n      })\r\n      .addCase(getDataList.rejected, (state, action) => {\r\n        state.status = \"failed\"\r\n        state.isLoading = false\r\n        state.error = action.error.payload?.message\r\n      })\r\n\r\n      ///EDIT\r\n      .addCase(putData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(putData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(putData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///ADD\r\n      .addCase(postData.pending, (state) => {\r\n        state.statusAddEdit = \"loading\"\r\n        state.isLoadingAddEdit = true\r\n      })\r\n      .addCase(postData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusAddEdit = \"succeeded\"\r\n        state.isLoadingAddEdit = false\r\n      })\r\n      .addCase(postData.rejected, (state, action) => {\r\n        state.statusAddEdit = \"failed\"\r\n        state.isLoadingAddEdit = false\r\n        state.errorAddEdit = action.payload?.message\r\n      })\r\n\r\n      ///DELETE\r\n      .addCase(deleteData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DELETE-SELECTED-ROW\r\n      .addCase(deleteSelectedRowData.pending, (state) => {\r\n        state.statusDelete = \"loading\"\r\n        state.isLoadingDelete = true\r\n      })\r\n      .addCase(deleteSelectedRowData.fulfilled, (state) => {\r\n        // console.log(action.payload)\r\n        state.statusDelete = \"succeeded\"\r\n        state.isLoadingDelete = false\r\n      })\r\n      .addCase(deleteSelectedRowData.rejected, (state, action) => {\r\n        state.statusDelete = \"failed\"\r\n        state.isLoadingDelete = false\r\n        state.errorDelete = action.payload?.message\r\n      })\r\n\r\n      ///DETAIL\r\n      .addCase(getDataById.pending, (state) => {\r\n        state.statusDetail = \"loading\"\r\n        state.isLoadingDetail = true\r\n      })\r\n      .addCase(getDataById.fulfilled, (state, action) => {\r\n        state.statusDetail = \"succeeded\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = action.payload\r\n      })\r\n      .addCase(getDataById.rejected, (state, action) => {\r\n        state.statusDetail = \"failed\"\r\n        state.isLoadingDetail = false\r\n        state.selectedData = null\r\n        state.errorDetail = action.payload?.message\r\n      })\r\n\r\n      ///OTHERS\r\n      .addCase(resetSelectedData.rejected, (state) => {\r\n        state.selectedData = null\r\n      })\r\n      .addCase(setDataById.rejected, (state, action) => {\r\n        state.selectedData = action.payload\r\n      })\r\n\r\n      .addCase(pushCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action.payload.data)\r\n        // console.log(state.data)\r\n        state.data.unshift(action.payload.data)\r\n      })\r\n\r\n      .addCase(putCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload.data[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload.data[\"id\"])\r\n        )\r\n        // console.log(state.data[objIndex])\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"is_uploading\"] = null\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex] = action.payload.data\r\n        }\r\n      })\r\n\r\n      .addCase(updateCurrentdata.fulfilled, (state, action) => {\r\n        // console.log(action)\r\n        // console.log(action.payload[\"id\"])\r\n        // console.log(current(state).data)\r\n        const objIndex = current(state).data.findIndex(\r\n          (obj) => obj.id === parseInt(action.payload[\"id\"])\r\n        )\r\n        // console.log(objIndex)\r\n        if (objIndex !== -1) {\r\n          // state.data[objIndex][\"logo\"][\"appLogo\"][\"is_uploading\"] = null\r\n          state.data[objIndex][\"logo\"][\"appLogo\"] = action.payload[\"file\"]\r\n        }\r\n      })\r\n  }\r\n})\r\n\r\nexport default StoreSlice.reducer\r\n","import { Fragment, useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport \"./style.scss\"\r\nimport { selectThemeColors } from \"@utils\"\r\nimport classnames from \"classnames\"\r\nimport Select from \"react-select\"\r\n\r\nimport { storeName, getDataList, getAlwaysGrid, pageTitle } from \"./store\"\r\n\r\nconst List = ({\r\n  lookupMode_fieldName = \"\",\r\n  lookupMode_isMulti = false,\r\n  lookupMode_onChange,\r\n  lookupMode_defaultValue\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const dispatch = useDispatch()\r\n  const store = useSelector((state) => state[storeName])\r\n\r\n  const onChangeInput = (e) => {\r\n    return lookupMode_onChange(e.value, lookupMode_fieldName)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (store.data.length === 0 || (!store.isLoading && getAlwaysGrid)) {\r\n      dispatch(getDataList({}))\r\n    }\r\n  }, [dispatch, store.data.length])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Select\r\n        theme={selectThemeColors}\r\n        defaultValue={\r\n          !lookupMode_isMulti\r\n            ? store.dataDropdown.filter(\r\n                (el) => el.value === lookupMode_defaultValue\r\n              )\r\n            : lookupMode_defaultValue\r\n        }\r\n        placeholder={`${t(\"Filter\")} ${t(pageTitle)}...`}\r\n        isMulti={lookupMode_isMulti}\r\n        // onChange={lookupMode_onChange}\r\n        onChange={onChangeInput}\r\n        options={store.dataDropdown}\r\n        className={classnames(\"react-select\", {\r\n          \"is-invalid\": store.selectedData?.id === null\r\n        })}\r\n        classNamePrefix=\"select\"\r\n      />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default List\r\n"],"sourceRoot":""}